#source:examples/prob_examples/public_examples/EventBPrologPackages/ProofDirected/model/mc01.zip_unpacked/pomc_diss/m4_proofsupport.bcm
1.73519482E8,1.08514195E8,-1.0,1.6020626633333334E8:not((ok<:STATES) & (broken<:STATES) & (unknown<:STATES) & (result:MC_STATE) & (counterexample<:STATES) & (ok<:preserve) & (broken<:violate) & (partition(STATES,ok,broken,unknown)) & (result/=running=>ok=STATES or counterexample/=({} oftype POW(STATES))) & (mcpc1:APC_MC1) & (current<:unknown) & (queue<:unknown) & (current/\queue=({} oftype POW(STATES))) & (invs:STATES <-> INVARIANTS) & (!s oftype STATES,i oftype INVARIANTS.s |-> i/:truth=>s |-> i:invs) & (!s oftype STATES.s:STATES=>(s/:preserve=>(#i oftype INVARIANTS.s |-> i:invs)))) => (broken=({} oftype POW(STATES))) & (unknown=({} oftype POW(STATES)))
7.227138833333333E7,1.74318745E8,-1.0,1.4557817266666666E8:(ok<:STATES) & (broken<:STATES) & (unknown<:STATES) & (result:MC_STATE) & (counterexample<:STATES) & (ok<:preserve) & (broken<:violate) & (partition(STATES,ok,broken,unknown)) & (result/=running=>ok=STATES or counterexample/=({} oftype POW(STATES))) & (mcpc1:APC_MC1) & (current<:unknown) & (queue<:unknown) & (current/\queue=({} oftype POW(STATES))) & (invs:STATES <-> INVARIANTS) & (!s oftype STATES,i oftype INVARIANTS.s |-> i/:truth=>s |-> i:invs) & (!s oftype STATES.s:STATES=>(s/:preserve=>(#i oftype INVARIANTS.s |-> i:invs))) & (mcpc1=init) & not((s:current) & (i:invs[{s}]) & (s |-> i:truth) & (mcpc1=check_invariant))
-1.0,-1.0,2.51549679E8,-1.0:(ok<:STATES) & (broken<:STATES) & (unknown<:STATES) & (result:MC_STATE) & (counterexample<:STATES) & (ok<:preserve) & (broken<:violate) & (partition(STATES,ok,broken,unknown)) & (result/=running=>ok=STATES or counterexample/=({} oftype POW(STATES))) & (mcpc1:APC_MC1) & (current<:unknown) & (queue<:unknown) & (current/\queue=({} oftype POW(STATES))) & (invs:STATES <-> INVARIANTS) & (!s oftype STATES,i oftype INVARIANTS.s |-> i/:truth=>s |-> i:invs) & (!s oftype STATES.s:STATES=>(s/:preserve=>(#i oftype INVARIANTS.s |-> i:invs))) & (s:current) & (i:invs[{s}]) & (invs[{t}]=({} oftype POW(INVARIANTS))) & (t |-> s |-> e:labels) & (e |-> i:discharged) & (mcpc1=check_invariant) & (s:broken)
-1.0,-1.0,1.4509133266666666E8,-1.0:(ok<:STATES) & (broken<:STATES) & (unknown<:STATES) & (result:MC_STATE) & (counterexample<:STATES) & (ok<:preserve) & (broken<:violate) & (partition(STATES,ok,broken,unknown)) & (result/=running=>ok=STATES or counterexample/=({} oftype POW(STATES))) & (mcpc1:APC_MC1) & (current<:unknown) & (queue<:unknown) & (current/\queue=({} oftype POW(STATES))) & (invs:STATES <-> INVARIANTS) & (!s oftype STATES,i oftype INVARIANTS.s |-> i/:truth=>s |-> i:invs) & (!s oftype STATES.s:STATES=>(s/:preserve=>(#i oftype INVARIANTS.s |-> i:invs))) & (s:current) & (i:invs[{s}]) & (s |-> i:truth) & (mcpc1=check_invariant) & (i:invs[{s}]) & (s:current) & (s |-> i/:truth) & (mcpc1=check_invariant)
-1.0,-1.0,6.6829541E7,-1.0:(ok<:STATES) & (broken<:STATES) & (unknown<:STATES) & (result:MC_STATE) & (counterexample<:STATES) & (ok<:preserve) & (broken<:violate) & (partition(STATES,ok,broken,unknown)) & (result/=running=>ok=STATES or counterexample/=({} oftype POW(STATES))) & (mcpc1:APC_MC1) & (current<:unknown) & (queue<:unknown) & (current/\queue=({} oftype POW(STATES))) & (invs:STATES <-> INVARIANTS) & (!s oftype STATES,i oftype INVARIANTS.s |-> i/:truth=>s |-> i:invs) & (!s oftype STATES.s:STATES=>(s/:preserve=>(#i oftype INVARIANTS.s |-> i:invs))) & (s:current) & (next=transitions[{s}]/\unknown \ current) & (mcpc1=compute_successors) & (i:invs[{s}]) & (s:current) & (s |-> i/:truth) & (mcpc1=check_invariant)
-1.0,-1.0,9.361826E7,-1.0:(ok<:STATES) & (broken<:STATES) & (unknown<:STATES) & (result:MC_STATE) & (counterexample<:STATES) & (ok<:preserve) & (broken<:violate) & (partition(STATES,ok,broken,unknown)) & (result/=running=>ok=STATES or counterexample/=({} oftype POW(STATES))) & (mcpc1:APC_MC1) & (current<:unknown) & (queue<:unknown) & (current/\queue=({} oftype POW(STATES))) & (invs:STATES <-> INVARIANTS) & (!s oftype STATES,i oftype INVARIANTS.s |-> i/:truth=>s |-> i:invs) & (!s oftype STATES.s:STATES=>(s/:preserve=>(#i oftype INVARIANTS.s |-> i:invs))) & (i:invs[{s}]) & (s:current) & (s |-> i/:truth) & (mcpc1=check_invariant) & (s:broken)
