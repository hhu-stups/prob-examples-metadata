#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/EmergencyDoors/EmergencyDoors_M2.bcm
8.064293633333333E7,9.868985433333333E7,-1.0,1.0621632366666667E8:not(not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN))) => (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN)
8.2246609E7,1.03051396E8,-1.0,7.851659303333334E8:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN)) & not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMD \ command) & (!cmd1 oftype COMD.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))))
8.446211433333333E7,1.0439039333333333E8,-1.0,7.434124826666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMD \ command) & (!cmd1 oftype COMD.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
8.419890566666667E7,1.0507444166666667E8,-1.0,2.878691953333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (d:carriage_door) & (d:locked_doors)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
9.138077766666667E7,1.29266438E8,-1.0,3.190927656666667E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMD.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((cmd:command) & (state:COMD_ST \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL))
8.378591066666667E7,1.1559970966666667E8,-1.0,2.43812103E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMD.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) => not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})))
8.527755766666667E7,1.1724305166666667E8,-1.0,2.44137587E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMD.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) => not((ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMD.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
8.235211566666667E7,1.06941462E8,-1.0,2.64321322E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))) => (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
8.773555166666667E7,1.1308360766666667E8,-1.0,3.323993463333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:carriage_door) & (d:locked_doors)) => (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
7.954493833333333E7,1.0184721566666667E8,-1.0,2.4722277866666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((d:carriage_door) & (d:locked_doors) => not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:carriage_door) & (d:locked_doors)) => (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:carriage_door) & (d:locked_doors)) => (d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
1.19719018E8,9.9696011E7,-1.0,2.34222825E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((d:carriage_door) & (d:locked_doors) => not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
9.1407946E7,1.17056622E8,-1.0,3.642518836666667E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMD,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
7.913802E7,1.0302685833333333E8,-1.0,2.5546107033333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})))
8.463597233333333E7,1.1164343366666667E8,-1.0,2.97887555E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]) & not((ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMD,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door))
1.0014090033333333E8,1.2419200333333333E8,-1.0,3.43141168E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))
1.1170128566666667E8,1.1042307333333333E8,-1.0,1.8976882433333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
8.616610166666667E7,1.1825370133333333E8,-1.0,3.31619195E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMD,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMD \ command) & (!cmd1 oftype COMD.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
8.665222033333333E7,1.1515640366666667E8,-1.0,3.883132766666667E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMD \ command) & (!cmd1 oftype COMD.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))) => (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMD,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMD \ command) & (!cmd1 oftype COMD.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (cmd:command) & (state:COMD_ST \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (state:COMD_ST \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (state:COMD_ST \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPEN_DEV) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMD) & (command_type:command --> COMD_TYPE) & (command_state:command --> COMD_ST) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPEN_DEV.d:carriage_door&opDev:OPEN_DEV&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMD.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMD,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMD,cmd2 oftype COMD.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR))) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
