#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/Train/Train.bcm
5.2378960666666664E7,6.4531343666666664E7,-1.0,7.6520764E7:not(not((t:TRAIN) & (ds:POW(DOOR)) & (t:dom(door)) & (speed(t)=0) & (ds<:door(t)) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))))) => not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]))
6.4874404E7,4.1863400666666664E7,-1.0,2.44305113E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (t1:TRAIN) & (s1:INT) & (s1:NAT) & (t1:dom(door)) & (t1:braking=>s1<speed(t1)) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & not((t:TRAIN) & (ds:POW(DOOR)) & (t:dom(door)) & (speed(t)=0) & (ds<:door(t)) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))))
6.2421648E7,6.0751207333333336E7,-1.0,1.7905905966666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (t1:TRAIN) & (t1:braking) & (emergency_button(t1)=FALSE) & not((t:TRAIN) & (ds:POW(DOOR)) & (t:dom(door)) & (speed(t)=0) & (ds<:door(t)) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (t:TRAIN) & (ds:POW(DOOR)) & (t:dom(door)) & (speed(t)=0) & (ds<:door(t)) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
