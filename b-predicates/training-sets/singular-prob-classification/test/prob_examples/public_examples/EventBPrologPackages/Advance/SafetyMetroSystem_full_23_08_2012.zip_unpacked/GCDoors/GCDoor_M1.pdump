#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/GCDoors/GCDoor_M1.bcm
1.0766136333333333E8,7.205120133333333E7,-1.0,1.84928591E8:not((ds/\generic_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=GEN_DOOR_CARRIAGE~[{c}])) => not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))))
6.3646664333333336E7,7.609678133333333E7,-1.0,1.8088089266666666E8:not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd)))) & (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
5.9233952333333336E7,7.4646131E7,8.088461066666667E7,1.0551127566666667E8:not(not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))))) => not((ds<:obstructed_door) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}) & (st:{SUCCESS,FAIL}) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}))
5.6439020666666664E7,6.7418536E7,1.5950808633333334E8,6.919655566666667E7:not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd)))) => not((d:generic_door \ locked_doors) & (generic_door_state(d)=CLOSED))
-1.0,-1.0,1.1468424863333333E9,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:generic_door) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={CLOSED}) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))
6.1260979333333336E7,6.5679674666666664E7,-1.0,1.59964383E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:generic_door) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={CLOSED}) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (d:generic_door) & (d:locked_doors)
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:generic_door) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={CLOSED}) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,8.4382332E7,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:generic_door) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={CLOSED}) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:obstructed_door) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}) & (st:{SUCCESS,FAIL}) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED})
6.5667848E7,4.5840745333333336E7,-1.0,1.43549749E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (not((ds<:generic_door) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={CLOSED}) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))) => (ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door))
6.3379172E7,8.481004E7,-1.0,4.51157628E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:generic_door) & (cmd_type:COMMAND_TYPE) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & not((ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))))
7.564507066666667E7,5.5672326666666664E7,-1.0,1.2123010193333333E9:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (d:generic_door) & (d:locked_doors)
-1.0,-1.0,4.36151413E8,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds/\generic_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=GEN_DOOR_CARRIAGE~[{c}])
-1.0,-1.0,1.62041881E8,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,7.061507833333333E7,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (d:generic_door) & (d:locked_doors) & (d:generic_door \ locked_doors) & (generic_door_state(d)=CLOSED)
-1.0,-1.0,2.1059167733333334E8,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:generic_door) & (generic_door_state[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
6.1977760666666664E7,6.4595481333333336E7,-1.0,1.5168381366666666E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (not((ds<:obstructed_door) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}) & (st:{SUCCESS,FAIL}) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED})) => (d:generic_door \ locked_doors) & (generic_door_state(d)=CLOSED))
