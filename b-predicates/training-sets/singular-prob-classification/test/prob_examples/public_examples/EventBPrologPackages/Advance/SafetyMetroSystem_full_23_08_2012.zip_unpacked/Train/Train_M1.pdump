#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/Train/Train_M1.bcm
-1.0,-1.0,-1.0,-1.0:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]])) => (t:dom(door)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]<:door(t)) & (DOOR_CARRIAGE~[{c}]/=({} oftype POW(DOOR))) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED})
6.1207620333333336E7,2.0329088833333334E8,-1.0,7.793130443333334E8:not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE)) => not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & not((trns:POW(TRAIN)) & (door_state:POW(DOOR ** DOOR_STATE)) & (braking:POW(TRAIN)) & (speed:POW(TRAIN ** INT)) & (permit:POW(TRAIN ** BOOL)) & (door:POW(TRAIN ** POW(DOOR))) & (emergency_button:POW(TRAIN ** BOOL)) & (!t oftype TRAIN.t:dom(door)&door(t)/\door_state~[{OPEN}]=({} oftype POW(DOOR))=>door(t)<:door_state~[{CLOSED}]))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t1:TRAIN) & (s1:INT) & (s1:NAT) & (t1:dom(door)) & (t1:braking=>s1<speed(t1)) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door(t1)/=({} oftype POW(DOOR))) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)
6.4130525E7,7.059103E7,-1.0,3.11121058E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t1:TRAIN) & (s1:INT) & (s1:NAT) & (t1:dom(door)) & (t1:braking=>s1<speed(t1)) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door(t1)/=({} oftype POW(DOOR))) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t1:TRAIN) & (s1:INT) & (s1:NAT) & (t1:dom(door)) & (t1:braking=>s1<speed(t1)) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door(t1)/=({} oftype POW(DOOR))) & not((t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t1:TRAIN) & (s1:INT) & (s1:NAT) & (t1:dom(door)) & (t1:braking=>s1<speed(t1)) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door(t1)/=({} oftype POW(DOOR))) & (t1:trns) & (bb:BOOL)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (not((t1:TRAIN) & (s1:INT) & (s1:NAT) & (t1:dom(door)) & (t1:braking=>s1<speed(t1)) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door(t1)/=({} oftype POW(DOOR)))) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (not((t1:TRAIN) & (s1:INT) & (s1:NAT) & (t1:dom(door)) & (t1:braking=>s1<speed(t1)) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door(t1)/=({} oftype POW(DOOR)))) => (t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (not((t1:TRAIN) & (s1:INT) & (s1:NAT) & (t1:dom(door)) & (t1:braking=>s1<speed(t1)) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door(t1)/=({} oftype POW(DOOR)))) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (oc<:CDV) & (ocA:oc) & (finite(oc)) & (card(oc)=card(train_carriage~[{t}])))
3.32231354E8,9.9844354E7,-1.0,3.64922825E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & not((t:TRAIN) & (ds:POW(DOOR)) & (t:dom(door)) & (speed(t)=0) & (ds<:door(t)) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
6.7060972333333336E7,5.0675182333333336E7,-1.0,2.948585383333333E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
2.15203041E8,9.552425166666667E7,-1.0,3.573375266666667E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & not((t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (permit(t1)=TRUE) & not((t1:trns) & (bb:BOOL))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (permit(t1)=TRUE) & (t:dom(door)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]<:door(t)) & (DOOR_CARRIAGE~[{c}]/=({} oftype POW(DOOR))) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (not((t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (permit(t1)=TRUE)) => (t:dom(door)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]<:door(t)) & (DOOR_CARRIAGE~[{c}]/=({} oftype POW(DOOR))) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (not((t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (permit(t1)=TRUE)) => (t:TRAIN) & (ds:POW(DOOR)) & (t:dom(door)) & (speed(t)=0) & (ds<:door(t)) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))))
5.5137435E7,1.05144469E8,-1.0,2.0704134236666667E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (permit(t1)=TRUE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t1:trns) & (bb:BOOL) & (t:dom(door)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]<:door(t)) & (DOOR_CARRIAGE~[{c}]/=({} oftype POW(DOOR))) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t:dom(door)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]<:door(t)) & (DOOR_CARRIAGE~[{c}]/=({} oftype POW(DOOR))) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door)&tr/=t&door(tr)/=({} oftype POW(DOOR))=>DOOR_CARRIAGE~[{c}]/\door(tr)=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door(t)=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t:dom(door)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]<:door(t)) & (DOOR_CARRIAGE~[{c}]/=({} oftype POW(DOOR))) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t:dom(door)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]<:door(t)) & (DOOR_CARRIAGE~[{c}]/=({} oftype POW(DOOR))) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t:dom(door)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]<:door(t)) & (DOOR_CARRIAGE~[{c}]/=({} oftype POW(DOOR))) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & not((t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (t:TRAIN) & (ds:POW(DOOR)) & (t:dom(door)) & (speed(t)=0) & (ds<:door(t)) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (oc<:CDV) & (ocA:oc) & (finite(oc)) & (card(oc)=card(train_carriage~[{t}])))
7.164616866666667E7,6.324077E7,-1.0,5.164429076666667E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door)&tr/=t&door(tr)/=({} oftype POW(DOOR))=>DOOR_CARRIAGE~[{c}]/\door(tr)=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door(t)=({} oftype POW(DOOR)))) => (t1:TRAIN) & (t1:dom(door)) & (c1:CDV) & (c2:CDV) & (speed(t1)>0) & (door(t1)/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (oc<:CDV) & (ocA:oc) & (finite(oc)) & (card(oc)=card(train_carriage~[{t}])) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (ds:POW(DOOR)) & (t:dom(door)) & (speed(t)=0) & (occpTrns/\PLATFORM/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (ds<:door(t)) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
