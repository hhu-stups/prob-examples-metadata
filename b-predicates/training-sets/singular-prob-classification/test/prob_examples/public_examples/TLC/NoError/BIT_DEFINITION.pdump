#source:examples/prob_examples/public_examples/TLC/NoError/BIT_DEFINITION.mch
5.5279329333333336E7,7.3475196E7,6.4666324E7,9.198378733333333E7:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => !bb.(bb:BIT => bit_not(bit_not(bb))=bb)
5.4945791E7,6.960093633333333E7,4.7322126E7,1.28449132E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => ran(bit_and)=BIT
6.4023900666666664E7,6.3214696E7,1.0892253333333333E8,1.9552342066666666E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & !b1.(b1:BIT => bit_or(0,b1)=b1)
5.9248386E7,5.3876567E7,-1.0,1.6205317233333334E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(ran(bit_xor)=BIT)
5.5172286E7,6.933428266666667E7,8.361640566666667E7,5.9335362E7:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bool_bit)=BOOL
-1.0,-1.0,-1.0,-1.0:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => (!bb.(bb:BIT => bit_not(bb)=1-bb)) & (dom(bit_and)=BIT*BIT) & (ran(bit_not)=BIT) & (bit_not(0)=1) & (bit_not(1)=0) & (!bb.(bb:BIT => bit_not(bit_not(bb))=bb)) & (dom(bit_and)=BIT*BIT) & (ran(bit_and)=BIT) & (bit_and(0,0)=0) & (bit_and(0,1)=0) & (bit_and(1,0)=0) & (bit_and(1,1)=1) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=bit_and(b2,b1))) & (!b1,b2.(b1:BIT&b2:BIT&bit_and(b1,b2)=1 => bit_and(b2,b1)=1)) & (!b1,b2.(b1:BIT&b2:BIT&bit_and(b1,b2)=0 => bit_and(b2,b1)=0)) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT => bit_and(b1,bit_and(b2,b3))=bit_and(bit_and(b1,b2),b3))) & (!b1.(b1:BIT => bit_and(b1,1)=b1)) & (!b1.(b1:BIT => bit_and(b1,0)=0)) & (dom(bit_or)=BIT*BIT) & (ran(bit_or)=BIT) & (bit_or(0,0)=0) & (bit_or(0,1)=1) & (bit_or(1,0)=1) & (bit_or(1,1)=1) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=bit_or(b2,b1))) & (!b1,b2.(b1:BIT&b2:BIT&bit_or(b1,b2)=1 => bit_or(b2,b1)=1)) & (!b1,b2.(b1:BIT&b2:BIT&bit_or(b1,b2)=0 => bit_or(b2,b1)=0)) & (!b1,b2.(b1:BIT&b2:BIT&bit_or(b1,0)=1 => b1=1)) & (!b1,b2.(b1:BIT&b2:BIT&bit_or(b1,0)=0 => b1=0)) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT => bit_or(b1,bit_or(b2,b3))=bit_or(bit_or(b1,b2),b3))) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT&bit_or(b1,b2)=1 => bit_or(b1,bit_or(b2,b3))=1)) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT&bit_or(b1,b2)=1 => bit_or(b1,bit_or(b2,b3))=bit_or(1,b3))) & (!b1.(b1:BIT => bit_or(b1,1)=1)) & (!b1.(b1:BIT => bit_or(b1,0)=b1)) & (!b1.(b1:BIT => bit_or(1,b1)=1)) & (!b1.(b1:BIT => bit_or(0,b1)=b1)) & (dom(bit_xor)=BIT*BIT) & (ran(bit_xor)=BIT) & (bit_xor(0,0)=0) & (bit_xor(0,1)=1) & (bit_xor(1,0)=1) & (bit_xor(1,1)=0) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=bit_xor(b2,b1))) & (!b1,b2.(b1:BIT&b2:BIT&bit_xor(b1,b2)=1 => bit_xor(b2,b1)=1)) & (!b1,b2.(b1:BIT&b2:BIT&bit_xor(b1,b2)=0 => bit_xor(b2,b1)=0)) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT => bit_xor(b1,bit_xor(b2,b3))=bit_xor(bit_xor(b1,b2),b3))) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT&bit_xor(b1,b2)=1 => bit_xor(b1,bit_xor(b2,b3))=bit_xor(1,b3))) & (!bb.(bb:BIT => bit_xor(bb,bb)=0)) & (dom(bool_bit)=BOOL) & (ran(bit_xor)=BIT) & (bool_bit(TRUE)=1) & (bool_bit(FALSE)=0) & (!bb.(bb:BIT => bb=0 or bb=1)) & (!bb.(bb:BIT&not(bb=0) => bb=1)) & (!bb.(bb:BIT&not(bb=1) => bb=0))
