#source:examples/prob_examples/public_examples/B/Daniel/stellwerk/switcher_example.mch
2.1592384966666666E8,1.06102622E8,-1.0,5.478374026666666E8:not((card(ROUTE)>=card(start_tracks)) & not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked))) => not((route:ROUTE) & (section:SECTION))
5.5027272333333336E7,6.4036751666666664E7,-1.0,1.19879071E8:not((card(ROUTE)>=card(start_tracks)) & (section:SECTION)) => not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked))
1.99720253E8,2.2129138566666666E8,-1.0,4.809924503333333E8:not((card(ROUTE)>=card(start_tracks)) & not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked))) => not((route:ROUTE))
6.3215767E7,6.5943302333333336E7,1.1639655233333333E8,5.6238902333333336E7:not((card(ROUTE)>=card(start_tracks)) & (routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked)) => (section:SECTION)
