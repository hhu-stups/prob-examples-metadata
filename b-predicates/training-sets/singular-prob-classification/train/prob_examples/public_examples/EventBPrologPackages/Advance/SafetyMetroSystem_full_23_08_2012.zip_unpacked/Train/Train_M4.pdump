#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/Train/Train_M4.bcm
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
1.0122032033333333E8,1.56755339E8,-1.0,1.0911258106666667E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))
7.626665833333333E7,1.29612851E8,-1.0,2.760610826666667E8:not(not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1))) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))
1.0709916366666667E8,1.5752131133333334E8,-1.0,1.1540332053333333E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)
1.0769861166666667E8,2.44009312E8,-1.0,1.6486088766666667E9:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))) => (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)
7.480339E7,1.23939341E8,-1.0,4.11006898E8:not(not((t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE))) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))
3.177166596666667E8,3.754448103333333E8,-1.0,2.17605884E8:not(not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE))) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))
-1.0,-1.0,-1.0,-1.0:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))
-1.0,-1.0,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))) => (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)
4.69665172E8,1.25238901E8,-1.0,1.8331344133333334E8:not(not((t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking))) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)
1.0985384366666667E8,1.6085513866666666E8,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))) => not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
1.07187676E8,1.55653639E8,-1.0,-1.0:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))) => not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE))
-1.0,-1.0,-1.0,-1.0:not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))
8.299884533333333E7,1.3164562833333333E8,-1.0,1.1164576393333333E9:not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)) => not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
1.10947931E8,1.64368365E8,-1.0,-1.0:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
1.06818053E8,1.6096856066666666E8,-1.0,-1.0:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))) => not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
8.402092666666667E7,1.39138201E8,-1.0,-1.0:not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))) => not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))))) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})
1.03792994E8,1.5329326E8,-1.0,6.71489882E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
7.6723467E7,1.2607133866666667E8,-1.0,2.00106266E8:not(not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
1.0725777366666667E8,1.7275200523333333E9,-1.0,1.0079824863333334E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
3.099009536666667E8,1.6903606733333334E8,-1.0,1.0224540656666666E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & door:POW(TRAIN ** POW(DOOR))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & not(!t oftype TRAIN.t:dom(door)&door(t)/\door_state~[{OPEN}]=({} oftype POW(DOOR))=>door(t)<:door_state~[{CLOSED}])
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & not(!c oftype CARRIAGE.c:ran(DOOR_CARRIAGE)&c:dom(train_carriage)=>DOOR_CARRIAGE~[{c}]<:door_train_carriage[{train_carriage(c)}])
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & not(!c oftype CARRIAGE.c:dom(train_carriage)&door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR))&door(train_carriage(c))/=({} oftype POW(DOOR))=>DOOR_CARRIAGE~[{c}]<:door(train_carriage(c))&DOOR_CARRIAGE~[{c}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & dom(dom(carriage_door_state))<:dom(door_state)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & not(!t oftype TRAIN.t:dom(door_train_carriage)=>door_train_carriage[{t}]=DOOR_CARRIAGE~[train_carriage~[{t}]])
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (trns:POW(TRAIN)) & (door_state:POW(DOOR ** DOOR_STATE)) & (braking:POW(TRAIN)) & (speed:POW(TRAIN ** INT)) & (permit:POW(TRAIN ** BOOL)) & (door:POW(TRAIN ** POW(DOOR))) & (emergency_button:POW(TRAIN ** BOOL)) & (!t oftype TRAIN.t:dom(door)&door(t)/\door_state~[{OPEN}]=({} oftype POW(DOOR))=>door(t)<:door_state~[{CLOSED}]) & (!c oftype CARRIAGE.c:ran(DOOR_CARRIAGE)&c:dom(train_carriage)=>DOOR_CARRIAGE~[{c}]<:door_train_carriage[{train_carriage(c)}]) & (!c oftype CARRIAGE.c:dom(train_carriage)&door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR))&door(train_carriage(c))/=({} oftype POW(DOOR))=>DOOR_CARRIAGE~[{c}]<:door(train_carriage(c))&DOOR_CARRIAGE~[{c}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (dom(dom(carriage_door_state))<:dom(door_state)) & (!t oftype TRAIN.t:dom(door_train_carriage)=>door_train_carriage[{t}]=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!d oftype POW(DOOR),ds oftype DOOR_STATE.d<:dom(door_state)&ds:DOOR_STATE&carriage_door_state[d ** DOOR_CARRIAGE[d]]={ds}<=>door_state[d]={ds})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & not((trns:POW(TRAIN)) & (door_state:POW(DOOR ** DOOR_STATE)) & (braking:POW(TRAIN)) & (speed:POW(TRAIN ** INT)) & (permit:POW(TRAIN ** BOOL)) & (door:POW(TRAIN ** POW(DOOR))) & (emergency_button:POW(TRAIN ** BOOL)) & (!t oftype TRAIN.t:dom(door)&door(t)/\door_state~[{OPEN}]=({} oftype POW(DOOR))=>door(t)<:door_state~[{CLOSED}]) & (!c oftype CARRIAGE.c:ran(DOOR_CARRIAGE)&c:dom(train_carriage)=>DOOR_CARRIAGE~[{c}]<:door_train_carriage[{train_carriage(c)}]) & (!c oftype CARRIAGE.c:dom(train_carriage)&door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR))&door(train_carriage(c))/=({} oftype POW(DOOR))=>DOOR_CARRIAGE~[{c}]<:door(train_carriage(c))&DOOR_CARRIAGE~[{c}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (dom(dom(carriage_door_state))<:dom(door_state)) & (!t oftype TRAIN.t:dom(door_train_carriage)=>door_train_carriage[{t}]=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!d oftype POW(DOOR),ds oftype DOOR_STATE.d<:dom(door_state)&ds:DOOR_STATE&carriage_door_state[d ** DOOR_CARRIAGE[d]]={ds}<=>door_state[d]={ds}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
1.1635483333333333E8,1.6857343866666666E8,-1.0,1.6275243516666667E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
1.16851987E8,1.5813922033333334E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & ((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) => not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
9.992315833333333E7,1.5192134433333334E8,-1.0,8.921917143333334E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)) => (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE))
1.07183788E8,1.6220575266666666E8,-1.0,1.264663381E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)) => (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE)
9.272833036666666E8,1.6388960233333334E8,-1.0,9.011817776666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)
1.4931808033333334E8,1.0707568563333334E9,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE))
1.5494614666666666E8,3.1256898193333335E9,-1.0,1.556092712E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & ((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) => not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE)) => (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
1.00393004E8,1.9519181876666667E9,-1.0,1.0538176446666666E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & ((t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE) => not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
1.15352518E8,1.5667476533333334E8,-1.0,6.528750613333334E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t1:TRAIN) & (bb:BOOL) & (bb:BOOL) & (t1:trns) & (train_doors_closed(t1)=TRUE)) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & not((t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & not((c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (carriage_door_state[ds ** DOOR_CARRIAGE[ds]]={OPEN}) & ((#d oftype DOOR.d:DOOR_CARRIAGE~[train_carriage~[{t}]] \ ds&carriage_door_state[{d} <| DOOR_CARRIAGE]/={CLOSED})<=>closed=FALSE) & (train_doors_closed(t)=FALSE)) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage)) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage)) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage)) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
3.385297113333333E8,1.8116768466666666E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage))) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t/:dom(leader_carriage)) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & not((t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
1.01404981E8,1.57610941E8,-1.0,5.833577716666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & ((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) => not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & not((c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & not((t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (carriage_door_state[DOOR_CARRIAGE |> {c}]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (t/:dom(leader_carriage)) & (ready_train(t)=FALSE)) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
1.0360484133333333E8,1.57685648E8,-1.0,9.68854978E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t1:trns) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t1/:braking) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)) => (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & not((c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE)) => (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & (train_doors_closed(t1)=TRUE) & (permit(t1)=TRUE) & (speed(t1)>0) & (ready_train(t1)=TRUE) & not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((s1:NAT) & (t1:trns) & (t1/:braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
4.116438736666667E8,1.61110967E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE)) => (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (carriage_alarm(c)=FALSE) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))) => (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & not((c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & not((t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR)))) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (emergency_button(t)=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (train_doors_closed(t)=TRUE) & (door_train_carriage[{train_carriage(c)}]/=({} oftype POW(DOOR))) & not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c:dom(train_carriage)) & (t=train_carriage(c)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(t)=MAINTENANCE) & (card(train_carriage~[{train_carriage(c)}])=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (card(train_carriage~[{train_carriage(c)}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (ready_train(t)=FALSE)) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
1.00090265E8,1.5435533633333334E8,-1.0,8.55675082E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & ((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) => not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
1.2271795666666667E8,1.5200282566666666E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & not((t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)) => (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
1.1576814366666667E8,1.3960437986666667E9,-1.0,9.18371323E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & ((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE) => not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED})) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}) & (s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (speed(t)=0) & (!d oftype DOOR.d:ds=>carriage_door_state[{d} <| DOOR_CARRIAGE]={CLOSED}) & not((s1:NAT) & (t1:trns) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & (train_doors_closed(t1)=TRUE) & (ready_train(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (!d oftype DOOR,ds oftype DOOR_STATE.d:dom(door_state)&ds:DOOR_STATE&carriage_door_state(d |-> DOOR_CARRIAGE(d))=ds<=>door_state(d)=ds) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE) & (!t oftype TRAIN.t:trns&t:dom(leader_carriage)=>leader_carriage(t):train_carriage~[{t}]) & (ready_train:trns --> BOOL) & (train_doors_closed:trns --> BOOL) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>t:trns&card(train_carriage~[{t}])=MAX_NUMBER_CARRIAGE&card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=TRUE=>(!d oftype DOOR.d:door_train_carriage[{t}]=>carriage_door_state(d |-> DOOR_CARRIAGE(d))/=OPEN)) & (!t oftype TRAIN.t:dom(train_doors_closed)&train_doors_closed(t)=FALSE=>speed(t)=0) & (!t oftype TRAIN.t:dom(ready_train)&ready_train(t)=TRUE=>DOOR_CARRIAGE |> train_carriage~[{t}]/=({} oftype POW(DOOR**CARRIAGE))) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)) & (speed(t)>0=>state:{AUTOMATIC,MANUAL}) & (ready_train(t)=TRUE) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
