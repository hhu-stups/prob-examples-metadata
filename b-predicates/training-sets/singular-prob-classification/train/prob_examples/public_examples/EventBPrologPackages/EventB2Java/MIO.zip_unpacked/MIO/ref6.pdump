#source:examples/prob_examples/public_examples/EventBPrologPackages/EventB2Java/MIO.zip_unpacked/MIO/ref6.bcm
5.7628231333333336E7,1.19935363E8,1.7877771566666666E8,1.1584085053333333E9:not((p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor)) => (parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)
6.1684985666666664E7,4.5081897E7,1.53435317E8,1.7366321533333334E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & not((p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor))
5.4754984333333336E7,7.4659983E7,-1.0,1.78349239E8:not(not((p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor))) => not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))
5.95763493E8,4.48831121E8,-1.0,2.8525379983333335E9:not(not((l:controllerMsg))) => not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))
5.5682453666666664E7,5.5421246666666664E7,-1.0,9.777849533333333E7:not(not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg))) => (parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)
6.1565953E7,4.7999074333333336E7,1.1743488233333333E8,9.839123666666667E7:not(not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))) => not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor)
1.14091766E8,4.2521701666666664E7,-1.0,1.2441281583333333E9:not((p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per))) => (parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)
6.3112797333333336E7,4.9215010666666664E7,-1.0,3.325587003333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight)
6.2070113666666664E7,4.5102895666666664E7,-1.0,2.4467196566666666E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & not((l:greenLight))
5.9544233666666664E7,7.6438934E7,1.3692697966666666E8,9.002874333333333E7:not(not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg))) => (parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)
5.8411757E7,8.011570466666667E7,-1.0,1.2055818456666667E9:not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))) => (parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)
6.2517191E7,4.5287928333333336E7,-1.0,1.50128961E8:not(not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))) => (parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))
6.2176877666666664E7,4.5388802666666664E7,1.1149681333333333E8,9.130728133333333E7:not(not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))) => (l:green) & (l:greenMsgOff)
1.08772445E8,4.5185914E7,-1.0,9.325345533333333E7:not(not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))) => not((l:green) & (l:greenMsgOff))
5.5373522E7,7.613461166666667E7,-1.0,1.2550888366666667E8:not(not((l:green) & (l:greenMsgOff))) => not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
6.3303231333333336E7,4.4429067E7,-1.0,2.08441753E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
6.1758156333333336E7,4.5211895E7,1.1821319333333333E8,1.1481434466666667E8:not(not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))) => (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
6.2690606666666664E7,4.3955193666666664E7,-1.0,1.7808624033333334E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
6.1495925333333336E7,4.6363065E7,3.5359910413333335E9,1.5141839333333334E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) => not((p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor))
6.3094755666666664E7,7.661414233333333E7,-1.0,3.599379966666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & (l:greenLight)
-1.0,-1.0,4.2150209886666665E9,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & not((p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg))
-1.0,-1.0,9.8762652E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,2.08007713E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per))
-1.0,-1.0,9.228922633333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & (p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta)
5.7416915E7,5.9437004666666664E7,-1.0,3.697636873333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,1.3242945666666667E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor)
-1.0,-1.0,9.255960533333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (l:controllerMsg)
-1.0,-1.0,2.9391719906666665E9,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (l:greenLight)
-1.0,-1.0,7.055126633333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg)
-1.0,-1.0,1.4870901766666667E9,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector)
6.4585238E7,4.3977240666666664E7,-1.0,9.14739251E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & not((p:PERSON) & (l:LECTORS \ blockedLector))
-1.0,-1.0,6.9791673E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (d:openedDoor)
6.3120014333333336E7,6.868879996666666E8,-1.0,5.005543023666667E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:rejectionMsg)) => (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)))
6.4847329E7,4.3755727333333336E7,-1.0,4.91809957E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((l:rejectionMsg) => not((p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per))))
-1.0,-1.0,5.971654403333334E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (l:greenLight)
6.2859041E7,4.8521487E7,-1.0,3.60888211E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((l:rejectionMsg) => not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))))
-1.0,-1.0,7.473233866666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,8.2750956E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (l:red) & (l:redMsgOff)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,7.220222166666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg)
-1.0,-1.0,2.9654628566666665E9,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor)) => (d:openedDoor))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor) & not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor) & not((parked>0) & (b:dom(busSta)) & (b:authorizedBus))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor)) => (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,1.54035556E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor) & (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor)) => (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor))
-1.0,-1.0,9.741503673333334E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (l:redLight)
-1.0,-1.0,7.811421633333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (l:greenLight)
-1.0,-1.0,8.713584766666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg)
-1.0,-1.0,6.5619494333333336E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (p:PERSON) & (l:LECTORS \ blockedLector)
6.2970274333333336E7,5.6662885333333336E7,-1.0,2.70662445E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per))
-1.0,-1.0,8.173118E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,7.306511033333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,1.2469243966666667E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (l:red) & (l:redMsgOff)
6.1106024666666664E7,1.20572851E8,-1.0,2.85630736E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:controllerMsg)) => (l:red) & (l:redMsgOff))
6.1851394E7,1.3143503333333333E8,-1.0,2.2400211166666666E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((l:controllerMsg) => not((l:red) & (l:redMsgOff)))
-1.0,-1.0,8.372452E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (l:acceptanceMsg)
-1.0,-1.0,7.386733066666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg)
-1.0,-1.0,6.4543868666666664E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & (p:PERSON) & (l:LECTORS \ blockedLector)
-1.0,-1.0,6.965522666666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & (d:openedDoor)
-1.0,-1.0,1.9364780966666666E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & (l:greenLight)
-1.0,-1.0,6.6883737666666664E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & not((l:red) & (l:redMsgOff))
-1.0,-1.0,6.3471549333333336E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & (l:acceptanceMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,8.7807139E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg)
-1.0,-1.0,6.8952134E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,5.425154043333334E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((l:greenLight))
-1.0,-1.0,7.51628495E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,7.953744166666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((l:green) & (l:greenMsgOff))
7.437223733333333E7,4.4810935666666664E7,-1.0,2.50015499E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((l:red) & (l:redMsgOff))
-1.0,-1.0,6.5683818E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((l:acceptanceMsg))
-1.0,-1.0,6.994090066666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (p:PERSON) & (l:LECTORS \ blockedLector)
-1.0,-1.0,1.1004823533333333E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per))
-1.0,-1.0,2.97327242E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (l:greenLight)
-1.0,-1.0,7.0772408E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,3.5838283626666665E9,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,8.2328137E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (l:acceptanceMsg)
-1.0,-1.0,7.532300966666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & (d:openedDoor)
-1.0,-1.0,6.6531365E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
1.8126187666666666E8,1.03007396E8,-1.0,2.94591954E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & not((parked>0) & (b:dom(busSta)) & (b:authorizedBus))
-1.0,-1.0,7.133381566666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,6.824897266666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & (l:red) & (l:redMsgOff)
6.1468594333333336E7,4.3811111333333336E7,-1.0,2.1582628166666666E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((p:PERSON) & (l:LECTORS \ blockedLector)) => (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)) => (d:openedDoor))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) & not((p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)))
-1.0,-1.0,7.049869966666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) & (l:greenLight)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,1.1357377633333333E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) & (l:red) & (l:redMsgOff)
-1.0,-1.0,6.815491933333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) & (l:acceptanceMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (l:greenLight)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((d:openedDoor)) => (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (parked>0) & (b:dom(busSta)) & (b:authorizedBus)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta)))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (l:red) & (l:redMsgOff)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((l:red) & (l:redMsgOff))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (l:acceptanceMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((l:acceptanceMsg))
-1.0,-1.0,7.7072138E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
2.010604468E9,3.709729196666667E8,-1.0,1.9527174976666667E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((d:openedDoor)) => (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
6.3696345E7,9.079548466666667E7,-1.0,2.19948454E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)) & not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta)))
6.3682679E7,1.2912768666666667E8,-1.0,2.0546036833333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)) & (l:red) & (l:redMsgOff)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,1.0318025333333333E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
1.8211259033333334E8,1.0136470566666667E8,-1.0,3.14718769E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta) => not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)))
-1.0,-1.0,5.01305508E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,1.2071944833333333E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((l:green) & (l:greenMsgOff))
-1.0,-1.0,2.713053734E9,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (l:red) & (l:redMsgOff)
-1.0,-1.0,6.976189733333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((l:acceptanceMsg))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
6.2532113666666664E7,7.152245666666667E7,-1.0,2.6756081633333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg) => not((parked>0) & (b:dom(busSta)) & (b:authorizedBus)))
-1.0,-1.0,2.0327850333333334E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,1.10174811E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg) & (l:red) & (l:redMsgOff)
-1.0,-1.0,6.388622E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg) & (l:acceptanceMsg)
-1.0,-1.0,7.1133743E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg) & (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor)
2.2443885266666666E8,1.10227681E8,-1.0,3.28794721E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (parked>0) & (b:dom(busSta)) & (b:authorizedBus) & (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
6.4659386333333336E7,1.0199649E8,-1.0,3.495674764E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))) => (l:green) & (l:greenMsgOff))
-1.0,-1.0,1.06747234E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:green) & (l:greenMsgOff) & (l:red) & (l:redMsgOff)
-1.0,-1.0,7.830479E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:green) & (l:greenMsgOff) & (l:acceptanceMsg)
6.4227976666666664E7,1.3770147266666666E8,-1.0,3.609543036666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((l:green) & (l:greenMsgOff) => not((l:acceptanceMsg)))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:green) & (l:greenMsgOff) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,7.671978833333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:red) & (l:redMsgOff) & (l:acceptanceMsg)
6.5533799333333336E7,4.7122263333333336E7,-1.0,2.55004518E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:acceptanceMsg) & (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:acceptanceMsg) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
