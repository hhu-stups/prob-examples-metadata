#source:examples/prob_examples/public_examples/B/Compilers/NFA.mch
-1.0,-1.0,-1.0,-1.0:(F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & (cur:S) & (zz:delta(cur,input))
-1.0,-1.0,-1.0,-1.0:(F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & (cur:S) & not((zz:delta(cur,input)))
1.6537149533333334E8,1.1887608033333333E8,-1.0,1.1490143633333333E8:not((F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & not((cur:S))) => not((zz:delta(cur,input)))
5.3571267666666664E7,6.8684176E7,-1.0,8.616118966666667E7:not((F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & (cur:S)) => deltas({z0},[1])={z0,z1}
-1.0,-1.0,-1.0,-1.0:(F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & (cur:S) & (deltas({z0},[0,1,1,1])={z0,z1,z2,z3}) & (deltas({z3},[])={z3}) & (deltas({z0},[1])={z0,z1})
-1.0,-1.0,-1.0,-1.0:(F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & (cur:S) & not((deltas({z0},[0,1,1,1])={z0,z1,z2,z3}) & (deltas({z3},[])={z3}) & (deltas({z0},[1])={z0,z1}))
-1.0,-1.0,-1.0,-1.0:(F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & (cur:S) & (cur:F) & (zz:delta(cur,input))
-1.0,-1.0,-1.0,-1.0:(F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & (cur:S) & ((cur:F) => not((zz:delta(cur,input))))
-1.0,-1.0,-1.0,-1.0:(F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & (cur:S) & (cur:F)
-1.0,-1.0,-1.0,-1.0:(F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & cur:S & zz:delta((cur,input))
-1.0,-1.0,-1.0,-1.0:(F<:S) & (delta:S*Alphabet-->POW(S)) & (deltas=%ZZ,s.(ZZ<:S&s=[]|ZZ)\/%ZZ,s.(ZZ<:S&s/=[]|UNION(z).(z:ZZ|deltas(delta(z,first(s)),tail(s))))) & (I={z0}) & (F={z2}) & (delta={((z0,0),{z0}),((z0,1),{z0,z1}),((z1,0),{z2}),((z1,1),{z2}),((z2,0),{z3}),((z2,1),{z3}),((z3,0),{z3}),((z3,1),{z3})}) & (not((cur:S)) => not((zz:delta((cur,input)))))
