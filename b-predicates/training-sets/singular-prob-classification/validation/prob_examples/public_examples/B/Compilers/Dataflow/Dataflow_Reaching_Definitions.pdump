#source:examples/prob_examples/public_examples/B/Compilers/Dataflow/Dataflow_Reaching_Definitions.mch
5.2749003E7,9.555505166666667E7,-1.0,6.3225661333333336E7:(next:Blocks<->Blocks) & (gen:Blocks-->POW(Domain)) & (kill:Blocks-->POW(Domain)) & (next={(Entry,B1),(B1,B2),(B2,B3),(B2,B4),(B3,B4),(B4,Exit),(B4,B2)}) & (gen={(B1,{d1,d2,d3}),(B2,{d4,d5}),(B3,{d6}),(B4,{d7}),(Exit,{}),(Entry,{})}) & (kill={(B1,{d4,d5,d6,d7}),(B2,{d1,d2,d7}),(B3,{d3}),(B4,{d1,d4}),(Exit,{}),(Entry,{})}) & in:Blocks-->POW(Domain) & BlocksToTreat={}&change=FALSE => in:Blocks-->POW(Domain)
4.2761280333333336E7,7.008584433333333E7,-1.0,1.0097534066666667E8:(next:Blocks<->Blocks) & (gen:Blocks-->POW(Domain)) & (kill:Blocks-->POW(Domain)) & (next={(Entry,B1),(B1,B2),(B2,B3),(B2,B4),(B3,B4),(B4,Exit),(B4,B2)}) & (gen={(B1,{d1,d2,d3}),(B2,{d4,d5}),(B3,{d6}),(B4,{d7}),(Exit,{}),(Entry,{})}) & (kill={(B1,{d4,d5,d6,d7}),(B2,{d1,d2,d7}),(B3,{d3}),(B4,{d1,d4}),(Exit,{}),(Entry,{})}) & (not(out:Blocks-->POW(Domain)) => BlocksToTreat={}&change=TRUE => out:Blocks-->POW(Domain))
