#source:examples/prob_examples/public_examples/B/Laws/RelClosureLaws.mch
-1.0,-1.0,-1.0,-1.0:not((inc=%x.(x:INTEGER|x+1)) & (dec=%y.(y:INTEGER|y-1)) & (decn=%y.(y:NATURAL1|y-1)) & (double=%z.(z:INTEGER|z*z)) & (half={x,y|y+y=x}) & (fin235711={(2,3),(3,5),(5,7),(7,11),(11,13)}) & not((xx:INTEGER) & (ss<:INTEGER))) => (yy:closure1(half)[{xx}])
-1.0,-1.0,-1.0,-1.0:not((inc=%x.(x:INTEGER|x+1)) & (dec=%y.(y:INTEGER|y-1)) & (decn=%y.(y:NATURAL1|y-1)) & (double=%z.(z:INTEGER|z*z)) & (half={x,y|y+y=x}) & (fin235711={(2,3),(3,5),(5,7),(7,11),(11,13)}) & (xx:INTEGER) & (ss<:INTEGER)) => closure1((half;half))[{1024}]={256,64,16,4,1}
-1.0,-1.0,-1.0,-1.0:not((inc=%x.(x:INTEGER|x+1)) & (dec=%y.(y:INTEGER|y-1)) & (decn=%y.(y:NATURAL1|y-1)) & (double=%z.(z:INTEGER|z*z)) & (half={x,y|y+y=x}) & (fin235711={(2,3),(3,5),(5,7),(7,11),(11,13)}) & (xx:INTEGER) & (ss<:INTEGER)) => ({};closure1(decn))={}
-1.0,-1.0,-1.0,-1.0:not((inc=%x.(x:INTEGER|x+1)) & (dec=%y.(y:INTEGER|y-1)) & (decn=%y.(y:NATURAL1|y-1)) & (double=%z.(z:INTEGER|z*z)) & (half={x,y|y+y=x}) & (fin235711={(2,3),(3,5),(5,7),(7,11),(11,13)}) & (xx:INTEGER) & (ss<:INTEGER)) => dom((fin235711;decn))=dom(fin235711|>NATURAL1)
-1.0,-1.0,-1.0,-1.0:not((inc=%x.(x:INTEGER|x+1)) & (dec=%y.(y:INTEGER|y-1)) & (decn=%y.(y:NATURAL1|y-1)) & (double=%z.(z:INTEGER|z*z)) & (half={x,y|y+y=x}) & (fin235711={(2,3),(3,5),(5,7),(7,11),(11,13)}) & (xx:INTEGER) & (ss<:INTEGER)) => ran((fin235711;half))=half[ran(fin235711)]
