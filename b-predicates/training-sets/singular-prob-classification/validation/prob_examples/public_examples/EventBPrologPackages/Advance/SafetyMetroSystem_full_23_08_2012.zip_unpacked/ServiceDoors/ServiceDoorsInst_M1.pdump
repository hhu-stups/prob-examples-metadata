#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/ServiceDoors/ServiceDoorsInst_M1.bcm
5.8257222E7,7.4678025E7,-1.0,1.08516779E8:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd)))) => not((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
6.2373294333333336E7,7.606758766666667E7,1.59486808E8,1.93183365E8:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd)))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))
5.9560250666666664E7,7.061566033333333E7,-1.0,7.3047045E7:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd)))) => not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))))
5.9366487666666664E7,7.4525306E7,-1.0,4.9772134333333336E7:not(not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))))) => (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
1.1973203266666667E8,6.898465666666667E7,1.3205412966666667E8,7.061025933333333E7:not(not((ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))) => (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd)))
6.1385413333333336E7,5.3180808333333336E7,-1.0,1.8064021933333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,9.326539833333333E7,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (cmd:command) & (state:COMMAND_STATE \ {START}) & (command_state(cmd)/=EXECUTED) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR)))
6.8044989E7,7.176254766666667E7,-1.0,4.912370493333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
6.2334253666666664E7,1.0809309866666667E8,-1.0,1.2666655E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & ((ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) => not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR)))))
-1.0,-1.0,1.0182496E8,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & (ds<:obstructed_door) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & (st:{SUCCESS,FAIL}) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED})
6.5326836E7,1.1241944943333333E9,-1.0,3.562526353333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (not((doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR)))) => (ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
-1.0,-1.0,1.1807323166666667E8,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & not((ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door))
