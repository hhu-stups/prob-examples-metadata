#source:examples/prob_examples/public_examples/EventBPrologPackages/SSF/DSAOCSSv002/DSAOCSSv002.zip_unpacked/DSAOCSSv002/ModeProtocolMachine.bcm
-1.0,-1.0,1.9698883066666666E8,-1.0:not((destinations:MANAGERS --> POW(MANAGERS)) & (incomingCurrentMode:MANAGERS --> (MANAGERS +-> MODES)) & (incomingSuggestedMode:MANAGERS --> (MANAGERS +-> MODES)) & (incomingSuggestionLevel:MANAGERS --> (MANAGERS +-> SUGGESTIONLEVELS)) & (stage:MANAGERS --> STAGES) & (usedCurrentMode:MANAGERS --> (MANAGERS --> MODES)) & (usedSuggestedMode:MANAGERS --> (MANAGERS --> MODES)) & (usedSuggestionLevel:MANAGERS --> (MANAGERS --> SUGGESTIONLEVELS)) & (!mn oftype MANAGERS.mn:MANAGERS=>not mn:destinations(mn)) & (!mn oftype MANAGERS.mn:MANAGERS&not stage(mn)=StgNotRunning=>destinations(mn)=({} oftype POW(MANAGERS))) & (!mn oftype MANAGERS.mn:MANAGERS=>not mn:dom(incomingCurrentMode(mn))) & (!mn oftype MANAGERS.mn:MANAGERS=>dom(incomingSuggestedMode(mn))=dom(incomingCurrentMode(mn))) & (!mn oftype MANAGERS.mn:MANAGERS=>dom(incomingSuggestionLevel(mn))=dom(incomingCurrentMode(mn)))) => (sender:MANAGERS) & (receiver:destinations(sender))
3.12682872E8,7.027416E7,2.0135579633333334E8,1.2633561833333333E8:not((destinations:MANAGERS --> POW(MANAGERS)) & (incomingCurrentMode:MANAGERS --> (MANAGERS +-> MODES)) & (incomingSuggestedMode:MANAGERS --> (MANAGERS +-> MODES)) & (incomingSuggestionLevel:MANAGERS --> (MANAGERS +-> SUGGESTIONLEVELS)) & (stage:MANAGERS --> STAGES) & (usedCurrentMode:MANAGERS --> (MANAGERS --> MODES)) & (usedSuggestedMode:MANAGERS --> (MANAGERS --> MODES)) & (usedSuggestionLevel:MANAGERS --> (MANAGERS --> SUGGESTIONLEVELS)) & (!mn oftype MANAGERS.mn:MANAGERS=>not mn:destinations(mn)) & (!mn oftype MANAGERS.mn:MANAGERS&not stage(mn)=StgNotRunning=>destinations(mn)=({} oftype POW(MANAGERS))) & (!mn oftype MANAGERS.mn:MANAGERS=>not mn:dom(incomingCurrentMode(mn))) & (!mn oftype MANAGERS.mn:MANAGERS=>dom(incomingSuggestedMode(mn))=dom(incomingCurrentMode(mn))) & (!mn oftype MANAGERS.mn:MANAGERS=>dom(incomingSuggestionLevel(mn))=dom(incomingCurrentMode(mn)))) => (mn:MANAGERS) & (stage(mn)=StgPostprocessing)
-1.0,-1.0,-1.0,-1.0:(destinations:MANAGERS --> POW(MANAGERS)) & (incomingCurrentMode:MANAGERS --> (MANAGERS +-> MODES)) & (incomingSuggestedMode:MANAGERS --> (MANAGERS +-> MODES)) & (incomingSuggestionLevel:MANAGERS --> (MANAGERS +-> SUGGESTIONLEVELS)) & (stage:MANAGERS --> STAGES) & (usedCurrentMode:MANAGERS --> (MANAGERS --> MODES)) & (usedSuggestedMode:MANAGERS --> (MANAGERS --> MODES)) & (usedSuggestionLevel:MANAGERS --> (MANAGERS --> SUGGESTIONLEVELS)) & (!mn oftype MANAGERS.mn:MANAGERS=>not mn:destinations(mn)) & (!mn oftype MANAGERS.mn:MANAGERS&not stage(mn)=StgNotRunning=>destinations(mn)=({} oftype POW(MANAGERS))) & (!mn oftype MANAGERS.mn:MANAGERS=>not mn:dom(incomingCurrentMode(mn))) & (!mn oftype MANAGERS.mn:MANAGERS=>dom(incomingSuggestedMode(mn))=dom(incomingCurrentMode(mn))) & (!mn oftype MANAGERS.mn:MANAGERS=>dom(incomingSuggestionLevel(mn))=dom(incomingCurrentMode(mn))) & (not((sender:MANAGERS) & (receiver:destinations(sender))) => (mn:MANAGERS) & (stage(mn)=StgReconsidering) & (currMode=usedCurrentMode(mn)(mn)) & (currSuggLevel=usedSuggestionLevel(mn)(mn)) & (currSuggMode=usedSuggestedMode(mn)(mn)) & (prefMode:MODES) & (nextStage:{StgChanging,StgPostprocessing}) & (nextSuggMode:{prefMode,currSuggMode}) & (nextSuggLevel:SUGGESTIONLEVELS) & (nextStage=StgChanging<=>currSuggLevel=SL2&nextSuggLevel=SL3) & (nextSuggMode=prefMode<=>prefMode=currSuggMode or(nextSuggLevel=SL1&not prefMode=currMode)) & (nextSuggLevel=SL1<=>(currSuggLevel=SL1 or not prefMode=currMode)&(!k oftype MANAGERS.k:MANAGERS=>usedCurrentMode(mn)(k)=currMode&usedSuggestionLevel(mn)(k):{SL0,SL1})&(not mn=MnAOC or(#i oftype MANAGERS.i:MANAGERS&(usedSuggestionLevel(mn)(i)=SL0 or not usedSuggestedMode(mn)(i)=currSuggMode)))) & (nextSuggLevel=SL2<=>(#i oftype MANAGERS.i:MANAGERS&usedSuggestionLevel(mn)(i)=SL1)&((mn=MnAOC&(!k oftype MANAGERS.k:MANAGERS=>usedSuggestionLevel(mn)(k):{SL1,SL2}&usedSuggestedMode(mn)(k)=currSuggMode))or(not mn=MnAOC&usedSuggestionLevel(mn)(MnAOC)=SL2))) & (nextSuggLevel=SL3<=>(#i oftype MANAGERS.i:MANAGERS&usedSuggestionLevel(mn)(i)=SL2)&(!k oftype MANAGERS.k:MANAGERS=>usedSuggestionLevel(mn)(k):{SL2,SL3})))
