#source:examples/prob_examples/public_examples/EventBPrologPackages/Vizing_Breitner/VizingTheorem.zip_unpacked/VizingTheorem/m08_Conv_Fan_Build.bcm
-1.0,-1.0,-1.0,-1.0:not(not((coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)))) => (l:NAT1) & (!z oftype V.X |-> z |-> d_/:coloring2) & (not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2)
1.2152171466666667E8,1.1094990966666667E8,1.319131341E9,1.645551831E9:not((l:NAT1) & (!z oftype V.X |-> z |-> d_/:coloring2) & (not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2)) => not((coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)))
-1.0,-1.0,1.2911611633333333E8,-1.0:not(not((coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)))) => not((X |-> Y:graph) & (X |-> Y/:dom(coloring2)) & (!z oftype V.X |-> z |-> d/:coloring2) & (!z oftype V.Y |-> z |-> d/:coloring2) & (dom(coloring2\/{X |-> Y |-> d,Y |-> X |-> d})=graph) & (pathl=0) & (stage=1))
-1.0,-1.0,-1.0,-1.0:(coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)) & not((X |-> Y:graph) & (X |-> Y/:dom(coloring2)) & (!z oftype V.X |-> z |-> d/:coloring2) & (!z oftype V.Y |-> z |-> d/:coloring2) & (X2 |-> Y2:graph \ dom(coloring2\/{X |-> Y |-> d,Y |-> X |-> d})) & (stage=1))
-1.0,-1.0,-1.0,-1.0:(coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (z:V) & (z/:ran(cdpath)) & (cdpath(pathl) |-> z |-> c_:coloring2 or cdpath(pathl) |-> z |-> d_:coloring2) & (!z oftype V.X |-> z |-> c_/:coloring2) & (stage=2) & (c_/=d_) & (pathl>0) & (l:NAT1) & (k:1 .. l - 1) & (X |-> fan(k+1) |-> d_:coloring2) & (!z oftype V.cdpath(pathl) |-> z |-> c_:coloring2 or cdpath(pathl) |-> z |-> d_:coloring2=>z=cdpath(pathl - 1)) & (stage=2)
-1.0,-1.0,-1.0,-1.0:(coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (not((z:V) & (z/:ran(cdpath)) & (cdpath(pathl) |-> z |-> c_:coloring2 or cdpath(pathl) |-> z |-> d_:coloring2) & (!z oftype V.X |-> z |-> c_/:coloring2) & (stage=2) & (c_/=d_)) => (pathl>0) & (l:NAT1) & (k:1 .. l - 1) & (X |-> fan(k+1) |-> d_:coloring2) & (!z oftype V.cdpath(pathl) |-> z |-> c_:coloring2 or cdpath(pathl) |-> z |-> d_:coloring2=>z=cdpath(pathl - 1)) & (stage=2))
-1.0,-1.0,-1.0,-1.0:(coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (z:V) & (z/:ran(cdpath)) & (cdpath(pathl) |-> z |-> c_:coloring2 or cdpath(pathl) |-> z |-> d_:coloring2) & (!z oftype V.X |-> z |-> c_/:coloring2) & (stage=2) & (c_/=d_) & not((dom(coloring2)=graph))
-1.0,-1.0,-1.0,-1.0:(coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (z:V) & (z/:ran(cdpath)) & (cdpath(pathl) |-> z |-> c_:coloring2 or cdpath(pathl) |-> z |-> d_:coloring2) & (!z oftype V.X |-> z |-> c_/:coloring2) & (stage=2) & (c_/=d_) & not((X |-> Y:graph) & (X |-> Y/:dom(coloring2)) & (!z oftype V.X |-> z |-> d/:coloring2) & (!z oftype V.Y |-> z |-> d/:coloring2) & (dom(coloring2\/{X |-> Y |-> d,Y |-> X |-> d})=graph) & (pathl=0) & (stage=1))
-1.0,-1.0,-1.0,-1.0:(coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (not((z:V) & (z/:ran(cdpath)) & (cdpath(pathl) |-> z |-> c_:coloring2 or cdpath(pathl) |-> z |-> d_:coloring2) & (!z oftype V.X |-> z |-> c_/:coloring2) & (stage=2) & (c_/=d_)) => (l:NAT1) & (z/:ran(fan)) & (X |-> z:dom(coloring2)) & (!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)) & (pathl=0) & (stage=3))
-1.0,-1.0,1.2072361533333333E8,-1.0:(coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (pathl>0) & (l:NAT1) & (k:1 .. l - 1) & (X |-> fan(k+1) |-> d_:coloring2) & (!z oftype V.cdpath(pathl) |-> z |-> c_:coloring2 or cdpath(pathl) |-> z |-> d_:coloring2=>z=cdpath(pathl - 1)) & (stage=2) & (X |-> Y:graph) & (X |-> Y/:dom(coloring2)) & (!z oftype V.X |-> z |-> d/:coloring2) & (!z oftype V.Y |-> z |-> d/:coloring2) & (dom(coloring2\/{X |-> Y |-> d,Y |-> X |-> d})=graph) & (pathl=0) & (stage=1)
-1.0,-1.0,-1.0,-1.0:(coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (not((l:NAT1) & (!z oftype V.X |-> z |-> d_/:coloring2) & (not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2)) => (X |-> Y:graph) & (X |-> Y/:dom(coloring2)) & (!z oftype V.X |-> z |-> d/:coloring2) & (!z oftype V.Y |-> z |-> d/:coloring2) & (X2 |-> Y2:graph \ dom(coloring2\/{X |-> Y |-> d,Y |-> X |-> d})) & (stage=1))
-1.0,-1.0,-1.0,-1.0:(coloring:graph +-> C) & (coloring:valid) & (coloring2:valid) & (X:V) & (dom(coloring2)=graph or(#y oftype V.X |-> y:graph&X |-> y/:dom(coloring2))) & (dom(coloring2)=graph or X |-> Y:graph \ dom(coloring2)) & (X |-> Y/:dom(coloring2)=>l:NAT1) & (X |-> Y:dom(coloring2)=>l=0) & (fan:1 .. l >-> V) & (X |-> Y/:dom(coloring2)=>fan(1)=Y) & (!n oftype INT.n:1 .. l=>X |-> fan(n):graph) & (!n oftype INT.n:2 .. l=>X |-> fan(n):dom(coloring2)) & (!n oftype INT.n:1 .. l - 1=>(!z oftype V.!d oftype C.fan(n) |-> z |-> d:coloring2=>X |-> fan(n+1) |-> d/:coloring2)) & (d_:C) & (c_:C) & (cdpath:0 .. pathl >-> V) & (pathl:NAT) & (cdpath(0)=X) & (!i oftype INT.i:1 .. pathl - 1=>(!z oftype V.cdpath(i) |-> z |-> c_:coloring2 or cdpath(i) |-> z |-> d_:coloring2=>z=cdpath(i - 1)or z=cdpath(i+1))) & (pathl>0=>(!z oftype V.cdpath(0) |-> z |-> d_:coloring2=>z=cdpath(1))) & (pathl>0=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (!i oftype INT.i:1 .. pathl=>cdpath(i) |-> cdpath(i - 1) |-> c_:coloring2 or cdpath(i) |-> cdpath(i - 1) |-> d_:coloring2) & (X |-> Y/:dom(coloring2)=>(!z oftype V.fan(l) |-> z |-> d_/:coloring2)) & (stage:1 .. 3) & (stage=3=>pathl=0) & (stage=2=>l:NAT1&not(#z oftype V.z/:ran(fan)&X |-> z:dom(coloring2)&(!w oftype V.!d oftype C.fan(l) |-> w |-> d:coloring2=>d/=coloring2(X |-> z)))) & (stage=2=>(!z oftype V.X |-> z |-> c_/:coloring2)) & (stage=1=>c_=d_) & (stage=1=>pathl=0) & (stage=1=>(!z oftype V.X |-> z |-> c_/:coloring2)) & ((dom(coloring2)=graph) => not((X |-> Y:graph) & (X |-> Y/:dom(coloring2)) & (l>=2) & (pathl=0) & (stage=1)))
