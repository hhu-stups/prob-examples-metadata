#source:examples/prob_examples/public_examples/EventBPrologPackages/Abrial_Teaching/ch4_brp_bms.zip_unpacked/ch4_brp/brp_2_standalone.bcm
1.1443079933333333E8,7.950398766666667E7,-1.0,7.216848833333333E7:not((r:0 .. n) & (h=1 .. r <| f) & (r_st=success<=>r=n) & (s_st=success=>r_st=success) & (s:0 .. n - 1) & (r:s .. s+1) & (w=FALSE=>d=f(s+1))) => not((s_st=working) & (w=FALSE) & (s+1<n) & (r=s+1))
-1.0,-1.0,-1.0,-1.0:not((r:0 .. n) & (h=1 .. r <| f) & (r_st=success<=>r=n) & (s_st=success=>r_st=success) & (s:0 .. n - 1) & (r:s .. s+1) & (w=FALSE=>d=f(s+1))) & (s_st=working) & (w=FALSE) & (s+1=n) & (r=s+1)
9.238320966666667E7,5.8097239E7,-1.0,9.943294266666667E7:(r:0 .. n) & (h=1 .. r <| f) & (r_st=success<=>r=n) & (s_st=success=>r_st=success) & (s:0 .. n - 1) & (r:s .. s+1) & (w=FALSE=>d=f(s+1)) & (s_st/=working) & (r_st/=working) & not((s_st=working))
5.2360895333333336E7,5.8635482E7,-1.0,9.6750199E7:(r:0 .. n) & (h=1 .. r <| f) & (r_st=success<=>r=n) & (s_st=success=>r_st=success) & (s:0 .. n - 1) & (r:s .. s+1) & (w=FALSE=>d=f(s+1)) & (not((s_st/=working) & (r_st/=working)) => (s_st=working) & (w=FALSE))
-1.0,-1.0,-1.0,-1.0:(r:0 .. n) & (h=1 .. r <| f) & (r_st=success<=>r=n) & (s_st=success=>r_st=success) & (s:0 .. n - 1) & (r:s .. s+1) & (w=FALSE=>d=f(s+1)) & (s_st=working) & (w=FALSE) & (s+1<n) & (r=s+1) & not((r_st=working) & (r+1=n) & (r=s) & (w=FALSE))
-1.0,-1.0,7.169582566666667E7,2.4830469483333335E9:(r:0 .. n) & (h=1 .. r <| f) & (r_st=success<=>r=n) & (s_st=success=>r_st=success) & (s:0 .. n - 1) & (r:s .. s+1) & (w=FALSE=>d=f(s+1)) & (s_st=working) & (w=FALSE) & (s+1<n) & (r=s+1) & (s_st=working) & (w=FALSE) & (s+1=n) & (r=s+1)
5.3826304666666664E7,6.0072979E7,4.6361179666666664E7,1.31082335E8:(r:0 .. n) & (h=1 .. r <| f) & (r_st=success<=>r=n) & (s_st=success=>r_st=success) & (s:0 .. n - 1) & (r:s .. s+1) & (w=FALSE=>d=f(s+1)) & (r_st=working) & (r+1<n) & (r=s) & (w=FALSE) & not((s_st=working) & (w=FALSE))
5.1220038E7,6.0016617333333336E7,4.6228690666666664E7,1.17733151E8:(r:0 .. n) & (h=1 .. r <| f) & (r_st=success<=>r=n) & (s_st=success=>r_st=success) & (s:0 .. n - 1) & (r:s .. s+1) & (w=FALSE=>d=f(s+1)) & (s_st=working) & (w=FALSE) & not((s_st=working) & (w=TRUE) & (s+1=n))
