#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/DoorLockSystem/ADVANCESIM31.zip_unpacked/COMPONENT/XADTR2cb.bcm
-1.0,-1.0,5.6193086E7,-1.0:(v:NAT) & (msg_rcvd_on_sum:BOOL) & (msg_sent_on_sum:BOOL) & (adder_enabled:BOOL) & (adder_evaluated:BOOL) & (incrementer_evaluated:BOOL) & (sum:NAT) & (sum_prime:NAT) & (sum_inputs:Inputs) & (sum_inputs_prime:Inputs) & (adder_state:Astate) & (incrementer_state:Istate) & (o_sum:NAT) & (i_sum:NAT) & (o_inputs:Inputs) & (i_inputs:Inputs) & (msg_rcvd_on_sum=TRUE=>sum=In1(sum_inputs)+In2(sum_inputs)) & (msg_sent_on_sum=TRUE=>sum_prime=In1(sum_inputs_prime)+In2(sum_inputs_prime)) & (adder_state=A_SEND=>o_sum=In1(o_inputs)+In2(o_inputs)) & (incrementer_state=I_INC=>i_sum=In1(i_inputs)+In2(i_inputs)) & (p:Inputs) & (In1(p):NAT) & (In2(p):NAT) & (adder_state=A_ADD) & (adder_enabled=FALSE) & (adder_state=A_EN)
-1.0,-1.0,5.4358099333333336E7,-1.0:(v:NAT) & (msg_rcvd_on_sum:BOOL) & (msg_sent_on_sum:BOOL) & (adder_enabled:BOOL) & (adder_evaluated:BOOL) & (incrementer_evaluated:BOOL) & (sum:NAT) & (sum_prime:NAT) & (sum_inputs:Inputs) & (sum_inputs_prime:Inputs) & (adder_state:Astate) & (incrementer_state:Istate) & (o_sum:NAT) & (i_sum:NAT) & (o_inputs:Inputs) & (i_inputs:Inputs) & (msg_rcvd_on_sum=TRUE=>sum=In1(sum_inputs)+In2(sum_inputs)) & (msg_sent_on_sum=TRUE=>sum_prime=In1(sum_inputs_prime)+In2(sum_inputs_prime)) & (adder_state=A_SEND=>o_sum=In1(o_inputs)+In2(o_inputs)) & (incrementer_state=I_INC=>i_sum=In1(i_inputs)+In2(i_inputs)) & (p:Inputs) & (In1(p):NAT) & (In2(p):NAT) & (adder_state=A_ADD) & (pv=o_sum) & (adder_state=A_SEND)
5.5153545333333336E7,6.3982787E7,-1.0,1.6020012033333334E8:(v:NAT) & (msg_rcvd_on_sum:BOOL) & (msg_sent_on_sum:BOOL) & (adder_enabled:BOOL) & (adder_evaluated:BOOL) & (incrementer_evaluated:BOOL) & (sum:NAT) & (sum_prime:NAT) & (sum_inputs:Inputs) & (sum_inputs_prime:Inputs) & (adder_state:Astate) & (incrementer_state:Istate) & (o_sum:NAT) & (i_sum:NAT) & (o_inputs:Inputs) & (i_inputs:Inputs) & (msg_rcvd_on_sum=TRUE=>sum=In1(sum_inputs)+In2(sum_inputs)) & (msg_sent_on_sum=TRUE=>sum_prime=In1(sum_inputs_prime)+In2(sum_inputs_prime)) & (adder_state=A_SEND=>o_sum=In1(o_inputs)+In2(o_inputs)) & (incrementer_state=I_INC=>i_sum=In1(i_inputs)+In2(i_inputs)) & ((incrementer_state=I_INC) => not((adder_enabled=FALSE or adder_evaluated=TRUE) & (msg_rcvd_on_sum=FALSE or incrementer_evaluated=TRUE)))
