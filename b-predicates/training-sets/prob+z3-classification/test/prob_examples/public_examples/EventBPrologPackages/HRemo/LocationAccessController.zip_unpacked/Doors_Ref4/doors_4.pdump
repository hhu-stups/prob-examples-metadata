#source:examples/prob_examples/public_examples/EventBPrologPackages/HRemo/LocationAccessController.zip_unpacked/Doors_Ref4/doors_4.bcm
6.146755116666666E8,1.0090780163333334E9,8.1593197E7,5.838766693333334E8:not((sit:P --> L) & (sit<:aut) & (dap:P >+> D) & (red<:D) & (dap;org<:sit) & (dap;dst<:aut) & (red/\ran(dap)=({} oftype POW(D))) & (mCard:D +-> P) & (mAckn<:D) & (BLR<:D) & (partition(BLR,dom(mCard),ran(dap),red,mAckn)) & (mAccept<:D) & (GRN<:D) & (mPass<:D) & (mOff_grn<:D) & (mRefuse<:D) & (RED<:D) & (mOff_red<:D) & (mOff_red\/mRefuse<:red) & (mPass<:ran(dap)) & (mOff_grn<:ran(dap)) & (mOff_grn/\mPass=({} oftype POW(D))) & (mRefuse/\mOff_red=({} oftype POW(D))) & (GRN<:ran(dap)) & (mOff_red\/RED<:red) & (mPass/\GRN=({} oftype POW(D))) & (mOff_red/\dom(mCard)=({} oftype POW(D))) & (mOff_grn/\GRN=({} oftype POW(D))) & (RED/\mOff_red=({} oftype POW(D))) & (mAccept<:ran(dap)) & (RED/\mRefuse=({} oftype POW(D))) & (mAccept/\mPass=({} oftype POW(D))) & (RED/\dom(mCard)=({} oftype POW(D))) & (mAccept/\mOff_grn=({} oftype POW(D))) & (mPass/\dom(mCard)=({} oftype POW(D))) & (mOff_grn/\dom(mCard)=({} oftype POW(D))) & (mAccept/\GRN=({} oftype POW(D))) & (GRN/\dom(mCard)=({} oftype POW(D)))) => not((d |-> p:mCard) & (not(sit(p)=org(d)&p |-> dst(d):aut&p/:dom(dap))))
