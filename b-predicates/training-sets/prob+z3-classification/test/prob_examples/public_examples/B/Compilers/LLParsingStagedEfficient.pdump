#source:examples/prob_examples/public_examples/B/Compilers/LLParsingStagedEfficient.mch
-1.0,-1.0,-1.0,-1.0:not((Rules:Symbols<->seq(Symbols)) & (NonTerminals=dom(Rules)) & (Terminals=Symbols-NonTerminals) & (Rules={(S,[a,S,a]),(S,[b,T,b]),(T,[V,R,T]),(T,[R]),(R,[x,R]),(R,[y,R]),(R,[]),(V,[z,R])}) & not((Nullable<:NonTerminals) & (First:Symbols-->POW(Terminals)) & (Follow:NonTerminals-->POW(Terminals)) & (Stage:1..3))) => (Stage=2) & (N:NonTerminals) & (t:Terminals) & (t/:First(N)) & (s:seq(Symbols)) & (s/=[]) & ((N,s):Rules) & (inFirst(t,s,j))
-1.0,-1.0,-1.0,-1.0:not((Rules:Symbols<->seq(Symbols)) & (NonTerminals=dom(Rules)) & (Terminals=Symbols-NonTerminals) & (Rules={(S,[a,S,a]),(S,[b,T,b]),(T,[V,R,T]),(T,[R]),(R,[x,R]),(R,[y,R]),(R,[]),(V,[z,R])}) & (Nullable<:NonTerminals) & (First:Symbols-->POW(Terminals)) & (Follow:NonTerminals-->POW(Terminals)) & (Stage:1..3)) => (Stage=3) & (N:NonTerminals) & (t:Terminals) & (t/:Follow(N)) & (s:seq(Symbols)) & (s/=[]) & (s:ran(Rules)) & (i:NATURAL1) & (i<size(s)) & (s(i)=N) & (j>i) & (j<=size(s)) & (t:First(s(j))) & (!k.(k:NATURAL1&k>i&k<j => s(k):Nullable))
-1.0,-1.0,-1.0,-1.0:not((Rules:Symbols<->seq(Symbols)) & (NonTerminals=dom(Rules)) & (Terminals=Symbols-NonTerminals) & (Rules={(S,[a,S,a]),(S,[b,T,b]),(T,[V,R,T]),(T,[R]),(R,[x,R]),(R,[y,R]),(R,[]),(V,[z,R])}) & not((Nullable<:NonTerminals) & (First:Symbols-->POW(Terminals)) & (Follow:NonTerminals-->POW(Terminals)) & (Stage:1..3))) => (Stage=1) & (N:NonTerminals) & (N/:Nullable) & (#s.(s:seq(Symbols)&(N,s):Rules&ran(s)<:Nullable))
-1.0,-1.0,-1.0,-1.0:(Rules:Symbols<->seq(Symbols)) & (NonTerminals=dom(Rules)) & (Terminals=Symbols-NonTerminals) & (Rules={(S,[a,S,a]),(S,[b,T,b]),(T,[V,R,T]),(T,[R]),(R,[x,R]),(R,[y,R]),(R,[]),(V,[z,R])}) & (Nullable<:NonTerminals) & (First:Symbols-->POW(Terminals)) & (Follow:NonTerminals-->POW(Terminals)) & (Stage:1..3) & (Stage=3) & (N:NonTerminals) & (X:NonTerminals) & (X/=N) & (Follow(X)/<:Follow(N)) & (s:seq(Symbols)) & (s/=[]) & ((X,s):Rules) & (i>0) & (i<=size(s)) & (N=s(i)) & (!k.(k:NATURAL1&k>i&k<=size(s) => s(k):Nullable)) & not((Stage=1) & (N:NonTerminals) & (N/:Nullable) & (#s.(s:seq(Symbols)&(N,s):Rules&ran(s)<:Nullable)))
