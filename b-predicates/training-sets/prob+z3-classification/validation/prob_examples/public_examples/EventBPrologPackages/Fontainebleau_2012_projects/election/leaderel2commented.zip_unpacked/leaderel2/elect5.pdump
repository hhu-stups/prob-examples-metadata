#source:examples/prob_examples/public_examples/EventBPrologPackages/Fontainebleau_2012_projects/election/leaderel2commented.zip_unpacked/leaderel2/elect5.bcm
9.2531343E7,1.2953530366666667E8,-1.0,6.54429449E8:not((leader:1 .. n) & (decision:1 .. n +-> 0 .. n) & (card(decision)>=1=>decision~[1 .. n]/=({} oftype POW(INT))) & (!i oftype INT.i:dom(decision)=>decision(i):{0,i}) & (pending:1 .. n --> POW(1 .. n)) & (other:1 .. n --> POW(0 .. n)) & (recv:1 .. n --> POW(1 .. n)) & (!i oftype INT.i:1 .. n=>other(i)<:ran({i} <<| decision)) & (!i oftype INT.i:1 .. n=>recv(i)<:dom({i} <<| decision)) & (!i oftype INT.i:1 .. n=>decision[recv(i)]=other(i)) & (leaders:1 .. n +-> 1 .. n) & (!i oftype INT.i:1 .. n&recv(i)/=({} oftype POW(INT))=>other(i)/=({} oftype POW(INT))) & (!i oftype INT.i:dom(leaders)=>leaders(i)=leader) & (!i oftype INT.i:dom(leaders)&recv(i)=1 .. n \ {i}&dom(decision)=1 .. n=>leaders(i)=max(other(i)\/{decision(i)})) & (!i oftype INT.i:dom(leaders)=>i:dom(decision)&recv(i)=1 .. n \ {i}) & (!i oftype INT.i:1 .. n=>i/:pending(i)) & (!i oftype INT.i:1 .. n=>(!j oftype INT.j:1 .. n&i:pending(j)=>j/:recv(i))) & (!i oftype INT.i:1 .. n&pending(i)/=({} oftype POW(INT))=>i:dom(decision)) & (sent:1 .. n --> POW(1 .. n)) & (!i oftype INT.i:1 .. n=>(!j oftype INT.j:1 .. n=>(j:sent(i) \ pending(i)<=>i:recv(j)))) & (!i oftype INT.i:1 .. n=>pending(i)<:sent(i)) & (!i oftype INT.i:1 .. n&sent(i)/=({} oftype POW(INT))=>i:dom(decision)) & (!i oftype INT.i:1 .. n&i/:dom(decision)=>sent(i)=({} oftype POW(INT))) & (irec:1 .. n --> 0 .. n - 1) & (!i oftype INT.i:1 .. n=>irec(i)=card(recv(i))) & (!i oftype INT.i:1 .. n&irec(i)=n - 1=>recv(i)=1 .. n \ {i}) & (xsent:1 .. n --> (1 .. n +-> 0 .. n)) & (xpending:1 .. n --> (1 .. n +-> 0 .. n)) & (!i oftype INT.i:1 .. n=>sent(i)=(prj1 oftype POW(INT**INT**INT))[xsent(i)]) & (!i oftype INT.i:1 .. n=>pending(i)=(prj1 oftype POW(INT**INT**INT))[xpending(i)]) & (!i oftype INT.i:1 .. n=>xpending(i)<:xsent(i)) & (!i oftype INT.i:1 .. n&xsent(i)/=({} oftype POW(INT**INT))=>{decision(i)}=(prj2 oftype POW(INT**INT**INT))[xsent(i)])) => (idx:1 .. n) & (idx/:dom(decision))
8.053624233333333E7,1.3053571033333333E8,-1.0,6.954947273333334E8:not((leader:1 .. n) & (decision:1 .. n +-> 0 .. n) & (card(decision)>=1=>decision~[1 .. n]/=({} oftype POW(INT))) & (!i oftype INT.i:dom(decision)=>decision(i):{0,i}) & (pending:1 .. n --> POW(1 .. n)) & (other:1 .. n --> POW(0 .. n)) & (recv:1 .. n --> POW(1 .. n)) & (!i oftype INT.i:1 .. n=>other(i)<:ran({i} <<| decision)) & (!i oftype INT.i:1 .. n=>recv(i)<:dom({i} <<| decision)) & (!i oftype INT.i:1 .. n=>decision[recv(i)]=other(i)) & (leaders:1 .. n +-> 1 .. n) & (!i oftype INT.i:1 .. n&recv(i)/=({} oftype POW(INT))=>other(i)/=({} oftype POW(INT))) & (!i oftype INT.i:dom(leaders)=>leaders(i)=leader) & (!i oftype INT.i:dom(leaders)&recv(i)=1 .. n \ {i}&dom(decision)=1 .. n=>leaders(i)=max(other(i)\/{decision(i)})) & (!i oftype INT.i:dom(leaders)=>i:dom(decision)&recv(i)=1 .. n \ {i}) & (!i oftype INT.i:1 .. n=>i/:pending(i)) & (!i oftype INT.i:1 .. n=>(!j oftype INT.j:1 .. n&i:pending(j)=>j/:recv(i))) & (!i oftype INT.i:1 .. n&pending(i)/=({} oftype POW(INT))=>i:dom(decision)) & (sent:1 .. n --> POW(1 .. n)) & (!i oftype INT.i:1 .. n=>(!j oftype INT.j:1 .. n=>(j:sent(i) \ pending(i)<=>i:recv(j)))) & (!i oftype INT.i:1 .. n=>pending(i)<:sent(i)) & (!i oftype INT.i:1 .. n&sent(i)/=({} oftype POW(INT))=>i:dom(decision)) & (!i oftype INT.i:1 .. n&i/:dom(decision)=>sent(i)=({} oftype POW(INT))) & (irec:1 .. n --> 0 .. n - 1) & (!i oftype INT.i:1 .. n=>irec(i)=card(recv(i))) & (!i oftype INT.i:1 .. n&irec(i)=n - 1=>recv(i)=1 .. n \ {i}) & (xsent:1 .. n --> (1 .. n +-> 0 .. n)) & (xpending:1 .. n --> (1 .. n +-> 0 .. n)) & (!i oftype INT.i:1 .. n=>sent(i)=(prj1 oftype POW(INT**INT**INT))[xsent(i)]) & (!i oftype INT.i:1 .. n=>pending(i)=(prj1 oftype POW(INT**INT**INT))[xpending(i)]) & (!i oftype INT.i:1 .. n=>xpending(i)<:xsent(i)) & (!i oftype INT.i:1 .. n&xsent(i)/=({} oftype POW(INT**INT))=>{decision(i)}=(prj2 oftype POW(INT**INT**INT))[xsent(i)])) => (to:1 .. n) & (idx:1 .. n) & (dec:0 .. n) & (xpending(idx)/=({} oftype POW(INT**INT))) & (to |-> dec:xpending(idx))
1.7509728933333334E8,1.35179015E8,-1.0,6.59168576E8:not((leader:1 .. n) & (decision:1 .. n +-> 0 .. n) & (card(decision)>=1=>decision~[1 .. n]/=({} oftype POW(INT))) & (!i oftype INT.i:dom(decision)=>decision(i):{0,i}) & (pending:1 .. n --> POW(1 .. n)) & (other:1 .. n --> POW(0 .. n)) & (recv:1 .. n --> POW(1 .. n)) & (!i oftype INT.i:1 .. n=>other(i)<:ran({i} <<| decision)) & (!i oftype INT.i:1 .. n=>recv(i)<:dom({i} <<| decision)) & (!i oftype INT.i:1 .. n=>decision[recv(i)]=other(i)) & (leaders:1 .. n +-> 1 .. n) & (!i oftype INT.i:1 .. n&recv(i)/=({} oftype POW(INT))=>other(i)/=({} oftype POW(INT))) & (!i oftype INT.i:dom(leaders)=>leaders(i)=leader) & (!i oftype INT.i:dom(leaders)&recv(i)=1 .. n \ {i}&dom(decision)=1 .. n=>leaders(i)=max(other(i)\/{decision(i)})) & (!i oftype INT.i:dom(leaders)=>i:dom(decision)&recv(i)=1 .. n \ {i}) & (!i oftype INT.i:1 .. n=>i/:pending(i)) & (!i oftype INT.i:1 .. n=>(!j oftype INT.j:1 .. n&i:pending(j)=>j/:recv(i))) & (!i oftype INT.i:1 .. n&pending(i)/=({} oftype POW(INT))=>i:dom(decision)) & (sent:1 .. n --> POW(1 .. n)) & (!i oftype INT.i:1 .. n=>(!j oftype INT.j:1 .. n=>(j:sent(i) \ pending(i)<=>i:recv(j)))) & (!i oftype INT.i:1 .. n=>pending(i)<:sent(i)) & (!i oftype INT.i:1 .. n&sent(i)/=({} oftype POW(INT))=>i:dom(decision)) & (!i oftype INT.i:1 .. n&i/:dom(decision)=>sent(i)=({} oftype POW(INT))) & (irec:1 .. n --> 0 .. n - 1) & (!i oftype INT.i:1 .. n=>irec(i)=card(recv(i))) & (!i oftype INT.i:1 .. n&irec(i)=n - 1=>recv(i)=1 .. n \ {i}) & (xsent:1 .. n --> (1 .. n +-> 0 .. n)) & (xpending:1 .. n --> (1 .. n +-> 0 .. n)) & (!i oftype INT.i:1 .. n=>sent(i)=(prj1 oftype POW(INT**INT**INT))[xsent(i)]) & (!i oftype INT.i:1 .. n=>pending(i)=(prj1 oftype POW(INT**INT**INT))[xpending(i)]) & (!i oftype INT.i:1 .. n=>xpending(i)<:xsent(i)) & (!i oftype INT.i:1 .. n&xsent(i)/=({} oftype POW(INT**INT))=>{decision(i)}=(prj2 oftype POW(INT**INT**INT))[xsent(i)])) & (idx:dom(decision)) & (irec(idx)=n - 1) & (idx/:dom(leaders)) & (dom(decision)=1 .. n) & (nl=max(other(idx)\/{decision(idx)})) & (max(ran(decision))=max(other(idx)\/{decision(idx)}))
-1.0,-1.0,-1.0,-1.0:(leader:1 .. n) & (decision:1 .. n +-> 0 .. n) & (card(decision)>=1=>decision~[1 .. n]/=({} oftype POW(INT))) & (!i oftype INT.i:dom(decision)=>decision(i):{0,i}) & (pending:1 .. n --> POW(1 .. n)) & (other:1 .. n --> POW(0 .. n)) & (recv:1 .. n --> POW(1 .. n)) & (!i oftype INT.i:1 .. n=>other(i)<:ran({i} <<| decision)) & (!i oftype INT.i:1 .. n=>recv(i)<:dom({i} <<| decision)) & (!i oftype INT.i:1 .. n=>decision[recv(i)]=other(i)) & (leaders:1 .. n +-> 1 .. n) & (!i oftype INT.i:1 .. n&recv(i)/=({} oftype POW(INT))=>other(i)/=({} oftype POW(INT))) & (!i oftype INT.i:dom(leaders)=>leaders(i)=leader) & (!i oftype INT.i:dom(leaders)&recv(i)=1 .. n \ {i}&dom(decision)=1 .. n=>leaders(i)=max(other(i)\/{decision(i)})) & (!i oftype INT.i:dom(leaders)=>i:dom(decision)&recv(i)=1 .. n \ {i}) & (!i oftype INT.i:1 .. n=>i/:pending(i)) & (!i oftype INT.i:1 .. n=>(!j oftype INT.j:1 .. n&i:pending(j)=>j/:recv(i))) & (!i oftype INT.i:1 .. n&pending(i)/=({} oftype POW(INT))=>i:dom(decision)) & (sent:1 .. n --> POW(1 .. n)) & (!i oftype INT.i:1 .. n=>(!j oftype INT.j:1 .. n=>(j:sent(i) \ pending(i)<=>i:recv(j)))) & (!i oftype INT.i:1 .. n=>pending(i)<:sent(i)) & (!i oftype INT.i:1 .. n&sent(i)/=({} oftype POW(INT))=>i:dom(decision)) & (!i oftype INT.i:1 .. n&i/:dom(decision)=>sent(i)=({} oftype POW(INT))) & (irec:1 .. n --> 0 .. n - 1) & (!i oftype INT.i:1 .. n=>irec(i)=card(recv(i))) & (!i oftype INT.i:1 .. n&irec(i)=n - 1=>recv(i)=1 .. n \ {i}) & (xsent:1 .. n --> (1 .. n +-> 0 .. n)) & (xpending:1 .. n --> (1 .. n +-> 0 .. n)) & (!i oftype INT.i:1 .. n=>sent(i)=(prj1 oftype POW(INT**INT**INT))[xsent(i)]) & (!i oftype INT.i:1 .. n=>pending(i)=(prj1 oftype POW(INT**INT**INT))[xpending(i)]) & (!i oftype INT.i:1 .. n=>xpending(i)<:xsent(i)) & (!i oftype INT.i:1 .. n&xsent(i)/=({} oftype POW(INT**INT))=>{decision(i)}=(prj2 oftype POW(INT**INT**INT))[xsent(i)]) & not(!i oftype INT.i:1 .. n&i:dom(decision)&recv(i)=dom({i} <<| decision)=>max(ran(decision))=max(other(i)\/{decision(i)}))
