#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/DoorLockSystem/ADVANCESIM31.zip_unpacked/COMPONENT/XADSR2tb_cmp.bcm
5.6482555E7,6.5255062333333336E7,5.5158038666666664E7,9.045573E7:not((v:NAT) & (adder_evaluated:BOOL) & (incrementer_evaluated:BOOL) & (sum_value:Schedule +-> NAT) & (sum_delay:Schedule +-> NAT) & (sum_inputs:Schedule +-> Inputs) & (data_ready:BOOL) & (data_received:BOOL) & (o_sum:NAT) & (i_sum:NAT) & (o_inputs:Inputs) & (i_inputs:Inputs) & (!s oftype Schedule.s:dom(sum_value)<=>s:dom(sum_inputs)) & (!s oftype Schedule.s:dom(sum_value)<=>s:dom(sum_delay)) & (!s oftype Schedule.s:dom(sum_value)=>sum_value(s)=In1(sum_inputs(s))+In2(sum_inputs(s))) & (data_ready=TRUE=>o_sum=In1(o_inputs)+In2(o_inputs)) & (data_received=TRUE=>i_sum=In1(i_inputs)+In2(i_inputs))) => not((data_received=TRUE))
5.6032055E7,6.4042315333333336E7,5.4816351333333336E7,7.332538123333334E8:not(not((data_received=TRUE))) => (v:NAT) & (adder_evaluated:BOOL) & (incrementer_evaluated:BOOL) & (sum_value:Schedule +-> NAT) & (sum_delay:Schedule +-> NAT) & (sum_inputs:Schedule +-> Inputs) & (data_ready:BOOL) & (data_received:BOOL) & (o_sum:NAT) & (i_sum:NAT) & (o_inputs:Inputs) & (i_inputs:Inputs) & (!s oftype Schedule.s:dom(sum_value)<=>s:dom(sum_inputs)) & (!s oftype Schedule.s:dom(sum_value)<=>s:dom(sum_delay)) & (!s oftype Schedule.s:dom(sum_value)=>sum_value(s)=In1(sum_inputs(s))+In2(sum_inputs(s))) & (data_ready=TRUE=>o_sum=In1(o_inputs)+In2(o_inputs)) & (data_received=TRUE=>i_sum=In1(i_inputs)+In2(i_inputs))
5.8081897E7,6.808936166666667E7,8.6289674E7,1.2269213833333333E8:(v:NAT) & (adder_evaluated:BOOL) & (incrementer_evaluated:BOOL) & (sum_value:Schedule +-> NAT) & (sum_delay:Schedule +-> NAT) & (sum_inputs:Schedule +-> Inputs) & (data_ready:BOOL) & (data_received:BOOL) & (o_sum:NAT) & (i_sum:NAT) & (o_inputs:Inputs) & (i_inputs:Inputs) & (!s oftype Schedule.s:dom(sum_value)<=>s:dom(sum_inputs)) & (!s oftype Schedule.s:dom(sum_value)<=>s:dom(sum_delay)) & (!s oftype Schedule.s:dom(sum_value)=>sum_value(s)=In1(sum_inputs(s))+In2(sum_inputs(s))) & (data_ready=TRUE=>o_sum=In1(o_inputs)+In2(o_inputs)) & (data_received=TRUE=>i_sum=In1(i_inputs)+In2(i_inputs)) & ((p:Parameters) & (p:Inputs) & (In1(p):NAT) & (In2(p):NAT) & (data_ready=FALSE) => not((adder_evaluated=TRUE) & (0/:ran(sum_delay)or incrementer_evaluated=TRUE)))
