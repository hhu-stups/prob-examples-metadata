#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/ServiceDoors/ServiceDoorsInst_M2.bcm
6.3314429E7,8.480447566666667E7,-1.0,1.1980359666666667E8:not(not((cmd:command) & (command_state(cmd):{FAIL,SUCCESS}))) => not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN))
2.75982884E8,3.19530088E8,-1.0,5.703223153333334E8:not(not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN))) => not((d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}))
3.426100716666667E8,1.0409454533333333E8,-1.0,5.026472983333333E8:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN)) & not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED})
5.334220226666667E8,7.466962103333334E8,-1.0,1.2182317316666667E9:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (d:carriage_door) & (d:locked_doors)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}])
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (d:carriage_door) & (d:locked_doors)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
5.9279651333333336E7,1.2406130733333333E8,-1.0,3.189464243333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door) & (d:locked_doors) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
8.317440333333333E7,1.1046388433333333E8,-1.0,2.818959496666667E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}])) => (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
2.14585179E8,2.2736357266666666E8,-1.0,2.6283952266666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) => not((cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & not((ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}) & not((ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door))
9.153806066666667E7,1.1805311733333333E8,-1.0,1.0901149046666667E9:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
