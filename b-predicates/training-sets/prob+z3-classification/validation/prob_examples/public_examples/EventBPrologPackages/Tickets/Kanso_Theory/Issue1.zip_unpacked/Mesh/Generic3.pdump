#source:examples/prob_examples/public_examples/EventBPrologPackages/Tickets/Kanso_Theory/Issue1.zip_unpacked/Mesh/Generic3.bcm
5.1031978666666664E7,7.668451866666667E7,7.557075966666667E7,7.9642367E7:not((active_component_addresses<:COMPONENT_ADDRESSES) & (sent_packets<:NAT) & (finite(sent_packets)) & (received_packets<:sent_packets) & (lost_packets<:sent_packets) & (lost_packets/\received_packets=({} oftype POW(INT))) & (packet_destination:sent_packets --> COMPONENT_ADDRESSES) & (real_time:NAT) & (network_schedule:sent_packets --> NAT1) & (!pkt oftype INT.pkt:sent_packets&network_schedule(pkt)<real_time&pkt/:lost_packets=>pkt:received_packets) & (!pkt oftype INT.pkt:sent_packets&network_schedule(pkt)>real_time=>pkt/:received_packets)) => not((addr:active_component_addresses))
5.3189840666666664E7,8.262128433333333E7,3.013637653333333E8,1.08000093E8:not((acting_addr:active_component_addresses) & (destination:COMPONENT_ADDRESSES \ {acting_addr}) & (packet:NAT \ sent_packets) & (delay:NAT1)) => not((active_component_addresses<:COMPONENT_ADDRESSES) & (sent_packets<:NAT) & (finite(sent_packets)) & (received_packets<:sent_packets) & (lost_packets<:sent_packets) & (lost_packets/\received_packets=({} oftype POW(INT))) & (packet_destination:sent_packets --> COMPONENT_ADDRESSES) & (real_time:NAT) & (network_schedule:sent_packets --> NAT1) & (!pkt oftype INT.pkt:sent_packets&network_schedule(pkt)<real_time&pkt/:lost_packets=>pkt:received_packets) & (!pkt oftype INT.pkt:sent_packets&network_schedule(pkt)>real_time=>pkt/:received_packets))
3.241430353333333E8,1.0152790133333333E8,2.73957696E8,1.10510608E8:not((active_component_addresses<:COMPONENT_ADDRESSES) & (sent_packets<:NAT) & (finite(sent_packets)) & (received_packets<:sent_packets) & (lost_packets<:sent_packets) & (lost_packets/\received_packets=({} oftype POW(INT))) & (packet_destination:sent_packets --> COMPONENT_ADDRESSES) & (real_time:NAT) & (network_schedule:sent_packets --> NAT1) & (!pkt oftype INT.pkt:sent_packets&network_schedule(pkt)<real_time&pkt/:lost_packets=>pkt:received_packets) & (!pkt oftype INT.pkt:sent_packets&network_schedule(pkt)>real_time=>pkt/:received_packets)) => not((elapsed_time:NAT1) & (sent_packets \ (received_packets\/lost_packets)/=({} oftype POW(INT))=>real_time+elapsed_time<=min(network_schedule[sent_packets \ (received_packets\/lost_packets)])) & (event_occurred=TRUE))
