#source:examples/prob_examples/public_examples/EventBPrologPackages/EventB2Java/MIO.zip_unpacked/MIO/ref2.bcm
6.1800200666666664E7,5.6275196333333336E7,5.1885182666666664E7,9.104677366666667E7:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS)))) => (d:openedDoor)
5.1928996666666664E7,5.6503484E7,4.8100064666666664E7,9.6620713E7:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS)))) => not((parked>0) & (b:dom(busSta)) & (b:authorizedBus))
5.3657521666666664E7,5.5876705E7,4.9182814E7,1.4228552866666666E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS)))) & (parked>0) & (b:dom(busSta)) & (b:authorizedBus)
5.1165305333333336E7,5.8427821E7,-1.0,5.9937417333333336E7:not(not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta)))) => not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))))
5.4475223666666664E7,5.9961139666666664E7,5.2422914333333336E7,1.4693926233333334E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS)))) & (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
6.3474645333333336E7,5.18709842E9,-1.0,4.424710013333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & ((d:openedDoor) => not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))))
