#source:examples/prob_examples/public_examples/EventBPrologPackages/OLSR/Rodin_model.zip_unpacked/OLSR/M3.bcm
-1.0,-1.0,1.4168626666666666E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node)
-1.0,-1.0,-1.0,-1.0:not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc)) => (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node)
1.4917949133333334E8,3.976545486666667E8,-1.0,8.59187075E8:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & not((d:NODES) & (d |-> hello:hello_storage) & (hello:got_hello))
1.0063432866666667E8,1.9200199966666666E8,1.6876140466666666E8,2.970283206666667E8:not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc)) & (d:NODES) & (d |-> hello:hello_storage) & (hello:got_hello)
-1.0,-1.0,-1.0,-1.0:not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc)) => (s:NODES) & (tc:Tc) & (tc/:broadcast_tc) & (source_tc(tc)=s) & (s |-> tc/:tc_storage)
-1.0,-1.0,1.81203606E8,-1.0:not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc)) => (tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s))
-1.0,-1.0,-1.0,-1.0:not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc)) => (msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node)
-1.0,-1.0,-1.0,-1.0:not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc)) => (msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b)
-1.0,-1.0,4.214927053333333E8,-1.0:not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc)) => (hello:broadcast_hello \ (got_hello\/deleted_hello)&source_hello(hello)=s) & (s/=d) & (d |-> hello:hello_storage)
1.2689348733333333E8,2.699826563333333E8,3.811589913333333E8,2.37592597E8:not(not((msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location))) => (sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc)
-1.0,-1.0,4.940085606666667E8,-1.0:not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc)) => (tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1)
-1.0,-1.0,2.689120356666667E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & (d:NODES) & (d |-> hello:hello_storage) & (hello:got_hello)
-1.0,-1.0,4.814730983333333E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & (tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s))
-1.0,-1.0,2.2053253633333334E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & not((tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s)))
-1.0,-1.0,2.14254178E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & (msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node)
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node)) => (msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node))
-1.0,-1.0,2.90334802E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & (msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b)
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node)) => (msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b))
-1.0,-1.0,7.89336968E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & not((msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b))
2.41275956E8,4.371045136666667E8,-1.0,9.751779656666666E8:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & ((msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) => not((msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b)))
-1.0,-1.0,2.2961714166666666E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & not((s:NODES) & (hello:Hello) & (hello/:broadcast_hello) & (source_hello(hello)=s) & (s |-> hello/:hello_storage))
-1.0,-1.0,1.4250583166666666E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & not((a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc)))
-1.0,-1.0,1.5265491033333334E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & not((a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_time_to_live(tc)<=1))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node)) => (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location))
-1.0,-1.0,1.4098669033333334E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & not((msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location))
-1.0,-1.0,1.4032571233333334E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (s/=d) & (msg |-> s:packet_location) & (rt_next_hops(s)(d)=node) & not((tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1))
9.609648433333333E7,2.1275121666666666E8,-1.0,6.396022843333334E8:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & ((d:NODES) & (d |-> hello:hello_storage) & (hello:got_hello) => not((msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node)))
-1.0,-1.0,1.3911138166666666E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (d:NODES) & (d |-> hello:hello_storage) & (hello:got_hello) & (hello:broadcast_hello \ (got_hello\/deleted_hello)&source_hello(hello)=s) & (s/=d) & (d |-> hello:hello_storage)
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((d:NODES) & (d |-> hello:hello_storage) & (hello:got_hello)) => (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc)))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (d:NODES) & (d |-> hello:hello_storage) & (hello:got_hello) & (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location)
-1.0,-1.0,1.3781054166666666E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (s:NODES) & (tc:Tc) & (tc/:broadcast_tc) & (source_tc(tc)=s) & (s |-> tc/:tc_storage) & (tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s))
2.2347308733333334E8,9.170479013333334E8,-1.0,1.3706339103333333E9:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (s:NODES) & (tc:Tc) & (tc/:broadcast_tc) & (source_tc(tc)=s) & (s |-> tc/:tc_storage) & not((hello:broadcast_hello \ (got_hello\/deleted_hello)&source_hello(hello)=s) & (s/=d) & (d |-> hello:hello_storage))
3.023146543333333E8,2.3895550333333334E8,-1.0,4.964447643333333E8:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (s:NODES) & (tc:Tc) & (tc/:broadcast_tc) & (source_tc(tc)=s) & (s |-> tc/:tc_storage) & not((s:NODES) & (hello:Hello) & (hello/:broadcast_hello) & (source_hello(hello)=s) & (s |-> hello/:hello_storage))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s))) => (msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s))) => (msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b))
-1.0,-1.0,1.40502062E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s)) & (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s))) => (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc)))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s))) => (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location))
1.4287177633333334E8,1.5998470666666666E8,-1.0,4.96094697E8:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (tc:broadcast_tc \ (got_tc\/deleted_tc)) & (source_tc(tc)=s&source_tc(tc)/=d) & (s/=d) & (d |-> tc:tc_storage) & (tc_sqn(tc)>rt_sqn(d)(s)) & not((tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1))
-1.0,-1.0,1.4791080166666666E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node) & (msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b)
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node)) => (msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b))
1.67464545E8,2.928439433333333E8,-1.0,4.492047256666667E8:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node) & not((a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_time_to_live(tc)<=1))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node)) => (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node)) => (tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1))
1.0416867033333333E8,1.4741267E8,-1.0,4.027515183333333E8:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & ((msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (rt_next_hops(s)(d)/=node) => not((tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1)))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b)) => (hello:broadcast_hello \ (got_hello\/deleted_hello)&source_hello(hello)=s) & (s/=d) & (d |-> hello:hello_storage))
-1.0,-1.0,3.44807604E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b) & (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b)) => (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc)))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (rt_next_hops(a)(d)/=node) & (rt_next_hops(a)(d)=b)) => (tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1))
-1.0,-1.0,1.2429436766666667E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (hello:broadcast_hello \ (got_hello\/deleted_hello)&source_hello(hello)=s) & (s/=d) & (d |-> hello:hello_storage) & (s:NODES) & (hello:Hello) & (hello/:broadcast_hello) & (source_hello(hello)=s) & (s |-> hello/:hello_storage)
9.356515733333333E7,2.801250773333333E8,-1.0,5.013768163333333E8:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & ((hello:broadcast_hello \ (got_hello\/deleted_hello)&source_hello(hello)=s) & (s/=d) & (d |-> hello:hello_storage) => not((s:NODES) & (hello:Hello) & (hello/:broadcast_hello) & (source_hello(hello)=s) & (s |-> hello/:hello_storage)))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((hello:broadcast_hello \ (got_hello\/deleted_hello)&source_hello(hello)=s) & (s/=d) & (d |-> hello:hello_storage)) => (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc)))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (hello:broadcast_hello \ (got_hello\/deleted_hello)&source_hello(hello)=s) & (s/=d) & (d |-> hello:hello_storage) & (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location)
9.721219866666667E7,1.3011317033333333E8,-1.0,6.676667243333334E8:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((s:NODES) & (hello:Hello) & (hello/:broadcast_hello) & (source_hello(hello)=s) & (s |-> hello/:hello_storage)) => (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc)))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc))) => (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_time_to_live(tc)<=1))
-1.0,-1.0,5.135406066666667E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc)) & (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location)
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc))) => (tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1))
-1.0,-1.0,2.1231068066666666E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_sqn(tc)<=rt_sqn(a)(s)) & (s=source_tc(tc)) & not((tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_time_to_live(tc)<=1) & (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location)
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_time_to_live(tc)<=1)) => (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((a:NODES) & (tc:got_tc) & (a |-> tc:tc_storage) & (tc_time_to_live(tc)<=1)) => (tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (not((msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location)) => (tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1))
-1.0,-1.0,-1.0,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (broadcast_hello<:Hello) & (got_hello<:broadcast_hello) & (deleted_hello<:broadcast_hello) & (hello_storage:NODES <-> Hello) & (broadcast_tc<:Tc) & (got_tc<:broadcast_tc) & (deleted_tc<:broadcast_tc) & (tc_storage:NODES <-> Tc) & (tc_hops:Tc --> NAT) & (tc_sender:Tc --> NODES) & (tc_time_to_live:Tc --> NAT) & (rt_hops:NODES --> (NODES --> NAT)) & (rt_next_hops:NODES --> (NODES --> NODES)) & (#msg oftype MSG,s oftype NODES.s=source(msg)&msg:got_packet=>packet_hops(msg)>rt_hops(s)(destination(msg))) & (!a oftype NODES,tc oftype Tc.a |-> tc:tc_storage&tc_hops(tc)=0&a/=source_tc(tc)=>source_tc(tc)=tc_sender(tc)&rt_hops(a)(source_tc(tc))=1) & (got_tc\/ran(tc_storage)\/deleted_tc=broadcast_tc) & (got_hello\/ran(hello_storage)\/deleted_hello=broadcast_hello) & (got_hello/\ran(hello_storage)/\deleted_hello=({} oftype POW(Hello))) & (got_tc/\ran(tc_storage)/\deleted_tc=({} oftype POW(Tc))) & (!tc oftype Tc.tc:broadcast_tc&tc/:ran(tc_storage)&tc/:deleted_tc=>tc:got_tc) & (!s oftype NODES,m oftype MSG.s |-> destination(m):closure(links)<=>rt_next_hops(s)(destination(m))/=node) & (!s oftype NODES,m oftype MSG.m:sent_packet&rt_next_hops(s)(destination(m))=node<=>m/:got_packet&m:lost_packet) & (rt_sqn:NODES --> (NODES --> NAT)) & (local_sqn:NODES --> NAT) & (!tc oftype Tc,d oftype NODES.tc:broadcast_tc&d |-> tc:tc_storage&tc_sqn(tc)<=rt_sqn(d)(source_tc(tc))=>tc/:got_tc&tc:deleted_tc) & (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location) & not((tc:got_tc&source_tc(tc)/=a) & (b:NODES&a:NODES&a/=b) & (a |-> tc:tc_storage&b |-> tc/:tc_storage) & (tc_time_to_live(tc)>1))
