#source:examples/prob_examples/public_examples/EventBPrologPackages/OLSR/Rodin_model.zip_unpacked/OLSR/M1.bcm
8.55784733E8,4.509992276666667E8,9.280868266666667E7,6.4701314333333336E7:not(not((s |-> d/:links) & (s/=d))) => (sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG)))
1.189548033E9,3.1610890603333335E9,-1.0,8.117262443333334E8:not((msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (s |-> d:closure(links))) => not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))))
1.7290040866666666E8,1.2617370083333333E9,-1.0,2.0863039216666667E9:not(not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))))) => (msg:travelling_packet) & (destination(msg)=d) & (a/=destination(msg)&msg |-> a:packet_location&msg |-> b/:packet_location) & (a |-> d:closure(links)) & (a |-> b:links)
2.929246333333333E8,1.0822051266666667E8,9.6664224E7,2.0067200366666666E8:not((sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG)))) & not((msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location))
-1.0,-1.0,2.02833405E8,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (msg:travelling_packet) & (destination(msg)=d) & (msg |-> s:packet_location) & (s/=d) & (s |-> d/:closure(links)) & (msg:MSG&msg/:sent_packet) & (source(msg)=s&destination(msg)=d) & (s/=d) & (s |-> d:closure(links))
-1.0,-1.0,1.7913276543333333E9,-1.0:(sent_packet<:MSG) & (lost_packet<:sent_packet) & (got_packet<:sent_packet) & (got_packet/\lost_packet=({} oftype POW(MSG))) & (links:NODES <-> NODES) & (NODES <| (id oftype POW(NODES**NODES))/\links=({} oftype POW(NODES**NODES))) & (travelling_packet<:sent_packet) & (travelling_packet/\got_packet/\lost_packet=({} oftype POW(MSG))) & (travelling_packet\/got_packet\/lost_packet=sent_packet) & (packet_location:sent_packet <-> NODES) & (!m oftype MSG.m:MSG&m/:sent_packet=>m/:got_packet&(!s oftype NODES.s:NODES=>m |-> s/:packet_location)) & (!m oftype MSG.m:got_packet=>m |-> destination(m):packet_location) & (!m oftype MSG,s oftype NODES,r oftype NODES.m |-> s:packet_location&m |-> r:packet_location=>s=r) & (packet_hops:MSG --> NAT) & (!m oftype MSG.m:sent_packet \ (lost_packet\/got_packet)<=>m:travelling_packet) & (dom(packet_location)=sent_packet) & (sent_packet \ lost_packet=got_packet<=>travelling_packet=({} oftype POW(MSG))) & (msg:travelling_packet) & (destination(msg)=d) & (msg |-> s:packet_location) & (s/=d) & (s |-> d/:closure(links)) & (msg:travelling_packet) & (destination(msg)=d) & (msg |-> d:packet_location)
