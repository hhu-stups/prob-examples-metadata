#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/ServiceDoors/ServiceDoorsInst_M2.bcm
1.3101223766666667E8,1.0182181666666667E8,-1.0,2.42891572E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & not((cmd:command) & (command_state(cmd):{FAIL,SUCCESS}))
7.9895332E7,2.57972726E8,-1.0,1.089565E8:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN)) => not((ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))))
7.811202833333333E7,1.0124462533333333E8,-1.0,1.0432427666666667E8:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN)) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))))
4.644179033333333E8,4.51126292E8,-1.0,9.96144342E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & not((cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL))
8.3416287E7,1.06678487E8,-1.0,7.02637768E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & not((ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}))
5.39834756E8,1.0152070766666667E8,-1.0,6.8570419E8:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN)) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN)
8.05182E7,4.1615888E8,-1.0,5.836852346666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) => not((ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}])))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
8.326959766666667E7,1.08568741E8,-1.0,2.70487818E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) => not((d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED})))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
8.5223966E7,1.1494322466666667E8,-1.0,3.15067417E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
8.779682566666667E7,1.1745746466666667E8,-1.0,1.3868156463333333E9:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}))
1.6980427466666666E8,1.96912866E8,-1.0,4.05013864E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN)
8.481746666666667E7,1.1156274366666667E8,-1.0,1.7170069833333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED})
9.0888001E7,1.3896483393333333E9,-1.0,3.204251043333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & not((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
9.089836066666667E7,1.64449902E9,-1.0,3.132419056666667E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & not((ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
8.821007633333333E7,1.13477E8,-1.0,2.913884976666667E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & not((d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
8.691943333333333E7,1.1387821466666667E8,-1.0,2.87801938E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
8.655304566666667E7,1.10078989E8,-1.0,2.947727733333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&carriage_ds(d)=OPEN) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
2.1592336066666666E8,1.1953666266666667E8,-1.0,3.140544853333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED})) => (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
9.0277006E7,4.276047023333333E8,-1.0,6.399887393333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
8.65065965E8,9.547147716666666E8,-1.0,1.6403296816666667E9:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & not((ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (carriage_ds(d):{OPEN,CLOSED}) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
9.134872066666667E7,1.176824E8,-1.0,3.197574216666667E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})) => (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))))
9.040355866666667E7,1.2738579866666667E8,-1.0,3.169860496666667E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
9.0447256E7,1.3294902933333333E8,-1.0,7.96533926E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}])
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
9.5221746E7,1.20714117E8,-1.0,1.154262214E9:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
1.3740050333333334E8,1.0747074266666667E8,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((ds<:DOOR \ isolated_door) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) => not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED)))
8.2361684E7,1.0583440833333333E8,-1.0,3.08829868E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door) & (d:locked_doors) & not((ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:carriage_door) & (d:locked_doors)) => (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))))
8.267375833333333E7,1.07673003E8,-1.0,2.71959793E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door) & (d:locked_doors) & not((doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:carriage_door) & (d:locked_doors)) => (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:carriage_door) & (d:locked_doors)) => (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL))
8.896922833333333E7,1.1329641366666667E8,-1.0,3.346338713333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:carriage_door) & (d:locked_doors)) => (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:carriage_door) & (d:locked_doors)) => (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED}))
8.5896654E7,1.0326061733333333E8,-1.0,1.63417522E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((d:carriage_door) & (d:locked_doors) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door) & (d:locked_doors) & (d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED)
7.873105433333333E7,9.8328449E7,-1.0,2.3351624066666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((d:carriage_door) & (d:locked_doors) => not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
8.781011933333333E7,1.600805428E9,-1.0,2.67248254E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED})) => (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (d:carriage_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (carriage_ds(d):{OPEN,CLOSED}) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
8.2468355E7,1.0734395766666667E8,-1.0,2.764090323333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]) & not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
2.1620377143333335E9,1.2886571266666667E8,-1.0,2.5939299466666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&carriage_ds(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) => not((ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:carriage_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
8.5236258E7,1.12839349E8,-1.0,6.652938203333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})))
8.407151533333333E7,1.0980898266666667E8,-1.0,7.272439926666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)) => (d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
8.848501866666667E7,1.2209452966666667E8,-1.0,3.49521449E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})) => (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR))))
9.025393533333333E7,1.1572984733333333E8,-1.0,2.58809797E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))) => (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED}))
8.1548941E7,9.17077584E8,-1.0,2.60214049E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & ((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>carriage_ds(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR))) => not((ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (carriage_ds[command_doors(cmd) \ isolated_door]={CLOSED}) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>carriage_ds(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(carriage_ds)=>carriage_ds(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>carriage_ds(d)=OPEN) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
