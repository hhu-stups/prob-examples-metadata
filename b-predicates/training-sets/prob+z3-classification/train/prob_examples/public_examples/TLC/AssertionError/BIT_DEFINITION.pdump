#source:examples/prob_examples/public_examples/TLC/AssertionError/BIT_DEFINITION.mch
5.5344444666666664E7,6.820539133333333E7,4.5374042666666664E7,9.699895033333333E7:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_not(0)=1
6.0956727333333336E7,6.0969322E7,1.07775833E8,2.1617911966666666E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & bit_not(1)=0
5.4298408666666664E7,6.7851179E7,5.0863311666666664E7,1.01008422E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_not(1)=0
5.5096414666666664E7,6.783479033333333E7,5.1664135E7,1.03193942E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bit_and)=BIT*BIT
5.8177370333333336E7,6.1618310333333336E7,9.240136866666667E7,2.2949089166666666E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & bit_and(1,0)=0
6.0287834E7,5.2946258333333336E7,1.06233877E8,2.1155369466666666E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & bit_and(1,1)=1
5.4554516666666664E7,6.802655066666667E7,5.2165083E7,9.799630733333333E7:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => !b1.(b1:BIT => bit_and(b1,1)=b1)
5.9161084333333336E7,8.6697268E7,9.1216651E7,1.9096860433333334E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & !b1.(b1:BIT => bit_and(b1,0)=0)
5.5229183333333336E7,6.812346733333333E7,4.7803262333333336E7,9.982088766666667E7:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bit_or)=BIT*BIT
5.3766217666666664E7,6.931367933333333E7,4.6258675666666664E7,9.8617103E7:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_or(0,0)=0
5.3643158E7,8.902773166666667E7,4.4161062666666664E7,9.898942666666667E7:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_or(0,1)=1
5.3290925E7,6.796483433333333E7,4.6586883333333336E7,9.736838766666667E7:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_or(1,0)=1
5.7659334E7,6.4602931333333336E7,8.7138944E7,1.0282310766666667E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_or(1,1)=1)
8.5236281E7,5.1413032333333336E7,8.464418966666667E7,1.5130187566666666E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(!b1,b2.(b1:BIT&b2:BIT&bit_or(b1,b2)=0 => bit_or(b2,b1)=0))
5.6320244333333336E7,7.064026766666667E7,5.4327322666666664E7,1.0539068333333333E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => !b1,b2.(b1:BIT&b2:BIT&bit_or(b1,0)=1 => b1=1)
5.6823869E7,7.1913358E7,5.5575130333333336E7,1.1088803066666667E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => !b1.(b1:BIT => bit_or(b1,0)=b1)
5.720064E7,6.8170773E7,5.0185129E7,1.0612308566666667E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_xor(1,1)=0
6.178139E7,5.1806169333333336E7,9.9337097E7,1.6551907E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(!b1,b2.(b1:BIT&b2:BIT&bit_xor(b1,b2)=1 => bit_xor(b2,b1)=1))
7.981175533333333E7,7.307630866666667E7,5.9173237333333336E7,1.2032046833333333E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => !b1,b2.(b1:BIT&b2:BIT&bit_xor(b1,b2)=0 => bit_xor(b2,b1)=0)
6.0979658666666664E7,9.747065833333333E7,5.6359634E7,1.9937546966666666E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(!bb.(bb:BIT => bit_xor(bb,bb)=0))
5.9957042666666664E7,7.4906988E7,4.3149086E7,1.7284686366666666E8:(BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bool_bit(FALSE)=0)
7.547212033333333E7,6.714866933333333E7,4.5480131666666664E7,1.0439754033333333E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => bool_bit(FALSE)=0
5.5792779333333336E7,6.796977E7,5.29924E7,1.3917693933333334E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => !bb.(bb:BIT => bb=0 or bb=1)
5.4906865333333336E7,6.790539933333333E7,5.3094694333333336E7,1.0356726666666667E8:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => !bb.(bb:BIT&not(bb=0) => bb=1)
-1.0,-1.0,-1.0,-1.0:not((BIT=0..1) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and=%b1,b2.(b1:BIT&b2:BIT&(b1=1&b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1&b2=1)|0)) & (bit_or=%b1,b2.(b1:BIT&b2:BIT&(b1=1 or b2=1)|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1=1 or b2=1)|0)) & (bit_xor=%b1,b2.(b1:BIT&b2:BIT&b1/=b2|1)\/%b1,b2.(b1:BIT&b2:BIT&not(b1/=b2)|0)) & (bool_bit={(TRUE,1),(FALSE,0)})) => (!bb.(bb:BIT => bit_not(bb)=1-bb)) & (dom(bit_and)=BIT*BIT) & (ran(bit_not)=BIT) & (bit_not(0)=1) & (bit_not(1)=0) & (!bb.(bb:BIT => bit_not(bit_not(bb))=bb)) & (dom(bit_and)=BIT*BIT) & (ran(bit_and)=BIT) & (bit_and(0,0)=0) & (bit_and(0,1)=0) & (bit_and(1,0)=0) & (bit_and(1,1)=1) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=bit_and(b2,b1))) & (!b1,b2.(b1:BIT&b2:BIT&bit_and(b1,b2)=1 => bit_and(b2,b1)=1)) & (!b1,b2.(b1:BIT&b2:BIT&bit_and(b1,b2)=0 => bit_and(b2,b1)=0)) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT => bit_and(b1,bit_and(b2,b3))=bit_and(bit_and(b1,b2),b3))) & (!b1.(b1:BIT => bit_and(b1,1)=b1)) & (!b1.(b1:BIT => bit_and(b1,0)=0)) & (dom(bit_or)=BIT*BIT) & (ran(bit_or)=BIT) & (bit_or(0,0)=0) & (bit_or(0,1)=1) & (bit_or(1,0)=1) & (bit_or(1,1)=1) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=bit_or(b2,b1))) & (!b1,b2.(b1:BIT&b2:BIT&bit_or(b1,b2)=1 => bit_or(b2,b1)=1)) & (!b1,b2.(b1:BIT&b2:BIT&bit_or(b1,b2)=0 => bit_or(b2,b1)=0)) & (!b1,b2.(b1:BIT&b2:BIT&bit_or(b1,0)=1 => b1=1)) & (!b1,b2.(b1:BIT&b2:BIT&bit_or(b1,0)=0 => b1=0)) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT => bit_or(b1,bit_or(b2,b3))=bit_or(bit_or(b1,b2),b3))) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT&bit_or(b1,b2)=1 => bit_or(b1,bit_or(b2,b3))=1)) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT&bit_or(b1,b2)=1 => bit_or(b1,bit_or(b2,b3))=bit_or(1,b3))) & (!b1.(b1:BIT => bit_or(b1,1)=1)) & (!b1.(b1:BIT => bit_or(b1,0)=b1)) & (!b1.(b1:BIT => bit_or(1,b1)=1)) & (!b1.(b1:BIT => bit_or(0,b1)=b1)) & (dom(bit_xor)=BIT*BIT) & (ran(bit_xor)=BIT) & (bit_xor(0,0)=0) & (bit_xor(0,1)=1) & (bit_xor(1,0)=1) & (bit_xor(1,1)=0) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=bit_xor(b2,b1))) & (!b1,b2.(b1:BIT&b2:BIT&bit_xor(b1,b2)=1 => bit_xor(b2,b1)=1)) & (!b1,b2.(b1:BIT&b2:BIT&bit_xor(b1,b2)=0 => bit_xor(b2,b1)=0)) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT => bit_xor(b1,bit_xor(b2,b3))=bit_xor(bit_xor(b1,b2),b3))) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT&bit_xor(b1,b2)=1 => bit_xor(b1,bit_xor(b2,b3))=1)) & (!b1,b2,b3.(b1:BIT&b2:BIT&b3:BIT&bit_xor(b1,b2)=1 => bit_xor(b1,bit_xor(b2,b3))=bit_xor(1,b3))) & (!bb.(bb:BIT => bit_xor(bb,bb)=0)) & (dom(bool_bit)=BOOL) & (ran(bit_xor)=BIT) & (bool_bit(TRUE)=1) & (bool_bit(FALSE)=0) & (!bb.(bb:BIT => bb=0 or bb=1)) & (!bb.(bb:BIT&not(bb=0) => bb=1)) & (!bb.(bb:BIT&not(bb=1) => bb=0))
