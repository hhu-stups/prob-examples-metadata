#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/Train/Train_M2.bcm
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
1.38911962E8,1.7013013066666666E8,-1.0,6.35226216E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)
1.02000564E8,1.9810736166666666E8,-1.0,1.06120492E9:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) => (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)
-1.0,-1.0,-1.0,-1.0:not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
8.503579066666667E7,1.20408445E8,-1.0,5.838225886666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)
9.811142866666667E7,3.970599196666667E8,-1.0,5.705493926666666E8:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) => (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)
7.4433534E7,1.0602083766666667E8,-1.0,-1.0:not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
2.24310368E8,1.1999479833333333E8,-1.0,1.1925508826666667E9:not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED))
9.040851733333333E7,1.26194143E8,-1.0,1.4264154446666667E9:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))
5.51345158E8,3.678212153333333E8,-1.0,1.482277111E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE))
-1.0,-1.0,-1.0,-1.0:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) => (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])
-1.0,-1.0,-1.0,-1.0:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])
-1.0,-1.0,-1.0,-1.0:not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
-1.0,-1.0,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED))) => (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:not((s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
-1.0,-1.0,-1.0,-1.0:not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
9.315833166666667E7,1.2696798466666667E8,-1.0,1.360330714E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
6.889130266666667E7,1.03269417E8,-1.0,5.630019943333334E8:not(not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))))) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
8.742019466666667E7,1.28047359E8,-1.0,2.0712548943333333E9:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
9.815545233333333E7,1.32732009E8,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED))) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
9.123115466666667E7,1.24990382E8,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED))) => not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:not((c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage))) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
5.800572356666666E8,1.3492879666666666E8,-1.0,2.2001348313333335E9:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
5.880497326666666E8,1.3963344533333334E8,-1.0,2.13053294E9:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) => not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
-1.0,-1.0,-1.0,-1.0:not(not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED))) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
6.80215084E8,1.32079692E8,-1.0,-1.0:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) => not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
7.5495774E7,1.06713384E8,-1.0,2.4302974033333334E8:not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)) => not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED))
7.267571993333334E8,1.3067860566666667E8,-1.0,5.579389903333334E8:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) => not((t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
8.8583215E7,1.1835920833333333E8,-1.0,4.827997563333333E8:not(not((t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))) => not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
9.8659404E7,1.3360158E8,-1.0,5.156190833333333E8:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) => not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
6.766921966666667E7,1.01512839E8,-1.0,1.43681958E8:not(not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))) => (trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)
8.014666766666667E7,1.1370342566666667E8,-1.0,4.349095416666667E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & trns:POW(TRAIN)
2.69479194E8,1.3246221233333333E8,-1.0,4.85082542E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & braking:POW(TRAIN)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & not(!c oftype CARRIAGE.c:ran(DOOR_CARRIAGE)&c:dom(train_carriage)=>DOOR_CARRIAGE~[{c}]<:door_train_carriage[{train_carriage(c)}])
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & not(!c oftype CARRIAGE.c:dom(train_carriage)&door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR))&door(train_carriage(c))/=({} oftype POW(DOOR))=>DOOR_CARRIAGE~[{c}]<:door(train_carriage(c))&DOOR_CARRIAGE~[{c}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
3.2017037E8,1.7597256366666666E8,-1.0,4.678001066666667E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & dom(dom(carriage_door_state))<:dom(door_state)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & not(dom(dom(carriage_door_state))<:dom(door_state))
1.0727027466666667E8,1.2557846933333333E8,-1.0,7.38020224E8:not((trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED)) => dom(dom(carriage_door_state))<:dom(door_state)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & not((trns:POW(TRAIN)) & (door_state:POW(DOOR ** DOOR_STATE)) & (braking:POW(TRAIN)) & (speed:POW(TRAIN ** INT)) & (permit:POW(TRAIN ** BOOL)) & (door:POW(TRAIN ** POW(DOOR))) & (emergency_button:POW(TRAIN ** BOOL)) & (!t oftype TRAIN.t:dom(door)&door(t)/\door_state~[{OPEN}]=({} oftype POW(DOOR))=>door(t)<:door_state~[{CLOSED}]) & (!c oftype CARRIAGE.c:ran(DOOR_CARRIAGE)&c:dom(train_carriage)=>DOOR_CARRIAGE~[{c}]<:door_train_carriage[{train_carriage(c)}]) & (!c oftype CARRIAGE.c:dom(train_carriage)&door(train_carriage(c))/\door_state~[{OPEN}]=({} oftype POW(DOOR))&door(train_carriage(c))/=({} oftype POW(DOOR))=>DOOR_CARRIAGE~[{c}]<:door(train_carriage(c))&DOOR_CARRIAGE~[{c}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (dom(dom(carriage_door_state))<:dom(door_state)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (t1:trns) & (bb:BOOL)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))))
8.711699066666667E7,2.57306021E8,-1.0,9.905080106666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) => not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))) => (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE)
4.32991747E8,1.2581851366666667E8,-1.0,1.0550950883333334E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) => not((t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))) => (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE)
1.6055028133333334E8,2.909758286666667E8,-1.0,8.047701456666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) => not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))) => (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)>MAX_SPEED) & (speed(t1)>s1) & (s1<=MAX_SPEED) & (t1:emergency_brake) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
4.86098593E8,1.63192517E8,-1.0,1.1358003233333333E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE))
5.179982263333333E8,2.39914005E8,-1.0,1.781181974E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])
1.7901301066666666E8,1.2764365233333333E8,-1.0,9.44655276E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) => not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
8.6491329E7,5.614736343333334E8,-1.0,1.016359413E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) => not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
1.205279945E9,1.2401770036666667E9,-1.0,1.1688592986666667E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}/=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & (card(train_carriage |> {train_carriage(c)})>1)) => (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)) => (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))))
1.1331422333333333E8,1.27060362E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))))
1.1895178833333333E8,1.2392041366666667E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) => not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])
1.3306624633333333E8,1.2490638633333333E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) => not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
8.643885466666667E7,1.4092002206666667E9,-1.0,4.781319143333333E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
9.0078773E7,1.3051301233333333E8,-1.0,4.042714506666667E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (t1:braking) & (emergency_button(t1)=FALSE) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]))
9.956941166666667E7,1.1683133733333333E8,-1.0,4.537549776666667E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) => not((t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE)))
1.768010932E9,1.2292084533333333E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE))
1.73060578E8,1.1543311433333333E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) => not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE)))
2.12691246E8,1.2953278933333333E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
2.5216712266666666E8,1.2311602866666667E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
2.793080276666667E8,1.2374019966666667E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)))
1.929405711E9,1.6688406863333333E9,-1.0,4.833933840333333E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & not((c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
8.6525342E7,1.24840293E8,-1.0,5.033640566666667E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) => not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR)))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)))
8.771844066666667E7,1.24161576E8,-1.0,6.58493467E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE) & not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:trns) & (speed(t1)>0) & (permit(t1)=TRUE)) => (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (bb:BOOL) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (bb:BOOL) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])
8.162953733333333E7,1.1363730966666667E8,-1.0,3.132841123333333E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((t1:trns) & (bb:BOOL) => not((t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE)))
8.4009659E7,1.1901127E8,-1.0,4.96324521E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((t1:trns) & (bb:BOOL) => not((s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:trns) & (bb:BOOL) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))) => (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))) => (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR)))) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
1.1810079566666667E8,1.2705321433333333E8,-1.0,5.502841293333334E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) => not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR)))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (t:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t)=0) & (ds<:(train_carriage~;DOOR_CARRIAGE~)[{t}]) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])
2.0956875866666666E8,1.4216256166666666E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE)) => (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]))
2.926749973333333E8,1.3655898566666666E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE)) => (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE))
5.011419633333333E8,1.4710664866666666E8,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
9.1709241E7,1.3439216E8,-1.0,6.775268233333334E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) => not((s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
9.045421666666667E7,1.3307106533333333E8,-1.0,6.671330436666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) => not((c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR)))
1.01422534E8,1.4677858166666666E8,-1.0,7.759487433333334E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:CARRIAGE \ dom(train_carriage)) & (carriage_alarm[{c}]={FALSE}) & (!tr oftype TRAIN.tr:dom(door_train_carriage)&tr/=t=>DOOR_CARRIAGE~[{c}]/\door_train_carriage[{tr}]=({} oftype POW(DOOR))) & (t:trns) & (emergency_button(t)=FALSE) & (finite(train_carriage~[{t}])) & (card(dom(train_carriage |> {t}))<MAX_NUMBER_CARRIAGE) & (speed(t)=0) & (DOOR_CARRIAGE~[{c}]/\door_train_carriage[{t}]=({} oftype POW(DOOR))) & (trns_state(t)=MAINTENANCE) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & not((t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])) => (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])) => (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & (c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}])) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t))
8.956238966666667E7,1.33625931E8,-1.0,6.4437E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) => not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & not((t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:dom(door_train_carriage)) & (c |-> t:train_carriage) & (carriage_alarm(c)=FALSE) & (emergency_button(t)=FALSE) & (trns_state(t)=MAINTENANCE) & (speed(t)=0) & (door_state[DOOR_CARRIAGE~[{c}]]={CLOSED}) & (!d oftype DOOR.d:DOOR_CARRIAGE~[{c}]=>t=door_train_carriage~(d)) & (c:ran(DOOR_CARRIAGE)) & (DOOR_CARRIAGE~[{c}]<:door_train_carriage[{t}]) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
8.704086366666667E7,1.2208298266666667E8,-1.0,6.669375346666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & not((c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR)))
9.296685E7,1.3407030766666667E8,-1.0,6.676553866666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t))
8.958089766666667E7,1.3167817433333333E8,-1.0,6.153979496666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
8.5882872E7,1.2084350933333333E8,-1.0,5.434756986666666E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & ((t1:TRAIN) & (t1:trns \ braking) & (permit(t1)=FALSE or emergency_button(t1)=TRUE) => not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & (c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1>MAX_SPEED) & (speed(t1)<s1) & (t1/:emergency_brake) & (speed(t1)<=MAX_SPEED) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
9.635727233333333E7,1.3021045966666667E8,-1.0,8.367494913333334E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)))
9.6244385E7,1.3348841333333333E8,-1.0,7.38880575E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (s1:NAT) & (t1:dom(door_train_carriage) \ braking) & (trns_state(t1)/=MAINTENANCE) & (s1<=MAX_SPEED) & (speed(t1)<s1) & (door_train_carriage[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (carriage_alarm(c)=FALSE) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))) => (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((occpTrns:POW(CDV)) & (c:dom(train_carriage)) & (emergency_button(train_carriage(c))=TRUE) & (carriage_alarm(c)=TRUE) & ({c}=dom(carriage_alarm |> {TRUE})/\train_carriage~[{train_carriage(c)}]) & ((DOOR_CARRIAGE;train_carriage)~[{train_carriage(c)}]/\door_state~[{OPEN}]=({} oftype POW(DOOR)))) => (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
1.0548806533333333E8,2.3707159736666665E9,-1.0,7.09089589E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
9.281180233333333E7,1.28716694E8,-1.0,3.0724616353333335E9:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & not((t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
9.273898066666667E7,1.2791198266666667E8,-1.0,6.09184357E8:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c:dom(train_carriage)) & (finite(train_carriage~[{train_carriage(c)}])) & (c:CABIN_CARRIAGE) & (c:dom(train_carriage |> {train_carriage(c)})) & (trns_state(train_carriage(c))=MAINTENANCE) & (card(dom(train_carriage |> {train_carriage(c)}))=MAX_NUMBER_CARRIAGE) & (train_carriage(c)/:dom(leader_carriage)) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((ocA:CDV) & (oc:POW(CDV)) & (t:TRAIN) & (t:trns) & (ocA:oc) & (finite(oc)) & (state=MAINTENANCE=>speed(t)=0) & (card(oc)=card(train_carriage~[{t}])) & (card(train_carriage~[{t}]/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&t:dom(leader_carriage)&leader_carriage(t):train_carriage~[{t}]) & (oc<:CDV) & (state:TRAIN_STATE) & (state/=trns_state(t)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & (t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE) & not((t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (not((c2:CDV) & (t1:TRAIN) & (c1:CDV) & (t1:dom(train_carriage~;DOOR_CARRIAGE~)) & (speed(t1)>0) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (permit(t1)=TRUE)) => (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))) & (t:dom(leader_carriage)) & (finite(train_carriage~[{t}])) & (trns_state(t)=MAINTENANCE) & (card(dom(train_carriage |> {t}))=MAX_NUMBER_CARRIAGE) & (lc=leader_carriage)
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))) & not((t:TRAIN) & (t:TRAIN \ trns) & (oc:CDV))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))) & (s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(trns<:TRAIN) & (braking<:trns) & (speed:trns --> NAT) & (permit:trns --> BOOL) & (emergency_button:trns --> BOOL) & (door_state:DOOR --> DOOR_STATE) & (door:trns --> POW(DOOR)) & (!t1 oftype TRAIN,t2 oftype TRAIN.t1:dom(door)&t2:dom(door)&t1/=t2=>door(t1)/\door(t2)=({} oftype POW(DOOR))) & (!t oftype TRAIN.t:dom(door)=>(#d oftype POW(DOOR).d<:door(t)&door_state[d]={OPEN}=>speed(t)=0)) & (!t oftype TRAIN.t:dom(door)&speed(t)>0=>door(t)<:door_state~[{CLOSED}]) & (finite(trns)) & (carriage_alarm:CARRIAGE --> BOOL) & (train_carriage:CARRIAGE +-> trns) & (finite(train_carriage)) & (finite(dom(train_carriage))) & (!t oftype TRAIN.t:trns=>card(train_carriage~[{t}])<=MAX_NUMBER_CARRIAGE) & (#c oftype CARRIAGE.c:dom(train_carriage)&carriage_alarm(c)=TRUE<=>c:dom(train_carriage)&emergency_button(train_carriage(c))=TRUE) & (!t oftype TRAIN.t:dom(door)=>door(t)=DOOR_CARRIAGE~[train_carriage~[{t}]]) & (!t oftype TRAIN.t:dom(door_train_carriage)=>t:dom(door)&door(t)=door_train_carriage[{t}]&door(t)/=({} oftype POW(DOOR))) & (door_train_carriage:trns <-> DOOR) & (door_train_carriage=(DOOR_CARRIAGE;train_carriage)~) & (door_train_carriage~:DOOR +-> trns) & (!t oftype TRAIN.t:dom(door)&door(t)/=({} oftype POW(DOOR))=>door(t)=door_train_carriage[{t}]) & (leader_carriage:trns +-> CABIN_CARRIAGE) & (finite(leader_carriage)) & (trns_state:trns --> TRAIN_STATE) & (!t oftype TRAIN,c oftype POW(CARRIAGE).t:ran(train_carriage)&trns_state(t)/=MAINTENANCE&c=train_carriage~[{t}]&finite(CABIN_CARRIAGE)&t:dom(leader_carriage)=>card(c/\CABIN_CARRIAGE)=NUMBER_CABIN_CARRIAGE&leader_carriage(t):c) & (!t oftype TRAIN.t:trns&trns_state(t)=MAINTENANCE=>speed(t)=0) & (emergency_brake<:trns) & (!t oftype TRAIN.t:trns&speed(t)>MAX_SPEED=>t:emergency_brake) & (carriage_door_state:DOOR_CARRIAGE --> DOOR_STATE) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=OPEN=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=OPEN) & (!d oftype DOOR.d:dom(door_state)&door_state(d)=CLOSED=>carriage_door_state(d |-> DOOR_CARRIAGE(d))=CLOSED) & (t:TRAIN) & (occpTrns:POW(CDV)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (t:dom((DOOR_CARRIAGE;train_carriage)~)) & (speed(t)=0) & ({platform}/=({} oftype POW(CDV))or emergency_button(t)=TRUE) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR_CARRIAGE~[train_carriage~[{t}]]) & (#d oftype DOOR.d:ds=>door_state(d)=CLOSED) & (ds/=({} oftype POW(DOOR))) & not((s1:NAT) & (t1:dom((DOOR_CARRIAGE;train_carriage)~)) & (trns_state(t1)/=MAINTENANCE) & (speed(t1)<=MAX_SPEED) & (speed(t1)>s1) & ((train_carriage~;DOOR_CARRIAGE~)[{t1}]/\door_state~[{OPEN}]=({} oftype POW(DOOR))) & (door_train_carriage[{t1}]/=({} oftype POW(DOOR))))
