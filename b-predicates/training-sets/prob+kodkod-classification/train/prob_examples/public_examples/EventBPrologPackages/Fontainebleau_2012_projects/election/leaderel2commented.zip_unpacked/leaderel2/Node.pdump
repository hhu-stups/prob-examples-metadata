#source:examples/prob_examples/public_examples/EventBPrologPackages/Fontainebleau_2012_projects/election/leaderel2commented.zip_unpacked/leaderel2/Node.bcm
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & not((phantom_decision=({} oftype POW(INT))))
1.11739954E8,7.106534566666667E7,1.22502985E8,1.9877303766666667E9:not(not((ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1))) => (phantom_decision=({} oftype POW(INT)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & not((d:{pid,0}) & (phantom_decision=({} oftype POW(INT))) & (il>0))
-1.0,-1.0,2.2775645333333334E8,-1.0:not((d:{pid,0}) & (phantom_decision=({} oftype POW(INT))) & (il>0)) => (ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1)
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (m:INPUT)
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & not((m:INPUT))
8.9973639E7,7.102046033333333E7,-1.0,3.627687573333333E8:not((ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1)) & (phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision)
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & not((phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d})))
8.8932771E7,6.996457666666667E7,-1.0,2.3654304533333334E8:not((ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1)) & (phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d}))
-1.0,-1.0,9.879869E7,-1.0:not(not((ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1))) => (phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d}))
1.6589481533333334E8,7.828937833333333E7,1.5659537866666666E8,3.04453916E8:not((ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1)) => (ol>r)
-1.0,-1.0,9.7287395E7,-1.0:not(not((ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1))) => (ol>r)
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & finite(ran(ih))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((phantom_decision=({} oftype POW(INT))) => not((d:{pid,0}) & (phantom_decision=({} oftype POW(INT))) & (il>0)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((phantom_decision=({} oftype POW(INT))) => not((m:INPUT)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (not((phantom_decision=({} oftype POW(INT)))) => (phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((phantom_decision=({} oftype POW(INT))) => not((phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (not((phantom_decision=({} oftype POW(INT)))) => (phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d})))
5.9195423333333336E7,9.016849633333333E7,-1.0,2.4274362466666666E8:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (phantom_decision=({} oftype POW(INT))) & not((phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d})))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((phantom_decision=({} oftype POW(INT))) => not((phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d}))))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((phantom_decision=({} oftype POW(INT))) => not((ol>r)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (not((d:{pid,0}) & (phantom_decision=({} oftype POW(INT))) & (il>0)) => (phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((d:{pid,0}) & (phantom_decision=({} oftype POW(INT))) & (il>0) => not((phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (not((d:{pid,0}) & (phantom_decision=({} oftype POW(INT))) & (il>0)) => (phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d})))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (not((d:{pid,0}) & (phantom_decision=({} oftype POW(INT))) & (il>0)) => (ol>r))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((d:{pid,0}) & (phantom_decision=({} oftype POW(INT))) & (il>0) => not((ol>r)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (m:INPUT) & (phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision)
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (not((m:INPUT)) => (phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (m:INPUT) & not((phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((m:INPUT) => not((phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (m:INPUT) & not((phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d})))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((m:INPUT) => not((phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d}))))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (m:INPUT) & (ol>r)
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((m:INPUT) => not((ol>r)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision) & (ol>r)
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (not((phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision)) => (ol>r))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision) & not((ol>r))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision) => not((ol>r)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (not((phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d}))) => (ol>r))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d})) & not((ol>r))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d})) => not((ol>r)))
