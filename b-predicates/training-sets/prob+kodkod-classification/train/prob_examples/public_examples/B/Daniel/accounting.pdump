#source:examples/prob_examples/public_examples/B/Daniel/accounting.mch
4.582965476666667E8,7.9683783E7,-1.0,9.320482233333333E7:(accounts<:ACCOUNT) & (balance:accounts-->INTEGER) & (limit:accounts+->INTEGER) & (SIGMA(acc).(acc:accounts|balance(acc))=0) & (!acc,lim.(acc:accounts&lim:INT&(acc,lim):limit => balance(acc)>=lim))
6.3553216666666664E7,5.7627835666666664E7,-1.0,6.742917533333333E7:not((accounts<:ACCOUNT) & (balance:accounts-->INTEGER) & (limit:accounts+->INTEGER) & (SIGMA(acc).(acc:accounts|balance(acc))=0) & (!acc,lim.(acc:accounts&lim:INT&(acc,lim):limit => balance(acc)>=lim))) => not((amount:NATURAL) & (src:ACCOUNT) & (dst:ACCOUNT) & (src:accounts) & (dst:accounts) & (src/=dst) & (src:dom(limit) => balance(src)-amount>=limit(src)))
5.7638312E7,6.1290894666666664E7,-1.0,9.088244089333334E9:(accounts<:ACCOUNT) & (balance:accounts-->INTEGER) & (limit:accounts+->INTEGER) & (SIGMA(acc).(acc:accounts|balance(acc))=0) & (!acc,lim.(acc:accounts&lim:INT&(acc,lim):limit => balance(acc)>=lim)) & (lim:INTEGER) & (account:ACCOUNT) & (account:accounts) & (lim<=balance(account))
4.9803446666666664E7,5.1958423E7,-1.0,9.3683468E7:not(not((account:ACCOUNT) & (account:accounts))) => (accounts<:ACCOUNT) & (balance:accounts-->INTEGER) & (limit:accounts+->INTEGER) & (SIGMA(acc).(acc:accounts|balance(acc))=0) & (!acc,lim.(acc:accounts&lim:INT&(acc,lim):limit => balance(acc)>=lim))
-1.0,-1.0,-1.0,-1.0:(accounts<:ACCOUNT) & (balance:accounts-->INTEGER) & (limit:accounts+->INTEGER) & (SIGMA(acc).(acc:accounts|balance(acc))=0) & (!acc,lim.(acc:accounts&lim:INT&(acc,lim):limit => balance(acc)>=lim)) & (amount:NATURAL) & (src:ACCOUNT) & (dst:ACCOUNT) & (src:accounts) & (dst:accounts) & (src/=dst) & (src:dom(limit) => balance(src)-amount>=limit(src)) & not((account:ACCOUNT) & (account:accounts))
-1.0,-1.0,-1.0,-1.0:(accounts<:ACCOUNT) & (balance:accounts-->INTEGER) & (limit:accounts+->INTEGER) & (SIGMA(acc).(acc:accounts|balance(acc))=0) & (!acc,lim.(acc:accounts&lim:INT&(acc,lim):limit => balance(acc)>=lim)) & (lim:INTEGER) & (account:ACCOUNT) & (account:accounts) & (lim<=balance(account)) & not((account:ACCOUNT) & (account:accounts))
-1.0,-1.0,-1.0,-1.0:balance:accounts-->INTEGER & not(!new.(new:ACCOUNT-accounts => balance<+{(new,0)}:accounts\/{new}-->INTEGER))
