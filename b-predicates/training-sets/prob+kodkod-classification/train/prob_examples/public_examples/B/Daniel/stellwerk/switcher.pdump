#source:examples/prob_examples/public_examples/B/Daniel/stellwerk/switcher.mch
1.3512865933333334E8,1.16018361E8,-1.0,1.26843574E8:not((card(ROUTE)>=card(start_tracks)) & (route:ROUTE) & (section:SECTION)) => (routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked)
2.3389207966666666E8,1.8413973366666666E8,-1.0,6.093080923333334E8:not((card(ROUTE)>=card(start_tracks)) & not((route:ROUTE) & (section:SECTION))) => not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked))
3.703077746666667E8,2.6367170466666666E8,-1.0,7.13369417E8:not((card(ROUTE)>=card(start_tracks)) & not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked))) => not((section:SECTION))
9.182869333333333E7,6.6085452333333336E7,1.1080480233333333E8,5.6622424E7:not((card(ROUTE)>=card(start_tracks)) & (routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked)) => (route:ROUTE)
3.804557826666667E8,2.66876116E8,-1.0,6.442877036666666E8:(card(ROUTE)>=card(start_tracks)) & not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked)) & (route:ROUTE)
5.2794958666666664E7,5.2665356666666664E7,6.797929133333333E7,5.5984912333333336E7:not((card(ROUTE)>=card(start_tracks)) & not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked))) => (route:ROUTE)
1.29836902E8,1.1735957033333333E8,-1.0,1.3080166566666667E8:not((card(ROUTE)>=card(start_tracks)) & (section:SECTION)) => (routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked)
