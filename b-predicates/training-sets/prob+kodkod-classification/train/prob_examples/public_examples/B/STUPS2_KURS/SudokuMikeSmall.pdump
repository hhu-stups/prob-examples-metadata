#source:examples/prob_examples/public_examples/B/STUPS2_KURS/SudokuMikeSmall.mch
6.4217407666666664E7,5.9361133333333336E7,1.16256567E8,2.29668521E8:not((Squares:SDSet) & (Squares(1,1)(1,1)=1) & (Squares(1,1)(1,2)=2) & (Squares(1,2)(2,1)=2) & (Squares(2,1)(1,1)=3) & (Squares(2,1)(1,2)=4) & (Squares(2,2)(2,2)=3) & (!row,minrow,col,col2,mincol,mincol2.(row:INDEX&minrow:INDEX&col:INDEX&col2:INDEX&mincol:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2) => Squares(row,col)(minrow,mincol)/=Squares(row,col2)(minrow,mincol2))) & (!row,minrow,col,row2,mincol,minrow2.(row:INDEX&minrow:INDEX&col:INDEX&row2:INDEX&mincol:INDEX&minrow2:INDEX&(row/=row2 or minrow/=minrow2) => Squares(row,col)(minrow,mincol)/=Squares(row2,col)(minrow2,mincol)))) => not((x:INDEX) & (y:INDEX) & (minx:INDEX) & (miny:INDEX))
-1.0,-1.0,-1.0,-1.0:not((Squares:SDSet) & (Squares(1,1)(1,1)=1) & (Squares(1,1)(1,2)=2) & (Squares(1,2)(2,1)=2) & (Squares(2,1)(1,1)=3) & (Squares(2,1)(1,2)=4) & (Squares(2,2)(2,2)=3) & (!row,minrow,col,col2,mincol,mincol2.(row:INDEX&minrow:INDEX&col:INDEX&col2:INDEX&mincol:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2) => Squares(row,col)(minrow,mincol)/=Squares(row,col2)(minrow,mincol2))) & (!row,minrow,col,row2,mincol,minrow2.(row:INDEX&minrow:INDEX&col:INDEX&row2:INDEX&mincol:INDEX&minrow2:INDEX&(row/=row2 or minrow/=minrow2) => Squares(row,col)(minrow,mincol)/=Squares(row2,col)(minrow2,mincol)))) => (!row,minrow,col,mincol.(col:INDEX&mincol:INDEX&row:INDEX&minrow:INDEX => Squares(row,col)(minrow,mincol):RANGE-UNION(col2,mincol2).(col2:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2)|{Squares(row,col2)(minrow,mincol2)}))) & (col:INDEX&mincol:INDEX&row:INDEX&minrow:INDEX => Squares(row,col)(minrow,mincol):RANGE-UNION(col2,mincol2).(col2:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2)|{Squares(row,col2)(minrow,mincol2)})) & (Squares(row,col)(minrow,mincol):RANGE-UNION(col2,mincol2).(col2:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2)|{Squares(row,col2)(minrow,mincol2)}))
7.055312933333333E7,1.45680374E8,-1.0,-1.0:(Squares:SDSet) & (Squares(1,1)(1,1)=1) & (Squares(1,1)(1,2)=2) & (Squares(1,2)(2,1)=2) & (Squares(2,1)(1,1)=3) & (Squares(2,1)(1,2)=4) & (Squares(2,2)(2,2)=3) & (!row,minrow,col,col2,mincol,mincol2.(row:INDEX&minrow:INDEX&col:INDEX&col2:INDEX&mincol:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2) => Squares(row,col)(minrow,mincol)/=Squares(row,col2)(minrow,mincol2))) & (!row,minrow,col,row2,mincol,minrow2.(row:INDEX&minrow:INDEX&col:INDEX&row2:INDEX&mincol:INDEX&minrow2:INDEX&(row/=row2 or minrow/=minrow2) => Squares(row,col)(minrow,mincol)/=Squares(row2,col)(minrow2,mincol))) & ((CHECK_ROWS) => not((x:INDEX) & (y:INDEX) & (minx:INDEX) & (miny:INDEX)))
3.18851394E8,2.2413010733333334E8,-1.0,-1.0:(Squares:SDSet) & (Squares(1,1)(1,1)=1) & (Squares(1,1)(1,2)=2) & (Squares(1,2)(2,1)=2) & (Squares(2,1)(1,1)=3) & (Squares(2,1)(1,2)=4) & (Squares(2,2)(2,2)=3) & (!row,minrow,col,col2,mincol,mincol2.(row:INDEX&minrow:INDEX&col:INDEX&col2:INDEX&mincol:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2) => Squares(row,col)(minrow,mincol)/=Squares(row,col2)(minrow,mincol2))) & (!row,minrow,col,row2,mincol,minrow2.(row:INDEX&minrow:INDEX&col:INDEX&row2:INDEX&mincol:INDEX&minrow2:INDEX&(row/=row2 or minrow/=minrow2) => Squares(row,col)(minrow,mincol)/=Squares(row2,col)(minrow2,mincol))) & (not((CHECK_ROWS)) => (!row,minrow,col,mincol.(col:INDEX&mincol:INDEX&row:INDEX&minrow:INDEX => Squares(row,col)(minrow,mincol):RANGE-UNION(col2,mincol2).(col2:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2)|{Squares(row,col2)(minrow,mincol2)}))) & (col:INDEX&mincol:INDEX&row:INDEX&minrow:INDEX => Squares(row,col)(minrow,mincol):RANGE-UNION(col2,mincol2).(col2:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2)|{Squares(row,col2)(minrow,mincol2)})) & (Squares(row,col)(minrow,mincol):RANGE-UNION(col2,mincol2).(col2:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2)|{Squares(row,col2)(minrow,mincol2)})))
3.74042351E8,3.045892686666667E8,-1.0,-1.0:(Squares:SDSet) & (Squares(1,1)(1,1)=1) & (Squares(1,1)(1,2)=2) & (Squares(1,2)(2,1)=2) & (Squares(2,1)(1,1)=3) & (Squares(2,1)(1,2)=4) & (Squares(2,2)(2,2)=3) & (!row,minrow,col,col2,mincol,mincol2.(row:INDEX&minrow:INDEX&col:INDEX&col2:INDEX&mincol:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2) => Squares(row,col)(minrow,mincol)/=Squares(row,col2)(minrow,mincol2))) & (!row,minrow,col,row2,mincol,minrow2.(row:INDEX&minrow:INDEX&col:INDEX&row2:INDEX&mincol:INDEX&minrow2:INDEX&(row/=row2 or minrow/=minrow2) => Squares(row,col)(minrow,mincol)/=Squares(row2,col)(minrow2,mincol))) & (not((x:INDEX) & (y:INDEX) & (minx:INDEX) & (miny:INDEX)) => (!row,minrow,col,mincol.(col:INDEX&mincol:INDEX&row:INDEX&minrow:INDEX => Squares(row,col)(minrow,mincol):RANGE-UNION(col2,mincol2).(col2:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2)|{Squares(row,col2)(minrow,mincol2)}))) & (col:INDEX&mincol:INDEX&row:INDEX&minrow:INDEX => Squares(row,col)(minrow,mincol):RANGE-UNION(col2,mincol2).(col2:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2)|{Squares(row,col2)(minrow,mincol2)})) & (Squares(row,col)(minrow,mincol):RANGE-UNION(col2,mincol2).(col2:INDEX&mincol2:INDEX&(col/=col2 or mincol/=mincol2)|{Squares(row,col2)(minrow,mincol2)})))
