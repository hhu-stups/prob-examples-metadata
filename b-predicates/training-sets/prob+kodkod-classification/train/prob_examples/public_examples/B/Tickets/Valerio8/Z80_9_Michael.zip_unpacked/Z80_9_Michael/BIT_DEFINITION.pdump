#source:examples/prob_examples/public_examples/B/Tickets/Valerio8/Z80_9_Michael.zip_unpacked/Z80_9_Michael/BIT_DEFINITION.mch
2.1950815576666665E9,8.44980287E8,-1.0,1.3611819166666667E9:(BIT={0,1}) & (bit_not:BIT>->>BIT) & (bit_not={(0,1)}\/{(1,0)}) & (bit_and:BIT*BIT-->BIT) & (bit_and={((0,0),0)}\/{((0,1),0)}\/{((1,0),0)}\/{((1,1),1)}) & (bit_or:BIT*BIT-->BIT) & (bit_or={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),1)}) & (bit_xor:BIT*BIT-->BIT) & (bit_xor={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),0)}) & (bool_bit={(TRUE,1),(FALSE,0)}) & !bb.(bb:BIT => bit_not(bb)=1-bb)
1.8341936733333334E8,1.1393869733333333E8,1.2221519233333333E8,1.0034288133333333E8:not((BIT={0,1}) & (bit_not:BIT>->>BIT) & (bit_not={(0,1)}\/{(1,0)}) & (bit_and:BIT*BIT-->BIT) & (bit_and={((0,0),0)}\/{((0,1),0)}\/{((1,0),0)}\/{((1,1),1)}) & (bit_or:BIT*BIT-->BIT) & (bit_or={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),1)}) & (bit_xor:BIT*BIT-->BIT) & (bit_xor={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),0)}) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bit_and)=BIT*BIT
7.750154192E9,1.8767644966666666E8,-1.0,6.489675794E9:not((BIT={0,1}) & (bit_not:BIT>->>BIT) & (bit_not={(0,1)}\/{(1,0)}) & (bit_and:BIT*BIT-->BIT) & (bit_and={((0,0),0)}\/{((0,1),0)}\/{((1,0),0)}\/{((1,1),1)}) & (bit_or:BIT*BIT-->BIT) & (bit_or={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),1)}) & (bit_xor:BIT*BIT-->BIT) & (bit_xor={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),0)}) & (bool_bit={(TRUE,1),(FALSE,0)})) => !bb.(bb:BIT => bit_not(bit_not(bb))=bb)
1.7513020833333334E8,1.12335607E8,1.15400429E8,9.482390633333333E7:not((BIT={0,1}) & (bit_not:BIT>->>BIT) & (bit_not={(0,1)}\/{(1,0)}) & (bit_and:BIT*BIT-->BIT) & (bit_and={((0,0),0)}\/{((0,1),0)}\/{((1,0),0)}\/{((1,1),1)}) & (bit_or:BIT*BIT-->BIT) & (bit_or={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),1)}) & (bit_xor:BIT*BIT-->BIT) & (bit_xor={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),0)}) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bit_and)=BIT*BIT
6.58262712E8,1.2567920366666667E8,5.18318356E8,5.8497639E7:(BIT={0,1}) & (bit_not:BIT>->>BIT) & (bit_not={(0,1)}\/{(1,0)}) & (bit_and:BIT*BIT-->BIT) & (bit_and={((0,0),0)}\/{((0,1),0)}\/{((1,0),0)}\/{((1,1),1)}) & (bit_or:BIT*BIT-->BIT) & (bit_or={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),1)}) & (bit_xor:BIT*BIT-->BIT) & (bit_xor={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),0)}) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_and(0,1)=0)
4.135546146666667E8,7.614494833333333E7,1.0186812166666667E8,8.893142066666667E7:not((BIT={0,1}) & (bit_not:BIT>->>BIT) & (bit_not={(0,1)}\/{(1,0)}) & (bit_and:BIT*BIT-->BIT) & (bit_and={((0,0),0)}\/{((0,1),0)}\/{((1,0),0)}\/{((1,1),1)}) & (bit_or:BIT*BIT-->BIT) & (bit_or={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),1)}) & (bit_xor:BIT*BIT-->BIT) & (bit_xor={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),0)}) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_and(1,0)=0
9.886406133333333E7,5.3515906666666664E7,8.186983833333333E7,8.6434967E7:not((BIT={0,1}) & (bit_not:BIT>->>BIT) & (bit_not={(0,1)}\/{(1,0)}) & (bit_and:BIT*BIT-->BIT) & (bit_and={((0,0),0)}\/{((0,1),0)}\/{((1,0),0)}\/{((1,1),1)}) & (bit_or:BIT*BIT-->BIT) & (bit_or={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),1)}) & (bit_xor:BIT*BIT-->BIT) & (bit_xor={((0,0),0)}\/{((0,1),1)}\/{((1,0),1)}\/{((1,1),0)}) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_and(1,1)=1
