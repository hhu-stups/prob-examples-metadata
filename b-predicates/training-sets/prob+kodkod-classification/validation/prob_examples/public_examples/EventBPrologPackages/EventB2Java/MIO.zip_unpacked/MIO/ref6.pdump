#source:examples/prob_examples/public_examples/EventBPrologPackages/EventB2Java/MIO.zip_unpacked/MIO/ref6.bcm
6.5474084666666664E7,4.384694E7,-1.0,1.63358413E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer)
6.1585741333333336E7,4.3768438E7,-1.0,2.1886090866666666E8:not((p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor)) => not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))
6.1702841666666664E7,4.5079894333333336E7,-1.0,1.657068705E9:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & not((l:controllerMsg))
6.2028674666666664E7,4.8332542666666664E7,-1.0,2.86308056E8:not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)) => not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))
5.4798542E7,7.592653133333333E7,-1.0,1.2574552966666667E8:not(not((l:greenLight))) => not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))
6.3569909E7,4.5542150666666664E7,-1.0,9.449807333333333E7:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) => (parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))
6.2517191E7,4.5287928333333336E7,-1.0,1.50128961E8:not(not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))) => (parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))
6.3614072E7,4.5814671333333336E7,-1.0,1.70438806E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta)))
-1.0,-1.0,2.08007713E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,7.055126633333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg)
-1.0,-1.0,7.242096466666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
6.2859041E7,4.8521487E7,-1.0,3.60888211E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((l:rejectionMsg) => not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (d:openedDoor)
-1.0,-1.0,8.173118E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,8.372452E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (l:acceptanceMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & (d:openedDoor)
6.0980170666666664E7,4.5613156E7,-1.0,2.722191373333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & not((p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta))
1.31589406E8,4.5532303666666664E7,-1.0,3.722128816666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:redLight)) => (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,8.7807139E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg)
6.4553599666666664E7,4.8860054E7,-1.0,5.281934013333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:greenLight)) => (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg))
-1.0,-1.0,6.6746895333333336E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (p:PERSON) & (l:LECTORS \ blockedLector)
8.88764835E8,9.13777374E8,-1.0,1.5963440836666667E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:greenLight)) => (d:openedDoor))
1.96524432E8,1.11471904E8,-1.0,3.9502826E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:greenLight)) => (l:red) & (l:redMsgOff))
-1.0,-1.0,6.5683818E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((l:acceptanceMsg))
6.0904206666666664E7,5.9918909E7,-1.0,2.2854177233333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
9.158506366666667E7,4.7231238666666664E7,-1.0,3.4763594823333335E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) => not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & (d:openedDoor)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
2.2604964866666666E8,1.1583174533333333E8,-1.0,3.027737906666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((d:openedDoor) => not((l:green) & (l:greenMsgOff)))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (l:red) & (l:redMsgOff)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((l:acceptanceMsg))
6.159084E7,4.6673835666666664E7,-1.0,4.412120653333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)) => not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)))
2.04015911E8,5.8010309333333336E7,-1.0,3.516974706666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)) & (l:green) & (l:greenMsgOff)
1.16273631E8,7.407853066666667E7,-1.0,3.760756636666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta) => not((l:greenLight)))
-1.0,-1.0,1.0318025333333333E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
3.31032156E8,1.4684104266666666E8,-1.0,3.1892146106666665E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg))
1.0408686266666667E8,4.6216002666666664E7,-1.0,2.03589856E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & not((l:red) & (l:redMsgOff))
1.1074925566666667E8,4.9287506333333336E7,-1.0,4.415702816666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:greenLight)) => (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor))
6.1864710666666664E7,4.5775839333333336E7,-1.0,2.733511713333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((parked>0) & (b:dom(busSta)) & (b:authorizedBus) => not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))))
6.781092833333333E7,4.6955645E7,-1.0,4.07736021E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:acceptanceMsg)) => (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
