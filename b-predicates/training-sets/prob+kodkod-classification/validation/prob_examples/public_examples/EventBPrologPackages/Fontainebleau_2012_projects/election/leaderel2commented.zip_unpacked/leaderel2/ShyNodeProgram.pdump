#source:examples/prob_examples/public_examples/EventBPrologPackages/Fontainebleau_2012_projects/election/leaderel2commented.zip_unpacked/leaderel2/ShyNodeProgram.bcm
1.05826446E8,6.9236388E7,1.4980880866666666E8,5.103451586666667E8:not(not((ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1))) => (phantom_decision=({} oftype POW(INT))) & (false)
-1.0,-1.0,8.286882433333333E7,-1.0:not(not((ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1))) => (m:INPUT)
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (not((m:INPUT)) => (ol>r))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (m:INPUT) & not((ol>r))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & ((m:INPUT) => not((ol>r)))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (ol>r) & not((phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d})))
-1.0,-1.0,-1.0,-1.0:(ol:NAT) & (il:NAT) & (r:NAT) & (ih:1 .. il --> INPUT) & (oh:1 .. ol --> OUTPUT) & (ol - r<=QUEUE_LENGTH) & (ol>=r) & (phantom_leader<:0 .. n) & (phantom_decision<:0 .. n) & (card(phantom_leader)<=1) & (card(phantom_decision)<=1) & (ran(oh):1 .. n +-> phantom_decision) & (!i oftype INT.i<ol=>ran(i+1 .. ol <| oh)/\ran(i .. i <| oh)=({} oftype POW(INT**INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_decision/=({} oftype POW(INT))) & (phantom_leader/=({} oftype POW(INT))=>phantom_leader={max(ran(1 .. n - 1 <| ih)\/phantom_decision)}) & (phantom_leader/=({} oftype POW(INT))=>il>=n - 1) & (phantom_decision/=({} oftype POW(INT))) & (to:1 .. n \ {pid}) & (to/:(prj1 oftype POW(INT**INT**INT))[ran(oh)]) & (ol+1 - r<=QUEUE_LENGTH) & ({d}=phantom_decision) & (phantom_decision/=({} oftype POW(INT))) & (il=n - 1) & (phantom_leader=({} oftype POW(INT))) & ({d}=phantom_decision) & (nl=max(ran(ih)\/{d}))
