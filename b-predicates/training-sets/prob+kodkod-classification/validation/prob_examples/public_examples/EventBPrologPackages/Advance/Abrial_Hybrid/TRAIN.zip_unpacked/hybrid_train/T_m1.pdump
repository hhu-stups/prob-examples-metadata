#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/Abrial_Hybrid/TRAIN.zip_unpacked/hybrid_train/T_m1.bcm
9.746106666666667E7,7.100779633333333E7,7.2155591E7,7.7613641E7:not((phase:{0,1,2}) & (z:NAT) & (a:{0,A,-b}) & (v:NAT) & (m:NAT) & (2*m - 2*z>=v*v) & (phase=2&v+2*a<=0=>a=-b) & (phase=2&a=A=>2*m - 2*z>=v*v+24+12*v) & (phase=2&a=0=>2*m - 2*z>=v*v+24+12*v) & (phase2:{0,1,2}) & (z2:NAT) & (a2:{0,A,-b}) & (v2:NAT) & (2*z - 2*z2>=v2*v2) & (phase2=2&v2+2*a2<=0=>a2=-b) & (phase2=2&a2=A=>2*z - 2*z2>=v2*v2+24+12*v2) & (phase2=2&a2=0=>2*z - 2*z2>=v2*v2+24+12*v2)) & not((x:1 .. 300) & (v=0) & (m - z<12) & (m=0))
6.3063583E7,5.5405905E7,7.050296E7,7.8891038E7:not(not((phase2=2) & (v2+2*a2<=0))) => (phase:{0,1,2}) & (z:NAT) & (a:{0,A,-b}) & (v:NAT) & (m:NAT) & (2*m - 2*z>=v*v) & (phase=2&v+2*a<=0=>a=-b) & (phase=2&a=A=>2*m - 2*z>=v*v+24+12*v) & (phase=2&a=0=>2*m - 2*z>=v*v+24+12*v) & (phase2:{0,1,2}) & (z2:NAT) & (a2:{0,A,-b}) & (v2:NAT) & (2*z - 2*z2>=v2*v2) & (phase2=2&v2+2*a2<=0=>a2=-b) & (phase2=2&a2=A=>2*z - 2*z2>=v2*v2+24+12*v2) & (phase2=2&a2=0=>2*z - 2*z2>=v2*v2+24+12*v2)
6.3336103666666664E7,7.047977266666667E7,7.090396533333333E7,5.7335433333333336E7:not(not((phase2=1) & (2*z - 2*z2<v2*v2+24+12*v2) & (v2>0))) => (phase:{0,1,2}) & (z:NAT) & (a:{0,A,-b}) & (v:NAT) & (m:NAT) & (2*m - 2*z>=v*v) & (phase=2&v+2*a<=0=>a=-b) & (phase=2&a=A=>2*m - 2*z>=v*v+24+12*v) & (phase=2&a=0=>2*m - 2*z>=v*v+24+12*v) & (phase2:{0,1,2}) & (z2:NAT) & (a2:{0,A,-b}) & (v2:NAT) & (2*z - 2*z2>=v2*v2) & (phase2=2&v2+2*a2<=0=>a2=-b) & (phase2=2&a2=A=>2*z - 2*z2>=v2*v2+24+12*v2) & (phase2=2&a2=0=>2*z - 2*z2>=v2*v2+24+12*v2)
6.2950533333333336E7,4.7448817666666664E7,7.072763933333333E7,1.23788274E8:(phase:{0,1,2}) & (z:NAT) & (a:{0,A,-b}) & (v:NAT) & (m:NAT) & (2*m - 2*z>=v*v) & (phase=2&v+2*a<=0=>a=-b) & (phase=2&a=A=>2*m - 2*z>=v*v+24+12*v) & (phase=2&a=0=>2*m - 2*z>=v*v+24+12*v) & (phase2:{0,1,2}) & (z2:NAT) & (a2:{0,A,-b}) & (v2:NAT) & (2*z - 2*z2>=v2*v2) & (phase2=2&v2+2*a2<=0=>a2=-b) & (phase2=2&a2=A=>2*z - 2*z2>=v2*v2+24+12*v2) & (phase2=2&a2=0=>2*z - 2*z2>=v2*v2+24+12*v2) & (not((phase2=2) & (v2+2*a2<=0)) => (phase=2) & (v+2*a<=0) & (a=-b))
6.4028067666666664E7,5.0100784666666664E7,-1.0,8.788894633333333E7:(phase:{0,1,2}) & (z:NAT) & (a:{0,A,-b}) & (v:NAT) & (m:NAT) & (2*m - 2*z>=v*v) & (phase=2&v+2*a<=0=>a=-b) & (phase=2&a=A=>2*m - 2*z>=v*v+24+12*v) & (phase=2&a=0=>2*m - 2*z>=v*v+24+12*v) & (phase2:{0,1,2}) & (z2:NAT) & (a2:{0,A,-b}) & (v2:NAT) & (2*z - 2*z2>=v2*v2) & (phase2=2&v2+2*a2<=0=>a2=-b) & (phase2=2&a2=A=>2*z - 2*z2>=v2*v2+24+12*v2) & (phase2=2&a2=0=>2*z - 2*z2>=v2*v2+24+12*v2) & (not((phase2=2) & (v2+2*a2<=0)) => (phase2=1) & (2*z - 2*z2<v2*v2+24+12*v2) & (v2>0))
6.0978983333333336E7,5.4592207666666664E7,7.345545366666667E7,1.3047750933333333E8:(phase:{0,1,2}) & (z:NAT) & (a:{0,A,-b}) & (v:NAT) & (m:NAT) & (2*m - 2*z>=v*v) & (phase=2&v+2*a<=0=>a=-b) & (phase=2&a=A=>2*m - 2*z>=v*v+24+12*v) & (phase=2&a=0=>2*m - 2*z>=v*v+24+12*v) & (phase2:{0,1,2}) & (z2:NAT) & (a2:{0,A,-b}) & (v2:NAT) & (2*z - 2*z2>=v2*v2) & (phase2=2&v2+2*a2<=0=>a2=-b) & (phase2=2&a2=A=>2*z - 2*z2>=v2*v2+24+12*v2) & (phase2=2&a2=0=>2*z - 2*z2>=v2*v2+24+12*v2) & (phase=1) & (2*m - 2*z>=v*v+24+12*v) & (v>=0) & (e>0) & (A>0) & (v+4<=sl) & (phase2=1) & (2*z - 2*z2>=v2*v2+24+12*v2) & (v2+4<=sl)
6.3110656E7,5.1598927E7,-1.0,1.20829867E8:(phase:{0,1,2}) & (z:NAT) & (a:{0,A,-b}) & (v:NAT) & (m:NAT) & (2*m - 2*z>=v*v) & (phase=2&v+2*a<=0=>a=-b) & (phase=2&a=A=>2*m - 2*z>=v*v+24+12*v) & (phase=2&a=0=>2*m - 2*z>=v*v+24+12*v) & (phase2:{0,1,2}) & (z2:NAT) & (a2:{0,A,-b}) & (v2:NAT) & (2*z - 2*z2>=v2*v2) & (phase2=2&v2+2*a2<=0=>a2=-b) & (phase2=2&a2=A=>2*z - 2*z2>=v2*v2+24+12*v2) & (phase2=2&a2=0=>2*z - 2*z2>=v2*v2+24+12*v2) & ((phase2=1) & (2*z - 2*z2>=v2*v2+24+12*v2) & (v2+4<=sl) => not((phase2=1) & (2*z - 2*z2>=v2*v2+24+12*v2) & (v2+4>sl) & (v2>0)))
6.3041536E7,5.1693398333333336E7,-1.0,8.6756703E7:(phase:{0,1,2}) & (z:NAT) & (a:{0,A,-b}) & (v:NAT) & (m:NAT) & (2*m - 2*z>=v*v) & (phase=2&v+2*a<=0=>a=-b) & (phase=2&a=A=>2*m - 2*z>=v*v+24+12*v) & (phase=2&a=0=>2*m - 2*z>=v*v+24+12*v) & (phase2:{0,1,2}) & (z2:NAT) & (a2:{0,A,-b}) & (v2:NAT) & (2*z - 2*z2>=v2*v2) & (phase2=2&v2+2*a2<=0=>a2=-b) & (phase2=2&a2=A=>2*z - 2*z2>=v2*v2+24+12*v2) & (phase2=2&a2=0=>2*z - 2*z2>=v2*v2+24+12*v2) & ((phase2=1) & (2*z - 2*z2>=v2*v2+24+12*v2) & (v2+4>sl) & (v2>0) => not((phase2=1) & (2*z - 2*z2<v2*v2+24+12*v2) & (v2>0)))
