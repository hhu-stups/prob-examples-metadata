#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/GCDoors/GCDoor_M2.bcm
8.0107836E7,1.05448046E8,-1.0,1.5940227666666666E8:not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN)) => not((ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
6.4253678333333336E7,8.627593866666667E7,-1.0,1.5238909686666667E9:not((d:generic_door \ locked_doors) & (generic_door_state(d)=CLOSED)) => (generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN)
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (doors<:generic_door) & (generic_door_state[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
8.537798933333333E7,1.1231286233333333E8,-1.0,2.04601646E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (not((cmd:command) & (command_state(cmd):{FAIL,SUCCESS})) => (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
1.17558967E8,1.4030697133333334E8,-1.0,2.3253175766666666E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:generic_door) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={CLOSED}) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
8.5925638E7,1.1494455166666667E8,-1.0,2.982268906666667E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:generic_door) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={CLOSED}) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED})
9.613962333333333E7,1.25891335E8,-1.0,4.771422403333333E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (not((doors<:generic_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR)))) => (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&generic_door_state(d)=OPEN) & not((d:generic_door \ locked_doors) & (generic_door_state(d)=CLOSED))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (generic_door_state(d):{OPEN,CLOSED}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (generic_door_state(d):{OPEN,CLOSED}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED})
8.653686566666667E7,3.657175981E9,-1.0,3.195207296666667E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((ds/\generic_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=GEN_DOOR_CARRIAGE~[{c}]))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (generic_door_state[command_doors(cmd) \ isolated_door]={CLOSED})
1.4376490666666666E8,1.1272443666666667E8,-1.0,1.7305983233333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) => not((ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)))
4.373060428666667E9,2.2661308166666666E8,-1.0,2.698583853333333E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (d:generic_door) & (d:locked_doors) & not((doors<:generic_door) & (generic_door_state[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))))
8.229996766666667E7,1.05733092E8,-1.0,2.4130172766666666E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((d:generic_door) & (d:locked_doors) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED}) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds/\generic_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
8.213337266666667E7,1.1061401933333333E8,-1.0,2.80823653E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds/\generic_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
8.262682466666667E7,1.11525495E8,-1.0,2.5284388466666666E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) => not((ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (generic_door_state[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
8.8891821E7,1.2444801833333333E8,-1.0,2.928889676666667E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (generic_door_state[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
1.5441123233333334E8,1.1187228066666667E8,-1.0,2.5042279E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))))
