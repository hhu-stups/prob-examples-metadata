#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/ServiceDoors/ServiceDoorsInst_M1.bcm
5.3204787E7,6.4043805E7,-1.0,6.6213890333333336E7:not(not((ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]))) => not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))))
5.9560250666666664E7,7.061566033333333E7,-1.0,7.3047045E7:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd)))) => not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))))
5.9807908333333336E7,6.5798544333333336E7,1.5360058466666666E8,1.2472642866666667E8:not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd)))) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR)))
5.9366487666666664E7,7.4525306E7,-1.0,4.9772134333333336E7:not(not((carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))))) => (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
1.6427056366666666E8,7.620685066666667E7,-1.0,1.3959791966666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (carriage_door:POW(DOOR)) & (carriage_ds:POW(DOOR ** DOOR_STATE))
6.2569874666666664E7,1.1562096466666667E8,-1.0,1.80884222E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (not((ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))) => (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:carriage_door) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={CLOSED}) & (ds=DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
6.3696577333333336E7,5.8836579333333336E7,-1.0,2.85695362E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (cmd:command) & (state:COMMAND_STATE \ {START}) & (command_state(cmd)/=EXECUTED) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR)))
6.213339E7,6.488672E7,-1.0,4.468256283333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (not((cmd:command) & (state:COMMAND_STATE \ {START}) & (command_state(cmd)/=EXECUTED)) => (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))))
6.4673587333333336E7,5.6931890333333336E7,-1.0,2.2025694233333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (cmd:command) & (state:COMMAND_STATE \ {START}) & (command_state(cmd)/=EXECUTED) & not((ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))))
6.3217466333333336E7,5.1188306333333336E7,-1.0,2.4810208066666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (cmd:command) & (state:COMMAND_STATE \ {START}) & (command_state(cmd)/=EXECUTED) & not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))))
-1.0,-1.0,9.326539833333333E7,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (cmd:command) & (state:COMMAND_STATE \ {START}) & (command_state(cmd)/=EXECUTED) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR)))
6.4569151666666664E7,5.0266471666666664E7,-1.0,2.3530441033333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (cmd:command) & (state:COMMAND_STATE \ {START}) & (command_state(cmd)/=EXECUTED) & not((doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))))
6.4161604666666664E7,5.5710925333333336E7,-1.0,1.6342913866666666E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (cmd:command) & (state:COMMAND_STATE \ {START}) & (command_state(cmd)/=EXECUTED) & not((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
6.1492666333333336E7,5.0364761E7,-1.0,2.762118003333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (cmd:command) & (state:COMMAND_STATE \ {START}) & (command_state(cmd)/=EXECUTED) & not((ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door))
6.3151117E7,7.603646133333333E7,-1.0,3.31370118E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:carriage_door) & (cmd_type:COMMAND_TYPE) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & not((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
2.15109966E8,4.6358456E7,-1.0,1.72450677E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:carriage_door) & (cmd_type:COMMAND_TYPE) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,7.2806768E7,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:carriage_door) & (cmd_type:COMMAND_TYPE) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & (ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})
6.1626691666666664E7,7.1931633E7,-1.0,6.907292703333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & ((doors<:carriage_door) & (cmd_type:COMMAND_TYPE) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) => not((ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN})))
6.4687881333333336E7,4.2222222E7,-1.0,5.566522343333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:carriage_door) & (cmd_type:COMMAND_TYPE) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
6.4036308666666664E7,4.4607907333333336E7,-1.0,2.894720993333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (not((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})) => (ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
6.8044989E7,7.176254766666667E7,-1.0,4.912370493333333E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & not((ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
-1.0,-1.0,4.207422606666667E8,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}])
-1.0,-1.0,1.2447777066666667E8,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
-1.0,-1.0,-1.0,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & not((ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
-1.0,-1.0,1.0839155366666667E8,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]) & (ds<:DOOR) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
6.0109576333333336E7,7.200636333333333E7,-1.0,6.18659514E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (ds/\carriage_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=DOOR_CARRIAGE~[{c}]) & not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED))
-1.0,-1.0,1.0567428566666667E8,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
6.3221447333333336E7,5.4378330333333336E7,-1.0,2.3697764433333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (not((doors<:carriage_door) & (carriage_ds[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR)))) => (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
-1.0,-1.0,1.0603552766666667E8,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & (ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,1.8522199433333334E8,-1.0:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) & (ds<:obstructed_door) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & (st:{SUCCESS,FAIL}) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED})
5.894206003333334E8,6.4956071666666664E7,-1.0,6.97277356E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & ((doors<:carriage_door) & (carriage_ds[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (doors/=({} oftype POW(DOOR))) => not((d:carriage_door \ locked_doors) & (carriage_ds(d)=CLOSED)))
6.5485934333333336E7,4.6738858E7,-1.0,1.963653828E9:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (not((ds<:carriage_door \ locked_doors) & (ds<:dom(carriage_ds)) & (carriage_ds[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})) => (ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}))
6.1328958E7,4.4635192333333336E7,-1.0,1.4545213233333334E8:(carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (carriage_door<:DOOR) & (carriage_ds:carriage_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(carriage_ds)=>carriage_ds(d)/:{OPEN}) & (door_opening_device:carriage_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:carriage_door&carriage_ds(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(carriage_ds)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(carriage_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:carriage_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & ((ds<:DOOR \ (locked_doors\/obstructed_door)) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) => not((ds<:obstructed_door) & (ds<:dom(carriage_ds)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (carriage_ds[ds]={OPEN}) & (st:{SUCCESS,FAIL}) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or carriage_ds[command_doors(cmd) \ ds]={CLOSED})))
