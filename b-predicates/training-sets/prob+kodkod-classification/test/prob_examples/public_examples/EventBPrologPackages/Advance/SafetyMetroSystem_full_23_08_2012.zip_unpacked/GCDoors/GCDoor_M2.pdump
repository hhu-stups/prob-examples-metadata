#source:examples/prob_examples/public_examples/EventBPrologPackages/Advance/SafetyMetroSystem_full_23_08_2012.zip_unpacked/GCDoors/GCDoor_M2.bcm
1.1689789633333333E8,1.0485849233333333E8,-1.0,2.4489787866666666E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS})
1.2260856166666667E8,9.962670533333333E7,-1.0,1.0452472133333333E8:not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN)) => not((cmd:command) & (command_state(cmd):{FAIL,SUCCESS}))
1.4483417666666666E8,8.9717577E7,-1.0,9.386763933333333E7:not(not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&generic_door_state(d)=OPEN))) => (generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN)
2.18274661E8,1.0585058833333333E8,-1.0,1.5963787466666666E8:not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN)) => (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
2.3040613833333334E8,8.7960324E7,-1.0,3.598938103333333E8:not((d:generic_door) & (d:locked_doors)) => not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN))
2.67887581E8,9.976992633333333E7,-1.0,4.698367953333333E8:not(not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN))) => (d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED})
8.229612633333333E7,1.05425348E8,-1.0,2.6542232333333334E8:not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN)) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))))
1.3329509266666667E8,1.0327973033333333E8,-1.0,2.4908665633333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & not((doors<:generic_door) & (generic_door_state[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))))
8.1914071E7,3.7516782E8,-1.0,2.2321812033333334E8:not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN)) & not((cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL))
2.5636064933333334E8,1.1057365133333333E8,-1.0,3.585905026666667E8:not(not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN))) => (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
7.7521613E7,9.88605E7,-1.0,3.50252338E8:not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN)) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (generic_door_state[command_doors(cmd) \ isolated_door]={CLOSED}))
3.267449953333333E8,9.240760766666667E7,-1.0,4.63518324E8:not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (generic_door_state[command_doors(cmd) \ isolated_door]={CLOSED})) => not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN))
7.637065233333333E7,3.891746986666667E8,-1.0,1.28742652E8:not(not((generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN))) => not((d:generic_door \ locked_doors) & (generic_door_state(d)=CLOSED))
8.000637966666667E7,1.7546067836666667E9,-1.0,3.380388433333333E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) => not((ds/\generic_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=GEN_DOOR_CARRIAGE~[{c}])))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd):{FAIL,SUCCESS}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
1.5062236633333334E8,1.1496645833333333E8,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((ds<:generic_door) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={CLOSED}) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) => not((doors<:generic_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR)))))
1.377081215E9,1.0976232866666667E8,-1.0,2.5936643166666666E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((ds<:generic_door) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={CLOSED}) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds/\dom(door_opening_device)=({} oftype POW(DOOR))) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>ds/\dos=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (doors<:generic_door) & (generic_door_state[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (cmd_type:{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd_type=ISOLATE_DOORS<=>doors/\isolated_door=({} oftype POW(DOOR))) & (cmd_type=REMOVE_ISOLATION_DOORS<=>isolated_door/=({} oftype POW(DOOR))&doors/\isolated_door/=({} oftype POW(DOOR))) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&generic_door_state(d)=OPEN) & (d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED})
7.715488586666666E8,7.68981796E8,-1.0,9.66320135E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&generic_door_state(d)=OPEN) & not((d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED}))
8.8524432E7,1.1490751233333333E8,-1.0,2.725922526666667E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door&generic_door_state(d)=OPEN)) => (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL))
2.4944456043333335E9,1.10696572E8,-1.0,2.939657106666667E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (not((d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (generic_door_state(d):{OPEN,CLOSED})) => (ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))))
8.071168366666667E7,1.04739553E8,-1.0,2.4163980633333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((d:isolated_door) & (cmd:command) & (d:command_doors(cmd)) & (command_type(cmd)=REMOVE_ISOLATION_DOORS) & (command_state(cmd)=START) & (generic_door_state(d):{OPEN,CLOSED}) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))))
8.220537933333333E7,3.227799778E9,-1.0,2.4823231133333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (not((ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})) => (d:generic_door) & (d:locked_doors))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:generic_door \ locked_doors) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (open_device:{MANUAL_PLATFORM,MANUAL_INTERNAL}) & (!cmd oftype COMMAND.cmd:command&command_state(cmd)/=EXECUTED=>ds/\command_doors(cmd)=({} oftype POW(DOOR))) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds/\generic_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=GEN_DOOR_CARRIAGE~[{c}])
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ isolated_door) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (ds/\obstructed_door=({} oftype POW(DOOR))) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)
1.5617409633333334E8,1.0585184533333333E8,-1.0,2.5889051033333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (d:generic_door) & (d:locked_doors) & not((d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED}))
1.51879183E8,1.0745074533333333E8,-1.0,1.74802652E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (d:generic_door) & (d:locked_doors) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))))
1.5502781466666666E8,1.04740251E8,-1.0,1.5503612533333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((d:generic_door) & (d:locked_doors) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))))
1.7110930566666666E8,1.0470877633333333E8,-1.0,1.62405382E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((d:generic_door) & (d:locked_doors) => not((doors<:generic_door) & (generic_door_state[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED}) & (doors<:generic_door) & (generic_door_state[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED}) & (doors<:generic_door) & (generic_door_state[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
8.5320743E7,1.1414747633333333E8,-1.0,3.320697876666667E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (not((d:generic_door \ isolated_door) & (cmd:command) & (command_state(cmd)=START) & (d:command_doors(cmd)) & (command_type(cmd)=ISOLATE_DOORS) & (generic_door_state(d):{OPEN,CLOSED})) => (doors<:generic_door) & (generic_door_state[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds/\generic_door=({} oftype POW(DOOR))) & (ds/=({} oftype POW(DOOR))) & (ds=GEN_DOOR_CARRIAGE~[{c}]) & (ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (doors<:generic_door) & (generic_door_state[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))
8.205061066666667E7,1.1248588233333333E8,-1.0,2.4893975666666666E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) => not((cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
8.929210433333333E7,1.1927322133333333E8,-1.0,3.12120906E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) & not((ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}))
8.180067233333333E7,1.0568576233333333E8,-1.0,2.4864628366666666E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR)))) => (d:generic_door \ locked_doors) & (generic_door_state(d)=CLOSED))
8.0622473E7,1.03512581E8,-1.0,2.2717732933333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & ((#d oftype DOOR.d:command_doors(cmd)&generic_door_state(d)=CLOSED&d/:isolated_door)or command_doors(cmd) \ isolated_door=({} oftype POW(DOOR))) => not((d:generic_door \ locked_doors) & (generic_door_state(d)=CLOSED)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (generic_door_state[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)})
9.377712533333333E7,1.2386139833333333E8,-1.0,3.98662218E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (not((doors<:generic_door) & (generic_door_state[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR)))) => (ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}))
8.204811966666667E7,1.1031672833333333E8,-1.0,2.4539247166666666E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((doors<:generic_door) & (generic_door_state[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) => not((ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN})))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (doors<:generic_door) & (generic_door_state[doors]={OPEN}) & (cmd_type:{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR)))
8.2957989E7,1.1239082833333333E8,-1.0,2.45686014E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((doors<:generic_door) & (generic_door_state[doors]={CLOSED}) & (cmd_type:{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (cmd:COMMAND \ command) & (!cmd1 oftype COMMAND.cmd1:command&command_state(cmd1)/=EXECUTED=>doors/\command_doors(cmd1)=({} oftype POW(DOOR))) & (doors/=({} oftype POW(DOOR))) => not((cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL)))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:generic_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={CLOSED}) & (cmd:command) & (command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}) & (command_state(cmd)=START) & (ds<:command_doors(cmd)) & (platform:PLATFORM) & (platform:occpTrns/\PLATFORM) & (ds/=({} oftype POW(DOOR))) & (DOOR_SIDE[ds]={PLATFORM_SIDE(platform)}) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (state:COMMAND_STATE \ {START,EXECUTED}) & (command_state(cmd)=START) & (command_type(cmd):{ISOLATE_DOORS,REMOVE_ISOLATION_DOORS}) & ((command_type(cmd)=ISOLATE_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d/:isolated_door))or(command_type(cmd)=REMOVE_ISOLATION_DOORS&(#d oftype DOOR.d:command_doors(cmd)&d:isolated_door))<=>state=FAIL) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (generic_door_state[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (generic_door_state[command_doors(cmd) \ isolated_door]={CLOSED})
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:DOOR \ (isolated_door\/locked_doors\/obstructed_door)) & (ds<:dom(generic_door_state)) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd):{START,FAIL}) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (generic_door_state[ds]={OPEN}) & not((ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door))
1.41795359E8,1.09350754E8,-1.0,2.5907656733333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & ((ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}) => not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (generic_door_state[command_doors(cmd) \ isolated_door]={CLOSED})))
-1.0,-1.0,-1.0,-1.0:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (ds<:obstructed_door \ (isolated_door\/locked_doors)) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (cmd:command) & (command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}) & (command_state(cmd)=FAIL) & (ds<:command_doors(cmd)) & (ds/=({} oftype POW(DOOR))) & (st=SUCCESS<=>command_doors(cmd) \ ds=({} oftype POW(DOOR))or generic_door_state[command_doors(cmd) \ ds]={CLOSED}) & (st:{SUCCESS,FAIL}) & not((d:generic_door \ locked_doors) & (generic_door_state(d)=CLOSED))
8.5231206E7,1.1061010833333333E8,-1.0,5.663675063333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{OPEN_LEFT_DOORS,OPEN_RIGHT_DOORS}) & (!d oftype DOOR.d:command_doors(cmd)&d/:isolated_door=>generic_door_state(d)=OPEN) & (command_doors(cmd) \ isolated_door/=({} oftype POW(DOOR))) & not((cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (generic_door_state[command_doors(cmd) \ isolated_door]={CLOSED}))
4.605561923333333E8,2.08370026E8,-1.0,6.265219433333334E8:(generic_door<:DOOR) & (generic_door_state:generic_door --> DOOR_STATE) & (locked_doors<:DOOR) & (!d oftype DOOR.d:locked_doors&d:dom(generic_door_state)=>generic_door_state(d)/:{OPEN}) & (door_opening_device:generic_door +-> OPENING_DEVICE) & (!d oftype DOOR.d:generic_door&generic_door_state(d)=OPEN=>d:dom(door_opening_device)) & (obstructed_door<:dom(generic_door_state)) & (command<:COMMAND) & (command_type:command --> COMMAND_TYPE) & (command_state:command --> COMMAND_STATE) & (command_doors:command --> POW(generic_door)) & (!dos oftype POW(DOOR).dos:ran(command_doors)=>dos/=({} oftype POW(DOOR))) & (!d oftype DOOR,opDev oftype OPENING_DEVICE.d:generic_door&opDev:OPENING_DEVICE&d |-> opDev:door_opening_device&opDev=AUTOMATIC_CENTRAL_DOOR=>(#cmd oftype COMMAND.cmd:command&d:command_doors(cmd))) & (isolated_door<:DOOR) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{OPEN_RIGHT_DOORS,OPEN_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=OPEN) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd):{CLOSE_RIGHT_DOORS,CLOSE_LEFT_DOORS}&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS&d/:isolated_door=>generic_door_state(d)=CLOSED) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=ISOLATE_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d:isolated_door) & (!cmd oftype COMMAND,d oftype DOOR.cmd:command&command_type(cmd)=REMOVE_ISOLATION_DOORS&d:DOOR&d:command_doors(cmd)&command_state(cmd)=SUCCESS=>d/:isolated_door) & (!d oftype DOOR.d:isolated_door&d:dom(generic_door_state)=>generic_door_state(d):{OPEN,CLOSED}) & (!cmd1 oftype COMMAND,cmd2 oftype COMMAND.cmd1:command&cmd2:command&cmd1/=cmd2&command_state(cmd1)/=EXECUTED&command_state(cmd2)/=EXECUTED=>command_doors(cmd1)/\command_doors(cmd2)=({} oftype POW(DOOR))) & (!d oftype DOOR.d:obstructed_door=>generic_door_state(d)=OPEN) & (cmd:command) & (command_state(cmd)=START) & (command_type(cmd):{CLOSE_LEFT_DOORS,CLOSE_RIGHT_DOORS}) & (generic_door_state[command_doors(cmd) \ isolated_door]={CLOSED}) & (ds<:DOOR) & (ds<:dom(generic_door_state)) & (generic_door_state[ds]={OPEN}) & (ds/=({} oftype POW(DOOR))) & (!c oftype COMMAND,dd oftype DOOR.c:dom(command_state)&command_state(c)=SUCCESS&dd:command_doors(c)=>dd/:ds) & (ds/\obstructed_door/=({} oftype POW(DOOR))=>obs=obstructed_door \ (ds/\obstructed_door)) & (ds/\obstructed_door=({} oftype POW(DOOR))=>obs=obstructed_door) & (obs<:obstructed_door)
