#source:examples/prob_examples/public_examples/EventBPrologPackages/EventB2Java/MIO.zip_unpacked/MIO/ref6.bcm
9.249584033333333E7,4.2646158666666664E7,-1.0,1.9513624366666666E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer)
6.0738031E7,4.4286288333333336E7,1.1357640766666667E8,9.7952936E7:not(not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))) => not((p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer))
5.5551361333333336E7,7.589130833333333E7,-1.0,3.2441405433333335E9:not(not((l:rejectionMsg))) => not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))
6.1684985666666664E7,4.5081897E7,1.53435317E8,1.7366321533333334E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & not((p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor))
6.7542737E7,5.182917E7,-1.0,5.809287853333334E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg)
6.0777235666666664E7,4.3272775E7,-1.0,2.5753323833333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector)
6.1972871666666664E7,4.5603425E7,-1.0,3.020426923333333E8:not(not((p:PERSON) & (l:LECTORS \ blockedLector))) => not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))
6.3785392333333336E7,4.5526646E7,-1.0,3.2606374E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & not((p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)))
6.1856003666666664E7,4.5566385666666664E7,1.1227216866666667E8,1.7873441433333334E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) => not((l:greenLight))
6.2679339333333336E7,4.3689145E7,1.1483138566666667E8,9.449041433333333E7:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) => not((parked>0) & (b:dom(busSta)) & (b:authorizedBus))
6.2429563666666664E7,4.5443115666666664E7,-1.0,1.4673437166666666E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) => not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta)))
6.3747026666666664E7,4.4723122333333336E7,-1.0,2.0758419533333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:red) & (l:redMsgOff)
6.746947333333333E7,5.8465488666666664E7,-1.0,2.2984950366666666E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
6.1758156333333336E7,4.5211895E7,1.1821319333333333E8,1.1481434466666667E8:not(not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg))) => (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
6.2690606666666664E7,4.3955193666666664E7,-1.0,1.7808624033333334E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
6.1495925333333336E7,4.6363065E7,3.5359910413333335E9,1.5141839333333334E8:not((parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg)) => not((p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor))
1.2255296766666667E8,9.163497666666667E7,-1.0,1.98396295E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ dom(authorizedLec_per)) & (p/:authorizedPer) & not((d:openedDoor))
-1.0,-1.0,1.4870901766666667E9,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector)
6.4585238E7,4.3977240666666664E7,-1.0,9.14739251E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & not((p:PERSON) & (l:LECTORS \ blockedLector))
7.206011833333333E7,4.4562719333333336E7,-1.0,8.82477071E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & not((p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta))
-1.0,-1.0,7.473233866666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,6.5683888333333336E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:rejectionMsg) & (l:acceptanceMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor)) => (d:openedDoor))
-1.0,-1.0,7.229185133333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor) & not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg))
1.1173750286666667E9,1.1112985573333333E9,-1.0,1.6051269043333333E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:dom(perSta)) & (doorSta~(perSta(p)):openedDoor) & (l:red) & (l:redMsgOff)
-1.0,-1.0,9.741503673333334E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (l:redLight)
6.6143071E7,4.4128749666666664E7,-1.0,2.4266491333333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:controllerMsg)) => (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)))
6.3908639333333336E7,4.3719502666666664E7,-1.0,3.863227536666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))
-1.0,-1.0,7.306511033333333E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:controllerMsg) & (l:green) & (l:greenMsgOff)
6.1106024666666664E7,1.20572851E8,-1.0,2.85630736E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:controllerMsg)) => (l:red) & (l:redMsgOff))
-1.0,-1.0,6.4543868666666664E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & (p:PERSON) & (l:LECTORS \ blockedLector)
6.4967689333333336E7,4.3708165E7,-1.0,2.1561882966666666E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & not((p:PERSON) & (l:LECTORS \ blockedLector))
6.0385122666666664E7,4.2983515333333336E7,-1.0,2.48012125E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:redLight) & not((d:openedDoor))
6.2699244333333336E7,4.3641257333333336E7,-1.0,1.9463185033333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (l:acceptanceMsg)
-1.0,-1.0,1.1004823533333333E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg)
6.765664833333333E7,4.9573529E7,-1.0,3.275766423333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg))
1.4042279166666666E8,5.0372071333333336E7,-1.0,3.097816183333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) => not((d:openedDoor)))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per))
6.3632346666666664E7,4.8112193666666664E7,-1.0,8.228104983333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & not((p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta))
6.6705899E7,4.8759622333333336E7,-1.0,3.1042644E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & not((parked>0) & (b:dom(busSta)) & (b:authorizedBus))
7.209831873333334E8,1.0175909933333333E8,-1.0,1.8012118486666667E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta)))
-1.0,-1.0,3.5838283626666665E9,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (s:STATS) & (l:green) & (p=authorizedLec_per~(l)) & (s=lectorStat(l)) & (l:passedMsg) & (l:green) & (l:greenMsgOff)
-1.0,-1.0,6.5095801666666664E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON) & (l:LECTORS \ blockedLector) & (l:greenLight)
-1.0,-1.0,7.396780966666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) & (p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta)
6.1594937E7,5.2431923333333336E7,-1.0,2.85721436E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) => not((l:red) & (l:redMsgOff)))
-1.0,-1.0,7.296782166666667E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p/:dom(authorizedLec_per)) & (p:authorizedPer) & (l |-> p:lectorMsg) & (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((p:PERSON \ person) & (p:authorizedPer) & (p/:dom(authorizedLec_per)))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg))
6.2443135666666664E7,4.6398521333333336E7,-1.0,3.15812134E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((d:openedDoor) => not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)))
-1.0,-1.0,7.7072138E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus)
2.010604468E9,3.709729196666667E8,-1.0,1.9527174976666667E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (d:openedDoor) & (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor)
6.5186245333333336E7,4.6667247333333336E7,-1.0,3.5877367276666665E9:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((p:dom(perSta)) & (s:ran(perSta)) & (p |-> s:perSta)) => (parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta)))
8.6257105E7,4.7219412333333336E7,-1.0,2.44984063E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:greenLight)) => (parked>0) & (b:dom(busSta)) & (b:authorizedBus))
-1.0,-1.0,1.2071944833333333E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:greenLight) & (l:green) & (l:greenMsgOff)
6.2532113666666664E7,7.152245666666667E7,-1.0,2.6756081633333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & ((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg) => not((parked>0) & (b:dom(busSta)) & (b:authorizedBus)))
1.0726194066666667E8,5.7501516333333336E7,-1.0,1.9552945033333334E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)) => (l:green) & (l:greenMsgOff))
-1.0,-1.0,6.388622E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg) & (l:acceptanceMsg)
-1.0,-1.0,7.1133743E7,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg) & (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor)
6.3032596666666664E7,4.5659833333333336E7,-1.0,2.828099626666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((p:PERSON \ person) & (l:LECTORS) & (l/:green\/red) & (p:dom(authorizedLec_per)or p/:authorizedPer) & (l |-> p:lectorMsg)) => (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor))
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (parked>0) & (b:dom(busSta)) & (b:authorizedBus) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
5.9765840666666664E7,5.715515E7,-1.0,3.050434693333333E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((parked<n) & (parked<m) & (b:BUSES \ dom(busSta)) & (s:STATS \ ran(busSta))) => (l:red) & (l:redMsgOff))
-1.0,-1.0,1.06747234E8,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:green) & (l:greenMsgOff) & (l:red) & (l:redMsgOff)
-1.0,-1.0,-1.0,-1.0:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:green) & (l:greenMsgOff) & not((d:DOORS) & (d/:openedDoor) & (doorSta(d):ran(busSta)) & (busSta~(doorSta(d))/:authorizedBus))
6.3438281333333336E7,4.5233475666666664E7,-1.0,3.03773173E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:red) & (l:redMsgOff) & not((l:acceptanceMsg))
6.3546465333333336E7,4.4143532E7,-1.0,3.063694526666667E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (not((l:red) & (l:redMsgOff)) => (p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor))
6.5397725333333336E7,4.4302863666666664E7,-1.0,3.44122787E8:(parked:0 .. min({n,m})) & (busSta:BUSES >+> STATS) & (finite(busSta)) & (card(busSta)=parked) & (openedDoor<:dom(doorSta)) & (doorSta[openedDoor]<:ran(busSta)) & (authorizedBus<:dom(busSta)) & (busSta[authorizedBus]/\doorSta[openedDoor]=({} oftype POW(STATS))) & (person<:PERSON) & (perSta:person +-> STATS) & (perBus:person +-> BUSES) & (dom(perSta)/\dom(perBus)=({} oftype POW(PERSON))) & (dom(perSta)\/dom(perBus)=person) & (authorizedLec_per:PERSON \ person >+> LECTORS) & (green<:LECTORS) & (red<:LECTORS) & (green/\red=({} oftype POW(LECTORS))) & (green=ran(authorizedLec_per)) & (authorizedPer<:PERSON) & (person<:authorizedPer) & (authorizedLec_per~[green]<:authorizedPer) & (blockedLector<:LECTORS) & (lectorMsg:LECTORS +-> PERSON) & (controllerMsg<:LECTORS) & (dom(lectorMsg)\/green\/red\/controllerMsg=blockedLector) & (dom(lectorMsg)/\(green\/red\/controllerMsg)=({} oftype POW(LECTORS))) & (controllerMsg/\(green\/red)=({} oftype POW(LECTORS))) & (greenLight<:LECTORS) & (acceptanceMsg<:LECTORS) & (greenMsgOff<:LECTORS) & (passedMsg<:LECTORS) & (acceptanceMsg\/passedMsg\/greenMsgOff=green) & (acceptanceMsg/\(passedMsg\/greenMsgOff)=({} oftype POW(LECTORS))) & (passedMsg/\greenMsgOff=({} oftype POW(LECTORS))) & (greenLight<:acceptanceMsg) & (redLight<:LECTORS) & (rejectionMsg<:LECTORS) & (redMsgOff<:LECTORS) & (rejectionMsg/\redMsgOff=({} oftype POW(LECTORS))) & (rejectionMsg\/redMsgOff=red) & (redLight<:rejectionMsg) & (l:red) & (l:redMsgOff) & not((p:dom(perBus)) & (perBus(p):dom(busSta)) & (doorSta~(busSta(perBus(p))):openedDoor))
