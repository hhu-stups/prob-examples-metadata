#source:examples/prob_examples/public_examples/EventBPrologPackages/EventB2Java/SocialEventPlanner.zip_unpacked/SocialEventPlanner/ref8_socialpermissions.bcm
1.38489678E8,2.4789940166666666E8,-1.0,7.33019075E8:not((persons<:PERSON) & (contents<:CONTENTS) & (owner:contents ->> persons) & (pages:contents <<->> persons) & (owner<:pages) & (viewp:contents <-> persons) & (editp:contents <-> persons) & (owner<:viewp) & (owner<:editp) & (editp<:viewp) & (pages<:viewp) & (principal<:contents) & (field:contents \ principal --> principal) & (owner[principal]=persons) & (required<:principal) & (owner[required]=persons) & (wallcontents<:CONTENTS \ contents) & (wall:wallcontents <<-> persons) & (wallowner:wallcontents --> persons) & (wallowner<:wall) & (wallaccess:persons <-> persons) & (persons <| (id oftype POW(PERSON**PERSON))<:wallaccess) & (wall<:wallowner;wallaccess) & (listpe:LISTS <-> persons) & (listow:LISTS +-> persons) & (policies:dom(listow) <-> dom(listow)) & (dom(listow) <| (id oftype POW(LISTS**LISTS))/\policies=({} oftype POW(LISTS**LISTS))) & (disjointness<:policies) & (listow/\listpe=({} oftype POW(LISTS**PERSON))) & (policies;listow<:listow) & (sevents<:EVENTS) & (scontents<:contents) & (eventcontents:scontents <-> sevents) & (eventowner:sevents --> persons) & (invited:sevents <-> persons) & (join:sevents <-> persons) & (maybe:sevents <-> persons) & (decline:sevents <-> persons) & (join/\maybe/\decline=({} oftype POW(EVENTS**PERSON))) & (join<:invited) & (maybe<:invited) & (decline<:invited) & (populate:sevents <-> persons) & (eventowner<:populate) & (populate<:invited) & (eventcontents;eventowner<:eventcontents;invited) & (socialviewp:scontents <-> persons) & (socialeditp:scontents <-> persons) & (eventcontents;invited<:socialviewp) & (eventcontents;eventowner<:socialeditp) & (socialeditp<:socialviewp)) => not((ow:persons) & (se:sevents) & (ow=eventowner(se)) & (pe:persons) & (se |-> pe:invited))
