#source:examples/prob_examples/public_examples/B/Daniel/stellwerk/switcher.mch
3.63474061E8,2.4913314733333334E8,-1.0,5.846598226666666E8:(card(ROUTE)>=card(start_tracks)) & not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked)) & (route:ROUTE) & (section:SECTION)
5.1208118E7,5.2075127666666664E7,6.8006623E7,5.5965589666666664E7:not((card(ROUTE)>=card(start_tracks)) & not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked))) => (route:ROUTE) & (section:SECTION)
3.793966163333333E8,2.6269592866666666E8,-1.0,5.817774496666666E8:(card(ROUTE)>=card(start_tracks)) & not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked)) & (section:SECTION)
5.2834372E7,5.2049868333333336E7,6.810211933333333E7,5.7025501E7:not((card(ROUTE)>=card(start_tracks)) & not((routes:ROUTE+->iseq(SECTION)) & (!r1,r2.(r1:dom(routes)&r2:dom(routes)&r1/=r2 => ran(routes(r1))/\ran(routes(r2))={})) & (!rt.(rt:ran(routes) => rt/=[])) & (!rt.(rt:ran(routes) => first(rt):start_tracks)) & (!rt.(rt:ran(routes) => !p1,p2.(p1:dom(rt)&p2:dom(rt)&p2=p1+1 => (rt(p1),rt(p2)):connected))) & (locked<:dom(routes)) & (!rt.(rt:locked => last(routes(rt)):end_tracks)) & (in_use<:locked))) => (section:SECTION)
