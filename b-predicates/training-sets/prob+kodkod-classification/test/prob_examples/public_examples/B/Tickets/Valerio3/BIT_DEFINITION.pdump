#source:examples/prob_examples/public_examples/B/Tickets/Valerio3/BIT_DEFINITION.mch
2.6693401433333334E8,1.17139477E8,4.614132376666667E8,3.28121311E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bit_and)=BIT*BIT
9.461747866666667E7,5.7955065333333336E7,-1.0,3.95985947E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & !b1,b2.(b1:BIT&b2:BIT&bit_and(b1,b2)=1 => bit_and(b2,b1)=1)
