#source:examples/prob_examples/public_examples/B/LTL/MammarFrappier/FlightSystem_corrected_4_4.mch
6.5669570333333336E7,6.0992322666666664E7,-1.0,2.938663266666667E8:not((NbPlaces:NAT1) & (NbPlaces=1) & (card(Customers)=4) & (card(Flights)=4) & (tickets:Customers<->Flights) & (waitingQueue:Flights-->iseq(Customers)) & (!fl.(fl:Flights => tickets~[{fl}]/\ran(waitingQueue(fl))={})) & (!fl.(fl:Flights => card(tickets~[{fl}])<=NbPlaces)) & (!fl.(fl:Flights => size(waitingQueue(fl))<=NbPlaces))) => (cu:Customers) & (fl:Flights) & (card(tickets~[{fl}])<NbPlaces) & (waitingQueue(fl)=[]) & ((cu,fl)/:tickets)
5.6765808333333336E7,6.4060893E7,1.8078327766666666E8,2.62416936E8:not((NbPlaces:NAT1) & (NbPlaces=1) & (card(Customers)=4) & (card(Flights)=4) & not((tickets:Customers<->Flights) & (waitingQueue:Flights-->iseq(Customers)) & (!fl.(fl:Flights => tickets~[{fl}]/\ran(waitingQueue(fl))={})) & (!fl.(fl:Flights => card(tickets~[{fl}])<=NbPlaces)) & (!fl.(fl:Flights => size(waitingQueue(fl))<=NbPlaces)))) => not((cu:Customers) & (fl:Flights) & (cu/:ran(waitingQueue(fl))) & ((cu,fl)/:tickets) & (size(waitingQueue(fl))<NbPlaces) & (card(tickets~[{fl}])=NbPlaces or waitingQueue(fl)/=[]))
-1.0,-1.0,1.1064256133333333E8,2.805502243333333E8:(NbPlaces:NAT1) & (NbPlaces=1) & (card(Customers)=4) & (card(Flights)=4) & (tickets:Customers<->Flights) & (waitingQueue:Flights-->iseq(Customers)) & (!fl.(fl:Flights => tickets~[{fl}]/\ran(waitingQueue(fl))={})) & (!fl.(fl:Flights => card(tickets~[{fl}])<=NbPlaces)) & (!fl.(fl:Flights => size(waitingQueue(fl))<=NbPlaces)) & not(!cu,fl.(cu:Customers&fl:Flights&card(tickets~[{fl}])<NbPlaces&waitingQueue(fl)=[] => (cu,fl):tickets\/{(cu,fl)}))
-1.0,-1.0,1.0946922833333333E8,2.963030423333333E8:(NbPlaces:NAT1) & (NbPlaces=1) & (card(Customers)=4) & (card(Flights)=4) & (tickets:Customers<->Flights) & (waitingQueue:Flights-->iseq(Customers)) & (!fl.(fl:Flights => tickets~[{fl}]/\ran(waitingQueue(fl))={})) & (!fl.(fl:Flights => card(tickets~[{fl}])<=NbPlaces)) & (!fl.(fl:Flights => size(waitingQueue(fl))<=NbPlaces)) & not(cu:Customers&fl:Flights&card(tickets~[{fl}])<NbPlaces&waitingQueue(fl)=[] => (cu,fl):tickets\/{(cu,fl)})
