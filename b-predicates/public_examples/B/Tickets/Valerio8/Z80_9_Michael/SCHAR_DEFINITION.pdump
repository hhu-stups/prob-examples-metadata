#source:examples/prob_examples/public_examples/B/Tickets/Valerio8/Z80_9_Michael/SCHAR_DEFINITION.mch
1.2792369293333333E9,8.394221546666666E8,-1.0,1.406102596E9:not((SCHAR_MAX=pow2_7-1) & (SCHAR_MIN=-pow2_7) & (SCHAR=SCHAR_MIN..SCHAR_MAX) & (byte_schar:BYTE>->>SCHAR) & (byte_schar=%v0.(v0:BYTE|-pow2_7*v0(8)+pow2_6*v0(7)+pow2_5*v0(6)+pow2_4*v0(5)+pow2_3*v0(4)+pow2_2*v0(3)+2*v0(2)+v0(1))) & (schar_byte:SCHAR>->>BYTE) & (schar_byte=%v0.(v0:SCHAR&v0>=0|[v0 mod pow2_1/pow2_0,v0 mod pow2_2/pow2_1,v0 mod pow2_3/pow2_2,v0 mod pow2_4/pow2_3,v0 mod pow2_5/pow2_4,v0 mod pow2_6/pow2_5,v0 mod pow2_7/pow2_6,v0 mod pow2_8/pow2_7])\/%v0.(v0:SCHAR&not(v0>=0)|[v0+pow2_8 mod pow2_1/pow2_0,v0+pow2_8 mod pow2_2/pow2_1,v0+pow2_8 mod pow2_3/pow2_2,v0+pow2_8 mod pow2_4/pow2_3,v0+pow2_8 mod pow2_5/pow2_4,v0+pow2_8 mod pow2_6/pow2_5,v0+pow2_8 mod pow2_7/pow2_6,v0+pow2_8 mod pow2_8/pow2_7])) & (uchar_schar=%v1.(v1:UCHAR&v1<=SCHAR_MAX|v1)\/%v1.(v1:UCHAR&not(v1<=SCHAR_MAX)|v1-pow2_8)) & (schar_uchar=%v1.(v1:SCHAR&v1>=0|v1)\/%v1.(v1:SCHAR&not(v1>=0)|v1+pow2_8))) => card(uchar_schar)=256
2.0939854409666668E10,3.460937783333333E8,-1.0,2.960562373E9:(SCHAR_MAX=pow2_7-1) & (SCHAR_MIN=-pow2_7) & (SCHAR=SCHAR_MIN..SCHAR_MAX) & (byte_schar:BYTE>->>SCHAR) & (byte_schar=%v0.(v0:BYTE|-pow2_7*v0(8)+pow2_6*v0(7)+pow2_5*v0(6)+pow2_4*v0(5)+pow2_3*v0(4)+pow2_2*v0(3)+2*v0(2)+v0(1))) & (schar_byte:SCHAR>->>BYTE) & (schar_byte=%v0.(v0:SCHAR&v0>=0|[v0 mod pow2_1/pow2_0,v0 mod pow2_2/pow2_1,v0 mod pow2_3/pow2_2,v0 mod pow2_4/pow2_3,v0 mod pow2_5/pow2_4,v0 mod pow2_6/pow2_5,v0 mod pow2_7/pow2_6,v0 mod pow2_8/pow2_7])\/%v0.(v0:SCHAR&not(v0>=0)|[v0+pow2_8 mod pow2_1/pow2_0,v0+pow2_8 mod pow2_2/pow2_1,v0+pow2_8 mod pow2_3/pow2_2,v0+pow2_8 mod pow2_4/pow2_3,v0+pow2_8 mod pow2_5/pow2_4,v0+pow2_8 mod pow2_6/pow2_5,v0+pow2_8 mod pow2_7/pow2_6,v0+pow2_8 mod pow2_8/pow2_7])) & (uchar_schar=%v1.(v1:UCHAR&v1<=SCHAR_MAX|v1)\/%v1.(v1:UCHAR&not(v1<=SCHAR_MAX)|v1-pow2_8)) & (schar_uchar=%v1.(v1:SCHAR&v1>=0|v1)\/%v1.(v1:SCHAR&not(v1>=0)|v1+pow2_8)) & not(card(schar_uchar)=256)
2.787817827E9,3.4483850216666665E9,-1.0,3.569774434E9:not((SCHAR_MAX=pow2_7-1) & (SCHAR_MIN=-pow2_7) & (SCHAR=SCHAR_MIN..SCHAR_MAX) & (byte_schar:BYTE>->>SCHAR) & (byte_schar=%v0.(v0:BYTE|-pow2_7*v0(8)+pow2_6*v0(7)+pow2_5*v0(6)+pow2_4*v0(5)+pow2_3*v0(4)+pow2_2*v0(3)+2*v0(2)+v0(1))) & (schar_byte:SCHAR>->>BYTE) & (schar_byte=%v0.(v0:SCHAR&v0>=0|[v0 mod pow2_1/pow2_0,v0 mod pow2_2/pow2_1,v0 mod pow2_3/pow2_2,v0 mod pow2_4/pow2_3,v0 mod pow2_5/pow2_4,v0 mod pow2_6/pow2_5,v0 mod pow2_7/pow2_6,v0 mod pow2_8/pow2_7])\/%v0.(v0:SCHAR&not(v0>=0)|[v0+pow2_8 mod pow2_1/pow2_0,v0+pow2_8 mod pow2_2/pow2_1,v0+pow2_8 mod pow2_3/pow2_2,v0+pow2_8 mod pow2_4/pow2_3,v0+pow2_8 mod pow2_5/pow2_4,v0+pow2_8 mod pow2_6/pow2_5,v0+pow2_8 mod pow2_7/pow2_6,v0+pow2_8 mod pow2_8/pow2_7])) & (uchar_schar=%v1.(v1:UCHAR&v1<=SCHAR_MAX|v1)\/%v1.(v1:UCHAR&not(v1<=SCHAR_MAX)|v1-pow2_8)) & (schar_uchar=%v1.(v1:SCHAR&v1>=0|v1)\/%v1.(v1:SCHAR&not(v1>=0)|v1+pow2_8))) => card(schar_uchar)=256
6.0942153666666664E7,5.52323146E8,6.4566076E8,5.6640605666666664E7:not((SCHAR_MAX=pow2_7-1) & (SCHAR_MIN=-pow2_7) & (SCHAR=SCHAR_MIN..SCHAR_MAX) & (byte_schar:BYTE>->>SCHAR) & (byte_schar=%v0.(v0:BYTE|-pow2_7*v0(8)+pow2_6*v0(7)+pow2_5*v0(6)+pow2_4*v0(5)+pow2_3*v0(4)+pow2_2*v0(3)+2*v0(2)+v0(1))) & (schar_byte:SCHAR>->>BYTE) & (schar_byte=%v0.(v0:SCHAR&v0>=0|[v0 mod pow2_1/pow2_0,v0 mod pow2_2/pow2_1,v0 mod pow2_3/pow2_2,v0 mod pow2_4/pow2_3,v0 mod pow2_5/pow2_4,v0 mod pow2_6/pow2_5,v0 mod pow2_7/pow2_6,v0 mod pow2_8/pow2_7])\/%v0.(v0:SCHAR&not(v0>=0)|[v0+pow2_8 mod pow2_1/pow2_0,v0+pow2_8 mod pow2_2/pow2_1,v0+pow2_8 mod pow2_3/pow2_2,v0+pow2_8 mod pow2_4/pow2_3,v0+pow2_8 mod pow2_5/pow2_4,v0+pow2_8 mod pow2_6/pow2_5,v0+pow2_8 mod pow2_7/pow2_6,v0+pow2_8 mod pow2_8/pow2_7])) & (uchar_schar=%v1.(v1:UCHAR&v1<=SCHAR_MAX|v1)\/%v1.(v1:UCHAR&not(v1<=SCHAR_MAX)|v1-pow2_8)) & (schar_uchar=%v1.(v1:SCHAR&v1>=0|v1)\/%v1.(v1:SCHAR&not(v1>=0)|v1+pow2_8))) => SCHAR_MAX:INTEGER
1.5775169433333334E8,1.0242515233333333E8,9.957881733333333E7,5.9198962E7:not((SCHAR_MAX=pow2_7-1) & (SCHAR_MIN=-pow2_7) & (SCHAR=SCHAR_MIN..SCHAR_MAX) & (byte_schar:BYTE>->>SCHAR) & (byte_schar=%v0.(v0:BYTE|-pow2_7*v0(8)+pow2_6*v0(7)+pow2_5*v0(6)+pow2_4*v0(5)+pow2_3*v0(4)+pow2_2*v0(3)+2*v0(2)+v0(1))) & (schar_byte:SCHAR>->>BYTE) & (schar_byte=%v0.(v0:SCHAR&v0>=0|[v0 mod pow2_1/pow2_0,v0 mod pow2_2/pow2_1,v0 mod pow2_3/pow2_2,v0 mod pow2_4/pow2_3,v0 mod pow2_5/pow2_4,v0 mod pow2_6/pow2_5,v0 mod pow2_7/pow2_6,v0 mod pow2_8/pow2_7])\/%v0.(v0:SCHAR&not(v0>=0)|[v0+pow2_8 mod pow2_1/pow2_0,v0+pow2_8 mod pow2_2/pow2_1,v0+pow2_8 mod pow2_3/pow2_2,v0+pow2_8 mod pow2_4/pow2_3,v0+pow2_8 mod pow2_5/pow2_4,v0+pow2_8 mod pow2_6/pow2_5,v0+pow2_8 mod pow2_7/pow2_6,v0+pow2_8 mod pow2_8/pow2_7])) & (uchar_schar=%v1.(v1:UCHAR&v1<=SCHAR_MAX|v1)\/%v1.(v1:UCHAR&not(v1<=SCHAR_MAX)|v1-pow2_8)) & (schar_uchar=%v1.(v1:SCHAR&v1>=0|v1)\/%v1.(v1:SCHAR&not(v1>=0)|v1+pow2_8))) => SCHAR_MIN:INTEGER
