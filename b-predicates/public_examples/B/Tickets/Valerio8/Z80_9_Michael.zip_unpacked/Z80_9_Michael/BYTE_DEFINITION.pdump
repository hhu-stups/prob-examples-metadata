#source:examples/prob_examples/public_examples/B/Tickets/Valerio8/Z80_9_Michael.zip_unpacked/Z80_9_Michael/BYTE_DEFINITION.mch
1.55018968E8,2.1642263266666666E8,-1.0,7.8138684E7:(BYTE_INDEX=1..BYTE_WIDTH) & (PHYS_BYTE_INDEX=0..BYTE_WIDTH-1) & (BYTE=BYTE_INDEX-->BIT) & (card(BYTE)=256) & (!b1.(b1:BYTE => size(b1)=BYTE_WIDTH&b1:seq1(BIT))) & (is_zero:BYTE-->BIT) & (is_zero=%w1.(w1:BYTE|bool_bit(bool(w1(1)=w1(2)&w1(2)=w1(3)&w1(3)=w1(4)&w1(4)=w1(5)&w1(5)=w1(6)&w1(6)=w1(7)&w1(7)=w1(8)&w1(8)=0)))) & (parity_even:BYTE-->BIT) & (parity_even=%bv.(bv:BYTE|1-bv(1)+bv(2)+bv(3)+bv(4)+bv(5)+bv(6)+bv(7)+bv(8) mod 2)) & (bv8_and=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_and(bt1(idx),bt2(idx))))) & (bv8_or=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_or(bt1(idx),bt2(idx))))) & (bv8_xor=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_xor(bt1(idx),bt2(idx))))) & (bv8get:BYTE*PHYS_BYTE_INDEX-->BIT) & (bv8get=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1(ii+1))) & (bitset:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitset=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,1)})) & (bitclear:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitclear=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,0)})) & (complement:BYTE-->BYTE) & (complement=%bt.(bt:BYTE|%idx.(idx:1..8|bit_not(bt(idx))))) & (swap:BYTE-->BYTE) & (swap=%bt.(bt:BYTE|{(1,bt(5)),(2,bt(6)),(3,bt(7)),(4,bt(8)),(5,bt(1)),(6,bt(2)),(7,bt(3)),(8,bt(4))})) & (rotateleft:BYTE-->BYTE) & (rotateleft=%bv.(bv:BYTE|{(1,bv(8)),(2,bv(1)),(3,bv(2)),(4,bv(3)),(5,bv(4)),(6,bv(5)),(7,bv(6)),(8,bv(7))})) & (rotateright:BYTE-->BYTE) & (rotateright=%bv.(bv:BYTE|{(1,bv(2)),(2,bv(3)),(3,bv(4)),(4,bv(5)),(5,bv(6)),(6,bv(7)),(7,bv(8)),(8,bv(1))})) & (get_upper_digit:BYTE-->0..15) & (get_upper_digit=%by.(by:BYTE|pow2_3*by(8)+pow2_2*by(7)+2*by(6)+by(5))) & (get_lower_digit:BYTE-->0..15) & (get_lower_digit=%by.(by:BYTE|pow2_3*by(4)+pow2_2*by(3)+2*by(2)+by(1))) & not(is_zero:BYTE-->BIT)
3.4252850166666665E9,1.57975839E8,-1.0,-1.0:not((BYTE_INDEX=1..BYTE_WIDTH) & (PHYS_BYTE_INDEX=0..BYTE_WIDTH-1) & (BYTE=BYTE_INDEX-->BIT) & (card(BYTE)=256) & (!b1.(b1:BYTE => size(b1)=BYTE_WIDTH&b1:seq1(BIT))) & (is_zero:BYTE-->BIT) & (is_zero=%w1.(w1:BYTE|bool_bit(bool(w1(1)=w1(2)&w1(2)=w1(3)&w1(3)=w1(4)&w1(4)=w1(5)&w1(5)=w1(6)&w1(6)=w1(7)&w1(7)=w1(8)&w1(8)=0)))) & (parity_even:BYTE-->BIT) & (parity_even=%bv.(bv:BYTE|1-bv(1)+bv(2)+bv(3)+bv(4)+bv(5)+bv(6)+bv(7)+bv(8) mod 2)) & (bv8_and=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_and(bt1(idx),bt2(idx))))) & (bv8_or=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_or(bt1(idx),bt2(idx))))) & (bv8_xor=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_xor(bt1(idx),bt2(idx))))) & (bv8get:BYTE*PHYS_BYTE_INDEX-->BIT) & (bv8get=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1(ii+1))) & (bitset:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitset=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,1)})) & (bitclear:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitclear=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,0)})) & (complement:BYTE-->BYTE) & (complement=%bt.(bt:BYTE|%idx.(idx:1..8|bit_not(bt(idx))))) & (swap:BYTE-->BYTE) & (swap=%bt.(bt:BYTE|{(1,bt(5)),(2,bt(6)),(3,bt(7)),(4,bt(8)),(5,bt(1)),(6,bt(2)),(7,bt(3)),(8,bt(4))})) & (rotateleft:BYTE-->BYTE) & (rotateleft=%bv.(bv:BYTE|{(1,bv(8)),(2,bv(1)),(3,bv(2)),(4,bv(3)),(5,bv(4)),(6,bv(5)),(7,bv(6)),(8,bv(7))})) & (rotateright:BYTE-->BYTE) & (rotateright=%bv.(bv:BYTE|{(1,bv(2)),(2,bv(3)),(3,bv(4)),(4,bv(5)),(5,bv(6)),(6,bv(7)),(7,bv(8)),(8,bv(1))})) & (get_upper_digit:BYTE-->0..15) & (get_upper_digit=%by.(by:BYTE|pow2_3*by(8)+pow2_2*by(7)+2*by(6)+by(5))) & (get_lower_digit:BYTE-->0..15) & (get_lower_digit=%by.(by:BYTE|pow2_3*by(4)+pow2_2*by(3)+2*by(2)+by(1)))) => is_zero:BYTE-->BIT
1.5631398833333334E8,2.1100977066666666E8,-1.0,8.015404733333333E7:(BYTE_INDEX=1..BYTE_WIDTH) & (PHYS_BYTE_INDEX=0..BYTE_WIDTH-1) & (BYTE=BYTE_INDEX-->BIT) & (card(BYTE)=256) & (!b1.(b1:BYTE => size(b1)=BYTE_WIDTH&b1:seq1(BIT))) & (is_zero:BYTE-->BIT) & (is_zero=%w1.(w1:BYTE|bool_bit(bool(w1(1)=w1(2)&w1(2)=w1(3)&w1(3)=w1(4)&w1(4)=w1(5)&w1(5)=w1(6)&w1(6)=w1(7)&w1(7)=w1(8)&w1(8)=0)))) & (parity_even:BYTE-->BIT) & (parity_even=%bv.(bv:BYTE|1-bv(1)+bv(2)+bv(3)+bv(4)+bv(5)+bv(6)+bv(7)+bv(8) mod 2)) & (bv8_and=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_and(bt1(idx),bt2(idx))))) & (bv8_or=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_or(bt1(idx),bt2(idx))))) & (bv8_xor=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_xor(bt1(idx),bt2(idx))))) & (bv8get:BYTE*PHYS_BYTE_INDEX-->BIT) & (bv8get=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1(ii+1))) & (bitset:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitset=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,1)})) & (bitclear:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitclear=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,0)})) & (complement:BYTE-->BYTE) & (complement=%bt.(bt:BYTE|%idx.(idx:1..8|bit_not(bt(idx))))) & (swap:BYTE-->BYTE) & (swap=%bt.(bt:BYTE|{(1,bt(5)),(2,bt(6)),(3,bt(7)),(4,bt(8)),(5,bt(1)),(6,bt(2)),(7,bt(3)),(8,bt(4))})) & (rotateleft:BYTE-->BYTE) & (rotateleft=%bv.(bv:BYTE|{(1,bv(8)),(2,bv(1)),(3,bv(2)),(4,bv(3)),(5,bv(4)),(6,bv(5)),(7,bv(6)),(8,bv(7))})) & (rotateright:BYTE-->BYTE) & (rotateright=%bv.(bv:BYTE|{(1,bv(2)),(2,bv(3)),(3,bv(4)),(4,bv(5)),(5,bv(6)),(6,bv(7)),(7,bv(8)),(8,bv(1))})) & (get_upper_digit:BYTE-->0..15) & (get_upper_digit=%by.(by:BYTE|pow2_3*by(8)+pow2_2*by(7)+2*by(6)+by(5))) & (get_lower_digit:BYTE-->0..15) & (get_lower_digit=%by.(by:BYTE|pow2_3*by(4)+pow2_2*by(3)+2*by(2)+by(1))) & not(parity_even:BYTE-->BIT)
1.39570705E8,1.5397013833333334E8,-1.0,-1.0:not((BYTE_INDEX=1..BYTE_WIDTH) & (PHYS_BYTE_INDEX=0..BYTE_WIDTH-1) & (BYTE=BYTE_INDEX-->BIT) & (card(BYTE)=256) & (!b1.(b1:BYTE => size(b1)=BYTE_WIDTH&b1:seq1(BIT))) & (is_zero:BYTE-->BIT) & (is_zero=%w1.(w1:BYTE|bool_bit(bool(w1(1)=w1(2)&w1(2)=w1(3)&w1(3)=w1(4)&w1(4)=w1(5)&w1(5)=w1(6)&w1(6)=w1(7)&w1(7)=w1(8)&w1(8)=0)))) & (parity_even:BYTE-->BIT) & (parity_even=%bv.(bv:BYTE|1-bv(1)+bv(2)+bv(3)+bv(4)+bv(5)+bv(6)+bv(7)+bv(8) mod 2)) & (bv8_and=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_and(bt1(idx),bt2(idx))))) & (bv8_or=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_or(bt1(idx),bt2(idx))))) & (bv8_xor=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_xor(bt1(idx),bt2(idx))))) & (bv8get:BYTE*PHYS_BYTE_INDEX-->BIT) & (bv8get=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1(ii+1))) & (bitset:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitset=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,1)})) & (bitclear:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitclear=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,0)})) & (complement:BYTE-->BYTE) & (complement=%bt.(bt:BYTE|%idx.(idx:1..8|bit_not(bt(idx))))) & (swap:BYTE-->BYTE) & (swap=%bt.(bt:BYTE|{(1,bt(5)),(2,bt(6)),(3,bt(7)),(4,bt(8)),(5,bt(1)),(6,bt(2)),(7,bt(3)),(8,bt(4))})) & (rotateleft:BYTE-->BYTE) & (rotateleft=%bv.(bv:BYTE|{(1,bv(8)),(2,bv(1)),(3,bv(2)),(4,bv(3)),(5,bv(4)),(6,bv(5)),(7,bv(6)),(8,bv(7))})) & (rotateright:BYTE-->BYTE) & (rotateright=%bv.(bv:BYTE|{(1,bv(2)),(2,bv(3)),(3,bv(4)),(4,bv(5)),(5,bv(6)),(6,bv(7)),(7,bv(8)),(8,bv(1))})) & (get_upper_digit:BYTE-->0..15) & (get_upper_digit=%by.(by:BYTE|pow2_3*by(8)+pow2_2*by(7)+2*by(6)+by(5))) & (get_lower_digit:BYTE-->0..15) & (get_lower_digit=%by.(by:BYTE|pow2_3*by(4)+pow2_2*by(3)+2*by(2)+by(1)))) => parity_even:BYTE-->BIT
2.0054323933333334E8,2.1902242833333334E8,-1.0,-1.0:not((BYTE_INDEX=1..BYTE_WIDTH) & (PHYS_BYTE_INDEX=0..BYTE_WIDTH-1) & (BYTE=BYTE_INDEX-->BIT) & (card(BYTE)=256) & (!b1.(b1:BYTE => size(b1)=BYTE_WIDTH&b1:seq1(BIT))) & (is_zero:BYTE-->BIT) & (is_zero=%w1.(w1:BYTE|bool_bit(bool(w1(1)=w1(2)&w1(2)=w1(3)&w1(3)=w1(4)&w1(4)=w1(5)&w1(5)=w1(6)&w1(6)=w1(7)&w1(7)=w1(8)&w1(8)=0)))) & (parity_even:BYTE-->BIT) & (parity_even=%bv.(bv:BYTE|1-bv(1)+bv(2)+bv(3)+bv(4)+bv(5)+bv(6)+bv(7)+bv(8) mod 2)) & (bv8_and=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_and(bt1(idx),bt2(idx))))) & (bv8_or=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_or(bt1(idx),bt2(idx))))) & (bv8_xor=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_xor(bt1(idx),bt2(idx))))) & (bv8get:BYTE*PHYS_BYTE_INDEX-->BIT) & (bv8get=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1(ii+1))) & (bitset:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitset=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,1)})) & (bitclear:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitclear=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,0)})) & (complement:BYTE-->BYTE) & (complement=%bt.(bt:BYTE|%idx.(idx:1..8|bit_not(bt(idx))))) & (swap:BYTE-->BYTE) & (swap=%bt.(bt:BYTE|{(1,bt(5)),(2,bt(6)),(3,bt(7)),(4,bt(8)),(5,bt(1)),(6,bt(2)),(7,bt(3)),(8,bt(4))})) & (rotateleft:BYTE-->BYTE) & (rotateleft=%bv.(bv:BYTE|{(1,bv(8)),(2,bv(1)),(3,bv(2)),(4,bv(3)),(5,bv(4)),(6,bv(5)),(7,bv(6)),(8,bv(7))})) & (rotateright:BYTE-->BYTE) & (rotateright=%bv.(bv:BYTE|{(1,bv(2)),(2,bv(3)),(3,bv(4)),(4,bv(5)),(5,bv(6)),(6,bv(7)),(7,bv(8)),(8,bv(1))})) & (get_upper_digit:BYTE-->0..15) & (get_upper_digit=%by.(by:BYTE|pow2_3*by(8)+pow2_2*by(7)+2*by(6)+by(5))) & (get_lower_digit:BYTE-->0..15) & (get_lower_digit=%by.(by:BYTE|pow2_3*by(4)+pow2_2*by(3)+2*by(2)+by(1)))) => bv8_and:BYTE*BYTE-->BYTE
1.9565199866666666E8,2.17748244E8,-1.0,-1.0:not((BYTE_INDEX=1..BYTE_WIDTH) & (PHYS_BYTE_INDEX=0..BYTE_WIDTH-1) & (BYTE=BYTE_INDEX-->BIT) & (card(BYTE)=256) & (!b1.(b1:BYTE => size(b1)=BYTE_WIDTH&b1:seq1(BIT))) & (is_zero:BYTE-->BIT) & (is_zero=%w1.(w1:BYTE|bool_bit(bool(w1(1)=w1(2)&w1(2)=w1(3)&w1(3)=w1(4)&w1(4)=w1(5)&w1(5)=w1(6)&w1(6)=w1(7)&w1(7)=w1(8)&w1(8)=0)))) & (parity_even:BYTE-->BIT) & (parity_even=%bv.(bv:BYTE|1-bv(1)+bv(2)+bv(3)+bv(4)+bv(5)+bv(6)+bv(7)+bv(8) mod 2)) & (bv8_and=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_and(bt1(idx),bt2(idx))))) & (bv8_or=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_or(bt1(idx),bt2(idx))))) & (bv8_xor=%bt1,bt2.(bt1:BYTE&bt2:BYTE|%idx.(idx:1..8|bit_xor(bt1(idx),bt2(idx))))) & (bv8get:BYTE*PHYS_BYTE_INDEX-->BIT) & (bv8get=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1(ii+1))) & (bitset:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitset=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,1)})) & (bitclear:BYTE*PHYS_BYTE_INDEX-->BYTE) & (bitclear=%bt1,ii.(bt1:BYTE&ii:PHYS_BYTE_INDEX|bt1<+{(ii+1,0)})) & (complement:BYTE-->BYTE) & (complement=%bt.(bt:BYTE|%idx.(idx:1..8|bit_not(bt(idx))))) & (swap:BYTE-->BYTE) & (swap=%bt.(bt:BYTE|{(1,bt(5)),(2,bt(6)),(3,bt(7)),(4,bt(8)),(5,bt(1)),(6,bt(2)),(7,bt(3)),(8,bt(4))})) & (rotateleft:BYTE-->BYTE) & (rotateleft=%bv.(bv:BYTE|{(1,bv(8)),(2,bv(1)),(3,bv(2)),(4,bv(3)),(5,bv(4)),(6,bv(5)),(7,bv(6)),(8,bv(7))})) & (rotateright:BYTE-->BYTE) & (rotateright=%bv.(bv:BYTE|{(1,bv(2)),(2,bv(3)),(3,bv(4)),(4,bv(5)),(5,bv(6)),(6,bv(7)),(7,bv(8)),(8,bv(1))})) & (get_upper_digit:BYTE-->0..15) & (get_upper_digit=%by.(by:BYTE|pow2_3*by(8)+pow2_2*by(7)+2*by(6)+by(5))) & (get_lower_digit:BYTE-->0..15) & (get_lower_digit=%by.(by:BYTE|pow2_3*by(4)+pow2_2*by(3)+2*by(2)+by(1)))) => bv8_or:BYTE*BYTE-->BYTE
