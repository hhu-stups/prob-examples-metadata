#source:examples/prob_examples/public_examples/B/Tickets/Valerio1/BIT_DEFINITION.mch
2.3048543133333334E8,1.38565549E8,1.1462838033333333E8,3.8274376E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => (a:BIT) & (b:BIT)
2.1052637633333334E8,1.6412587566666666E8,1.2450235466666667E8,8.727605584666666E9:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => not((a:BIT) & (b:BIT))
2.3007159866666666E8,1.3108850433333333E8,1.1151904566666667E8,3.545288126666667E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => (a:BIT) & (b:BIT)
8.8729859E7,5.8706790666666664E7,-1.0,5.878014463333334E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not((a:BIT) & (b:BIT))
7.252879966666667E7,4.3414668666666664E7,8.7268011E7,3.518484206666667E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => not((a:BIT) & (b:BIT))
2.3332573733333334E8,1.3397723266666667E8,1.1294962866666667E8,3.741949776666667E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => (a:BIT) & (b:BIT)
8.807640066666667E7,6.879152233333333E7,-1.0,9.897176939E9:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not((a:BIT) & (b:BIT))
7.703020523333334E8,4.2631794333333336E7,8.4673547E7,3.42012463E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => not((a:BIT) & (b:BIT))
1.7283818E8,1.9447624366666666E8,1.0576689433333333E8,7.017081833333333E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(!bb.(bb:BIT => bit_not(bb)=1-bb))
7.6715528E7,4.24547E7,-1.0,7.24780132E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => !bb.(bb:BIT => bit_not(bb)=1-bb)
4.365271752666667E9,1.4288032E8,-1.0,5.423277403333334E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(dom(bit_and)=BIT*BIT)
1.0709939633333333E8,4.4466735E7,1.1595026633333333E8,3.249560573333333E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bit_and)=BIT*BIT
2.03739107E8,1.13315457E8,4.83051464E8,3.37300202E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => ran(bit_not)=BIT
1.6135829833333334E8,1.39188254E8,4.65188415E8,5.7649416666666664E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_not(0)=1)
1.6922261366666666E8,5.027849796666667E8,8.531904333333333E7,5.401260636666666E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_not(0)=1
1.6223594733333334E8,1.44853872E8,1.1129408766666667E8,5.8604659E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_not(1)=0)
1.0998332933333333E8,5.5603649E7,1.01536236E8,3.37886333E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_not(1)=0
1.7873434433333334E8,2.0360105366666666E8,1.2925493733333333E8,7.000087133333333E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(!bb.(bb:BIT => bit_not(bit_not(bb))=bb))
7.592411033333333E7,5.4848292333333336E7,-1.0,8.812019323333334E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => !bb.(bb:BIT => bit_not(bit_not(bb))=bb)
2.09904533E8,1.16517121E8,1.3309846666666667E8,3.4415382E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=1 <=> (b1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bit_and)=BIT*BIT
