#source:examples/prob_examples/public_examples/B/Tickets/Valerio3/BIT_DEFINITION.mch
1.8131307033333334E8,1.78422573E8,1.23078407E8,6.912308233333333E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(!bb.(bb:BIT => bit_not(bb)=1-bb))
7.351207166666667E7,4.2420851E7,-1.0,7.153013193333334E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => !bb.(bb:BIT => bit_not(bb)=1-bb)
1.9048621133333334E8,1.4016139933333334E8,-1.0,5.826404556666666E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(dom(bit_and)=BIT*BIT)
1.04575868E8,5.3922266666666664E7,1.44214475E8,3.23771829E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bit_and)=BIT*BIT
1.9234843533333334E8,1.0041616766666667E8,-1.0,8.08238976E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & ran(bit_not)=BIT
1.2147594566666667E8,8.521512E7,-1.0,5.812100823333334E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(ran(bit_not)=BIT)
7.026554633333333E7,6.5510146E7,6.1265914666666664E7,3.34976396E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => ran(bit_not)=BIT
1.7037268966666666E8,1.39458214E8,1.1200597966666667E8,5.7677772E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_not(0)=1)
1.0932973133333333E8,6.5368810666666664E7,6.4507761E7,3.737141666666667E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_not(0)=1
1.6514465033333334E8,1.3771807166666666E8,1.0590511033333333E8,5.7595848666666664E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_not(1)=0)
1.09991245E8,5.2741227333333336E7,7.671445733333333E7,3.533755E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_not(1)=0
1.7686967533333334E8,2.0968821066666666E8,1.29151852E8,6.890745866666667E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(!bb.(bb:BIT => bit_not(bit_not(bb))=bb))
7.379658166666667E7,4.4351822666666664E7,-1.0,7.41253456E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => !bb.(bb:BIT => bit_not(bit_not(bb))=bb)
2.721877083333333E8,1.45553868E8,-1.0,6.16134007E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(dom(bit_and)=BIT*BIT)
2.6693401433333334E8,1.17139477E8,4.614132376666667E8,3.28121311E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => dom(bit_and)=BIT*BIT
2.4571930533333334E8,1.4778229333333334E8,-1.0,5.948887543333334E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(ran(bit_and)=BIT)
7.290896866666667E7,5.4136563333333336E7,1.1122210466666667E8,3.22167388E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => ran(bit_and)=BIT
2.2601549666666666E8,1.4138092133333334E8,1.0374892433333333E8,9.560061166666667E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_and(0,0)=0)
7.310696866666667E7,5.5839224E7,9.7098148E7,3.382442933333333E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_and(0,0)=0
2.2185335166666666E8,1.4653234433333334E8,1.0684189166666667E8,9.608302833333333E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_and(0,1)=0)
7.2469551E7,4.2461312E7,1.1087683233333333E8,3.358971136666667E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_and(0,1)=0
2.2382015233333334E8,1.44597438E8,1.4000216133333334E8,7.113222966666667E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_and(1,0)=0)
8.2341686E7,5.3878615666666664E7,9.732487633333333E7,3.296091866666667E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_and(1,0)=0
6.5846664666666664E7,7.597842366666667E7,-1.0,4.000175346666667E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & bit_and(1,1)=1
5.6014315666666664E7,9.7310256E7,4.7820629333333336E7,9.834176566666667E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(bit_and(1,1)=1)
6.9299036E7,4.2826814666666664E7,8.7480747E7,3.2295301E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => bit_and(1,1)=1
8.622462866666667E7,6.0070767E7,-1.0,9.476906943333334E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & !b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=bit_and(b2,b1))
2.1109283533333334E8,1.2371098333333333E8,-1.0,9.181074166666666E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => !b1,b2.(b1:BIT&b2:BIT => bit_and(b1,b2)=bit_and(b2,b1))
9.461747866666667E7,5.7955065333333336E7,-1.0,3.95985947E8:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & !b1,b2.(b1:BIT&b2:BIT&bit_and(b1,b2)=1 => bit_and(b2,b1)=1)
6.4223157666666664E7,7.0732179E7,1.2650379633333333E8,7.6555778E7:(BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)}) & not(!b1,b2.(b1:BIT&b2:BIT&bit_and(b1,b2)=1 => bit_and(b2,b1)=1))
5.9386928E7,5.8737334666666664E7,-1.0,9.32659407E8:not((BIT=0..1) & (bit_not:BIT-->BIT) & (bit_not=%bb.(bb:BIT|1-bb)) & (bit_and:BIT*BIT-->BIT) & (!ba1,b2.(ba1:BIT&b2:BIT => bit_and(ba1,b2)=1 <=> (ba1=1&b2=1))) & (bit_or:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_or(b1,b2)=1 <=> (b1=1 or b2=1))) & (bit_xor:BIT*BIT-->BIT) & (!b1,b2.(b1:BIT&b2:BIT => bit_xor(b1,b2)=1 <=> b1/=b2)) & (bool_bit:BOOL-->BIT) & (bool_bit={(TRUE,1),(FALSE,0)})) => !b1,b2.(b1:BIT&b2:BIT&bit_and(b1,b2)=1 => bit_and(b2,b1)=1)
